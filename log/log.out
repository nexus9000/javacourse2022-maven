2023-01-20T21:11:03.348+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-20T21:11:03.375+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-20T21:11:03.381+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-20T21:11:03.390+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-20T21:11:03.509+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-20T21:11:03.515+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T09:47:11.251+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T09:47:11.280+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T09:47:11.284+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T09:47:11.291+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T09:47:11.406+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T09:47:11.448+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T09:48:55.346+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T09:48:55.376+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T09:48:55.379+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T09:48:55.387+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T09:48:55.498+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T09:48:55.501+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T09:48:55.638+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T09:48:55.639+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T09:48:55.649+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T09:48:56.593+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T09:48:56.621+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T09:48:56.632+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T09:48:56.659+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:48:56.659+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:48:56.660+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:48:56.661+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2023-01-21T09:48:56.663+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c4eee0
2023-01-21T09:48:56.664+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2023-01-21T09:48:56.666+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:48:56.666+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:48:56.667+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:48:56.668+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:48:56.669+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:48:56.669+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:48:56.671+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:48:56.672+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:48:56.672+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:48:56.674+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:48:56.674+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:48:56.674+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:48:56.677+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:48:56.677+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:48:56.677+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:48:56.679+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:48:56.680+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:48:56.680+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:48:56.682+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:48:56.683+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:48:56.683+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:48:56.685+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T09:48:56.685+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T09:48:56.687+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T09:48:56.687+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T09:48:56.689+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T09:48:56.689+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T09:48:56.690+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50378a4
2023-01-21T09:48:56.692+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@97e93f1
2023-01-21T09:48:56.693+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@782859e
2023-01-21T09:48:56.694+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@782859e
2023-01-21T09:48:56.695+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T09:48:56.695+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T09:48:56.803+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T09:48:56.803+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T09:48:56.809+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T09:48:56.810+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T09:48:56.813+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T09:48:56.813+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T09:48:56.817+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T09:48:56.817+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T09:48:56.836+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T09:48:56.837+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T09:48:56.840+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T09:48:56.840+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T09:48:56.844+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T09:48:56.847+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T09:48:56.850+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T09:48:56.851+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T09:48:56.853+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T09:48:56.853+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T09:48:56.855+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:48:56.855+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:48:56.855+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:48:56.858+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d5620ce
2023-01-21T09:48:56.860+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:48:56.860+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:48:56.861+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:48:56.862+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13526e59
2023-01-21T09:48:56.863+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T09:48:56.864+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T09:48:56.865+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T09:48:56.866+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T09:48:56.868+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T09:48:56.869+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T09:48:56.870+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T09:48:56.871+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T09:48:56.873+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T09:48:56.873+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T09:48:56.874+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7758be
2023-01-21T09:48:56.875+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:48:56.876+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:48:56.876+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:48:56.878+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:48:56.879+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:48:56.879+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:48:56.881+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4149c063
2023-01-21T09:48:56.883+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53f3bdbd
2023-01-21T09:48:56.885+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:48:56.886+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:48:56.886+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:48:56.888+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:48:56.888+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:48:56.889+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:48:56.890+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@4c5ae43b
2023-01-21T09:48:56.891+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@747f281
2023-01-21T09:48:56.919+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T09:48:56.920+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T09:48:56.921+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f666ebb
2023-01-21T09:48:56.926+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T09:48:56.926+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T09:48:56.930+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@23202fce
2023-01-21T09:48:56.930+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23202fce
2023-01-21T09:48:56.931+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d6025c5
2023-01-21T09:48:56.932+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a7ed1f
2023-01-21T09:48:56.935+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3116c353
2023-01-21T09:48:56.939+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T09:48:56.939+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T09:48:56.940+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a00d9cf
2023-01-21T09:48:56.941+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6736fa8d
2023-01-21T09:48:56.941+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T09:48:56.941+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T09:48:56.941+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T09:48:56.942+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T09:48:56.942+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T09:48:56.942+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T09:48:56.954+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T09:48:57.007+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost/database]
2023-01-21T09:48:57.008+0200 INFO HHH10001001: Connection properties: {password=password, user=root}
2023-01-21T09:48:57.019+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T09:48:57.029+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T09:48:57.030+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T09:57:34.638+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T09:57:34.689+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T09:57:34.692+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T09:57:34.702+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T09:57:34.802+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T09:57:34.805+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T09:57:34.861+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T09:57:34.861+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T09:57:34.867+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T09:57:35.387+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T09:57:35.409+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T09:57:35.418+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T09:57:35.437+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:57:35.437+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:57:35.437+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:57:35.438+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2023-01-21T09:57:35.439+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c4eee0
2023-01-21T09:57:35.440+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2023-01-21T09:57:35.441+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:57:35.442+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:57:35.442+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:57:35.444+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:57:35.445+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:57:35.445+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:57:35.447+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:57:35.447+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:57:35.448+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:57:35.449+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:57:35.449+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:57:35.450+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:57:35.451+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:57:35.451+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:57:35.452+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:57:35.453+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:57:35.453+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:57:35.453+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:57:35.455+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:57:35.455+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:57:35.455+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:57:35.456+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T09:57:35.457+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T09:57:35.458+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T09:57:35.459+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T09:57:35.460+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T09:57:35.460+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T09:57:35.462+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50378a4
2023-01-21T09:57:35.463+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@97e93f1
2023-01-21T09:57:35.464+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@782859e
2023-01-21T09:57:35.464+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@782859e
2023-01-21T09:57:35.465+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T09:57:35.465+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T09:57:35.469+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T09:57:35.469+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T09:57:35.471+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T09:57:35.471+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T09:57:35.473+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T09:57:35.473+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T09:57:35.474+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T09:57:35.474+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T09:57:35.476+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T09:57:35.477+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T09:57:35.480+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T09:57:35.481+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T09:57:35.484+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T09:57:35.485+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T09:57:35.487+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T09:57:35.487+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T09:57:35.489+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T09:57:35.489+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T09:57:35.492+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:57:35.492+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:57:35.493+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:57:35.496+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d5620ce
2023-01-21T09:57:35.498+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:57:35.500+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:57:35.500+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:57:35.501+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13526e59
2023-01-21T09:57:35.502+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T09:57:35.502+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T09:57:35.504+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T09:57:35.504+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T09:57:35.506+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T09:57:35.506+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T09:57:35.508+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T09:57:35.509+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T09:57:35.512+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T09:57:35.513+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T09:57:35.515+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7758be
2023-01-21T09:57:35.519+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:57:35.524+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:57:35.525+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:57:35.533+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:57:35.535+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:57:35.536+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:57:35.542+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4149c063
2023-01-21T09:57:35.544+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53f3bdbd
2023-01-21T09:57:35.547+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:57:35.547+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:57:35.548+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:57:35.549+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:57:35.550+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:57:35.550+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:57:35.553+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@4c5ae43b
2023-01-21T09:57:35.554+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@747f281
2023-01-21T09:57:35.558+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T09:57:35.558+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T09:57:35.559+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f666ebb
2023-01-21T09:57:35.563+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T09:57:35.563+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T09:57:35.567+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@23202fce
2023-01-21T09:57:35.568+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23202fce
2023-01-21T09:57:35.568+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d6025c5
2023-01-21T09:57:35.570+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a7ed1f
2023-01-21T09:57:35.572+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3116c353
2023-01-21T09:57:35.575+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T09:57:35.576+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T09:57:35.577+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a00d9cf
2023-01-21T09:57:35.577+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6736fa8d
2023-01-21T09:57:35.577+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T09:57:35.578+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T09:57:35.578+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T09:57:35.578+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T09:57:35.579+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T09:57:35.579+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T09:57:35.599+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T09:57:35.626+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/albums]
2023-01-21T09:57:35.626+0200 INFO HHH10001001: Connection properties: {password=password, user=root}
2023-01-21T09:57:35.631+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T09:57:35.643+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T09:57:35.644+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T09:57:49.323+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T09:57:49.345+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T09:57:49.348+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T09:57:49.354+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T09:57:49.436+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T09:57:49.438+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T09:57:49.483+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T09:57:49.484+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T09:57:49.489+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T09:57:49.764+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T09:57:49.786+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T09:57:49.794+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T09:57:49.811+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:57:49.811+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:57:49.811+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:57:49.812+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2023-01-21T09:57:49.813+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c4eee0
2023-01-21T09:57:49.814+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2023-01-21T09:57:49.816+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:57:49.817+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:57:49.817+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:57:49.819+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:57:49.819+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:57:49.820+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:57:49.821+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:57:49.822+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:57:49.822+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:57:49.824+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:57:49.825+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:57:49.825+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:57:49.827+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:57:49.827+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:57:49.827+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:57:49.829+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:57:49.829+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:57:49.829+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:57:49.830+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:57:49.830+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:57:49.831+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:57:49.832+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T09:57:49.832+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T09:57:49.833+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T09:57:49.833+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T09:57:49.834+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T09:57:49.834+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T09:57:49.835+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50378a4
2023-01-21T09:57:49.835+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@97e93f1
2023-01-21T09:57:49.836+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@782859e
2023-01-21T09:57:49.836+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@782859e
2023-01-21T09:57:49.837+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T09:57:49.837+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T09:57:49.841+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T09:57:49.841+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T09:57:49.843+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T09:57:49.843+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T09:57:49.844+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T09:57:49.844+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T09:57:49.846+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T09:57:49.846+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T09:57:49.847+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T09:57:49.847+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T09:57:49.849+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T09:57:49.849+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T09:57:49.851+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T09:57:49.851+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T09:57:49.853+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T09:57:49.853+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T09:57:49.855+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T09:57:49.855+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T09:57:49.856+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:57:49.856+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:57:49.856+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:57:49.858+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d5620ce
2023-01-21T09:57:49.859+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:57:49.859+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:57:49.859+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:57:49.860+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13526e59
2023-01-21T09:57:49.860+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T09:57:49.861+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T09:57:49.861+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T09:57:49.862+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T09:57:49.863+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T09:57:49.863+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T09:57:49.864+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T09:57:49.864+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T09:57:49.865+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T09:57:49.866+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T09:57:49.866+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7758be
2023-01-21T09:57:49.867+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:57:49.867+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:57:49.867+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:57:49.868+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:57:49.868+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:57:49.869+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:57:49.870+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4149c063
2023-01-21T09:57:49.871+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53f3bdbd
2023-01-21T09:57:49.872+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:57:49.872+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:57:49.872+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:57:49.873+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:57:49.874+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:57:49.874+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:57:49.875+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@4c5ae43b
2023-01-21T09:57:49.875+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@747f281
2023-01-21T09:57:49.878+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T09:57:49.879+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T09:57:49.879+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f666ebb
2023-01-21T09:57:49.882+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T09:57:49.882+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T09:57:49.885+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@23202fce
2023-01-21T09:57:49.885+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23202fce
2023-01-21T09:57:49.885+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d6025c5
2023-01-21T09:57:49.886+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a7ed1f
2023-01-21T09:57:49.887+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3116c353
2023-01-21T09:57:49.890+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T09:57:49.890+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T09:57:49.891+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a00d9cf
2023-01-21T09:57:49.891+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6736fa8d
2023-01-21T09:57:49.891+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T09:57:49.891+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T09:57:49.891+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T09:57:49.892+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T09:57:49.892+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T09:57:49.892+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T09:57:49.902+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T09:57:49.909+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/albums]
2023-01-21T09:57:49.909+0200 INFO HHH10001001: Connection properties: {password=password, user=root}
2023-01-21T09:57:49.909+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T09:57:49.912+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T09:57:49.912+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T09:58:35.248+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T09:58:35.274+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T09:58:35.276+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T09:58:35.283+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T09:58:35.379+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T09:58:35.381+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T09:58:35.430+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T09:58:35.431+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T09:58:35.439+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T09:58:35.808+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T09:58:35.843+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T09:58:35.860+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T09:58:35.891+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:58:35.891+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:58:35.892+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:58:35.893+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2023-01-21T09:58:35.895+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c4eee0
2023-01-21T09:58:35.899+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2023-01-21T09:58:35.902+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:58:35.902+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:58:35.903+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:58:35.904+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:58:35.905+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:58:35.905+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:58:35.908+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:58:35.908+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:58:35.908+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:58:35.910+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:58:35.910+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:58:35.911+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:58:35.914+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:58:35.914+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:58:35.915+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:58:35.917+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:58:35.918+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:58:35.918+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:58:35.920+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:58:35.921+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:58:35.921+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:58:35.923+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T09:58:35.924+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T09:58:35.926+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T09:58:35.926+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T09:58:35.929+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T09:58:35.929+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T09:58:35.931+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50378a4
2023-01-21T09:58:35.933+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@97e93f1
2023-01-21T09:58:35.934+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@782859e
2023-01-21T09:58:35.935+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@782859e
2023-01-21T09:58:35.936+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T09:58:35.937+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T09:58:35.943+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T09:58:35.944+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T09:58:35.946+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T09:58:35.947+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T09:58:35.951+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T09:58:35.952+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T09:58:35.954+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T09:58:35.954+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T09:58:35.957+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T09:58:35.957+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T09:58:35.959+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T09:58:35.960+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T09:58:35.963+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T09:58:35.964+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T09:58:35.967+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T09:58:35.967+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T09:58:35.969+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T09:58:35.970+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T09:58:35.971+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:58:35.972+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:58:35.972+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:58:35.974+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d5620ce
2023-01-21T09:58:35.976+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:58:35.976+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:58:35.977+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:58:35.978+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13526e59
2023-01-21T09:58:35.988+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T09:58:35.988+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T09:58:35.990+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T09:58:35.990+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T09:58:35.992+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T09:58:35.993+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T09:58:35.994+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T09:58:35.995+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T09:58:35.997+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T09:58:35.997+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T09:58:35.998+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7758be
2023-01-21T09:58:36.000+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:58:36.001+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:58:36.001+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:58:36.002+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:58:36.003+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:58:36.003+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:58:36.005+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4149c063
2023-01-21T09:58:36.006+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53f3bdbd
2023-01-21T09:58:36.008+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:58:36.008+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:58:36.008+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:58:36.010+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:58:36.010+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:58:36.010+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:58:36.011+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@4c5ae43b
2023-01-21T09:58:36.013+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@747f281
2023-01-21T09:58:36.018+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T09:58:36.018+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T09:58:36.019+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f666ebb
2023-01-21T09:58:36.024+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T09:58:36.025+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T09:58:36.029+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@23202fce
2023-01-21T09:58:36.029+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23202fce
2023-01-21T09:58:36.030+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d6025c5
2023-01-21T09:58:36.032+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a7ed1f
2023-01-21T09:58:36.035+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3116c353
2023-01-21T09:58:36.040+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T09:58:36.040+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T09:58:36.041+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a00d9cf
2023-01-21T09:58:36.041+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6736fa8d
2023-01-21T09:58:36.042+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T09:58:36.042+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T09:58:36.042+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T09:58:36.042+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T09:58:36.043+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T09:58:36.044+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T09:58:36.063+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T09:58:36.077+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T09:58:36.077+0200 INFO HHH10001001: Connection properties: {password=password, user=root}
2023-01-21T09:58:36.079+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T09:58:36.086+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T09:58:36.086+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T09:59:25.035+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T09:59:25.059+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T09:59:25.061+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T09:59:25.068+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T09:59:25.153+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T09:59:25.156+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T09:59:25.206+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T09:59:25.206+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T09:59:25.213+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T09:59:25.502+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T09:59:25.524+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T09:59:25.533+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T09:59:25.553+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:59:25.553+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:59:25.553+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T09:59:25.554+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2023-01-21T09:59:25.556+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c4eee0
2023-01-21T09:59:25.557+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2023-01-21T09:59:25.559+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:59:25.559+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:59:25.559+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T09:59:25.561+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:59:25.561+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:59:25.561+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66982506
2023-01-21T09:59:25.563+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:59:25.563+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:59:25.563+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T09:59:25.565+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:59:25.565+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:59:25.565+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T09:59:25.567+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:59:25.567+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:59:25.567+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@740fb309
2023-01-21T09:59:25.569+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:59:25.569+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:59:25.569+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T09:59:25.570+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:59:25.571+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:59:25.571+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T09:59:25.572+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T09:59:25.572+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T09:59:25.573+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T09:59:25.573+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T09:59:25.574+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T09:59:25.574+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T09:59:25.575+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50378a4
2023-01-21T09:59:25.576+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@97e93f1
2023-01-21T09:59:25.577+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@782859e
2023-01-21T09:59:25.577+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@782859e
2023-01-21T09:59:25.578+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T09:59:25.578+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T09:59:25.581+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T09:59:25.581+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T09:59:25.583+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T09:59:25.583+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T09:59:25.584+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T09:59:25.584+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T09:59:25.586+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T09:59:25.586+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T09:59:25.587+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T09:59:25.588+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T09:59:25.589+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T09:59:25.589+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T09:59:25.591+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T09:59:25.591+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T09:59:25.592+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T09:59:25.592+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T09:59:25.593+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T09:59:25.594+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T09:59:25.595+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:59:25.595+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:59:25.595+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T09:59:25.597+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d5620ce
2023-01-21T09:59:25.599+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:59:25.599+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:59:25.599+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T09:59:25.600+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13526e59
2023-01-21T09:59:25.601+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T09:59:25.602+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T09:59:25.603+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T09:59:25.604+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T09:59:25.605+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T09:59:25.605+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T09:59:25.607+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T09:59:25.607+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T09:59:25.608+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T09:59:25.609+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T09:59:25.609+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7758be
2023-01-21T09:59:25.611+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:59:25.611+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:59:25.612+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T09:59:25.613+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:59:25.614+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:59:25.614+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T09:59:25.615+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4149c063
2023-01-21T09:59:25.616+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53f3bdbd
2023-01-21T09:59:25.618+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:59:25.619+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:59:25.619+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T09:59:25.621+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:59:25.621+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:59:25.621+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T09:59:25.622+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@4c5ae43b
2023-01-21T09:59:25.624+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@747f281
2023-01-21T09:59:25.629+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T09:59:25.629+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T09:59:25.629+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f666ebb
2023-01-21T09:59:25.633+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T09:59:25.633+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T09:59:25.638+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@23202fce
2023-01-21T09:59:25.639+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23202fce
2023-01-21T09:59:25.639+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d6025c5
2023-01-21T09:59:25.640+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a7ed1f
2023-01-21T09:59:25.642+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3116c353
2023-01-21T09:59:25.646+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T09:59:25.646+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T09:59:25.647+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a00d9cf
2023-01-21T09:59:25.647+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6736fa8d
2023-01-21T09:59:25.648+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T09:59:25.648+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T09:59:25.648+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T09:59:25.649+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T09:59:25.650+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T09:59:25.650+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T09:59:25.665+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T09:59:25.674+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T09:59:25.675+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T09:59:25.675+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T09:59:25.678+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T09:59:25.678+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T09:59:26.345+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T09:59:26.345+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T09:59:26.345+0200 DEBUG JDBC version : 4.2
2023-01-21T09:59:26.349+0200 WARN HHH000342: Could not obtain connection to query metadata : Unable to resolve name [org.hibernate.dialect.MySQL8Dialect] as strategy [org.hibernate.dialect.Dialect]
2023-01-21T09:59:56.355+0200 DEBUG Connection pool now considered primed; min-size will be maintained
2023-01-21T10:01:40.382+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T10:01:40.407+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T10:01:40.409+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T10:01:40.416+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T10:01:40.504+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T10:01:40.520+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T10:01:40.579+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T10:01:40.579+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T10:01:40.586+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T10:01:41.003+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T10:01:41.027+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T10:01:41.035+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T10:01:41.055+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:01:41.055+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:01:41.056+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:01:41.057+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2023-01-21T10:01:41.058+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c4eee0
2023-01-21T10:01:41.059+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2023-01-21T10:01:41.060+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:01:41.061+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:01:41.061+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:01:41.063+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:01:41.063+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:01:41.063+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:01:41.065+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:01:41.065+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:01:41.066+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:01:41.067+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:01:41.068+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:01:41.068+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:01:41.070+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:01:41.070+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:01:41.071+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:01:41.072+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:01:41.073+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:01:41.073+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:01:41.074+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:01:41.074+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:01:41.074+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:01:41.076+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:01:41.076+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:01:41.078+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:01:41.078+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:01:41.079+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:01:41.080+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:01:41.081+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50378a4
2023-01-21T10:01:41.081+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@97e93f1
2023-01-21T10:01:41.082+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@782859e
2023-01-21T10:01:41.083+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@782859e
2023-01-21T10:01:41.084+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:01:41.084+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:01:41.089+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:01:41.090+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:01:41.092+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:01:41.092+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:01:41.097+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:01:41.098+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:01:41.100+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:01:41.101+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:01:41.103+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:01:41.103+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:01:41.106+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:01:41.106+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:01:41.109+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:01:41.109+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:01:41.111+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:01:41.112+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:01:41.113+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:01:41.113+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:01:41.114+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:01:41.114+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:01:41.114+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:01:41.115+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d5620ce
2023-01-21T10:01:41.116+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:01:41.116+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:01:41.116+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:01:41.117+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13526e59
2023-01-21T10:01:41.118+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:01:41.118+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:01:41.119+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:01:41.119+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:01:41.120+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:01:41.120+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:01:41.121+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:01:41.121+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:01:41.123+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:01:41.123+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:01:41.123+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7758be
2023-01-21T10:01:41.124+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:01:41.124+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:01:41.124+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:01:41.125+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:01:41.125+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:01:41.125+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:01:41.126+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4149c063
2023-01-21T10:01:41.127+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53f3bdbd
2023-01-21T10:01:41.128+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:01:41.128+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:01:41.128+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:01:41.129+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:01:41.129+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:01:41.129+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:01:41.130+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@4c5ae43b
2023-01-21T10:01:41.131+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@747f281
2023-01-21T10:01:41.135+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:01:41.135+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:01:41.135+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f666ebb
2023-01-21T10:01:41.138+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:01:41.138+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:01:41.141+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:01:41.141+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:01:41.141+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d6025c5
2023-01-21T10:01:41.142+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a7ed1f
2023-01-21T10:01:41.144+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3116c353
2023-01-21T10:01:41.148+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:01:41.148+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:01:41.149+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a00d9cf
2023-01-21T10:01:41.149+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6736fa8d
2023-01-21T10:01:41.149+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T10:01:41.150+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T10:01:41.150+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T10:01:41.150+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T10:01:41.151+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T10:01:41.151+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T10:01:41.159+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T10:01:41.165+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T10:01:41.166+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T10:01:41.166+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T10:01:41.169+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T10:01:41.169+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T10:01:41.728+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T10:01:41.729+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T10:01:41.729+0200 DEBUG JDBC version : 4.2
2023-01-21T10:01:41.738+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T10:01:42.145+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T10:01:42.146+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T10:01:42.179+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T10:01:42.180+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T10:01:42.181+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:01:42.181+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:01:42.181+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T10:01:42.183+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T10:01:42.183+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T10:01:42.185+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:01:42.186+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T10:01:42.187+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T10:01:42.187+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T10:01:42.188+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T10:01:42.188+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:01:42.189+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T10:01:42.212+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T10:01:42.268+0200 DEBUG Building session factory
2023-01-21T10:01:42.269+0200 DEBUG SessionFactory name : null
2023-01-21T10:01:42.270+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T10:01:42.270+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T10:01:42.270+0200 DEBUG Statistics: disabled
2023-01-21T10:01:42.270+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T10:01:42.271+0200 DEBUG Default entity-mode: pojo
2023-01-21T10:01:42.271+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T10:01:42.271+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T10:01:42.271+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T10:01:42.271+0200 DEBUG Default batch fetch size: -1
2023-01-21T10:01:42.272+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T10:01:42.272+0200 DEBUG Default null ordering: NONE
2023-01-21T10:01:42.272+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T10:01:42.272+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T10:01:42.272+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T10:01:42.272+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T10:01:42.273+0200 DEBUG Query language substitutions: {}
2023-01-21T10:01:42.273+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T10:01:42.273+0200 DEBUG Named query checking : enabled
2023-01-21T10:01:42.273+0200 DEBUG Second-level cache: enabled
2023-01-21T10:01:42.273+0200 DEBUG Second-level query cache: disabled
2023-01-21T10:01:42.273+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@241a0c3a
2023-01-21T10:01:42.273+0200 DEBUG Second-level cache region prefix: null
2023-01-21T10:01:42.274+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T10:01:42.274+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T10:01:42.274+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T10:01:42.274+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T10:01:42.274+0200 DEBUG JDBC batch size: 15
2023-01-21T10:01:42.274+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T10:01:42.274+0200 DEBUG Scrollable result sets: enabled
2023-01-21T10:01:42.275+0200 DEBUG Wrap result sets: disabled
2023-01-21T10:01:42.275+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T10:01:42.275+0200 DEBUG JDBC result set fetch size: null
2023-01-21T10:01:42.275+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T10:01:42.275+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T10:01:42.326+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T10:01:42.326+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@71c905a3, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T10:01:42.336+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T10:01:42.338+0200 DEBUG Instantiated session factory
2023-01-21T10:01:42.400+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2227a6c1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-21T10:01:42.478+0200 DEBUG Checking 0 named HQL queries
2023-01-21T10:01:42.478+0200 DEBUG Checking 0 named SQL queries
2023-01-21T10:01:42.481+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@51e0301d
2023-01-21T10:01:42.493+0200 DEBUG Registering SessionFactory: 985a0639-c688-4ae7-82cc-2f14ed884117 (<unnamed>)
2023-01-21T10:01:42.493+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-21T10:01:42.549+0200 DEBUG Statistics initialized [enabled=false]
2023-01-21T10:01:42.554+0200 DEBUG begin
2023-01-21T10:02:54.166+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T10:02:54.206+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T10:02:54.210+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T10:02:54.219+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T10:02:54.325+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T10:02:54.328+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T10:02:54.400+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T10:02:54.401+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T10:02:54.412+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T10:02:54.766+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T10:02:54.799+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T10:02:54.812+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T10:02:54.840+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:02:54.841+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:02:54.841+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:02:54.843+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2023-01-21T10:02:54.844+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c4eee0
2023-01-21T10:02:54.845+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2023-01-21T10:02:54.848+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:02:54.848+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:02:54.849+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:02:54.850+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:02:54.851+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:02:54.851+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:02:54.853+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:02:54.853+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:02:54.854+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:02:54.855+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:02:54.856+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:02:54.856+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:02:54.858+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:02:54.858+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:02:54.858+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:02:54.860+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:02:54.860+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:02:54.860+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:02:54.862+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:02:54.862+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:02:54.862+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:02:54.864+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:02:54.864+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:02:54.865+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:02:54.866+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:02:54.867+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:02:54.867+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:02:54.868+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50378a4
2023-01-21T10:02:54.869+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@97e93f1
2023-01-21T10:02:54.870+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@782859e
2023-01-21T10:02:54.870+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@782859e
2023-01-21T10:02:54.872+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:02:54.872+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:02:54.877+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:02:54.877+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:02:54.878+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:02:54.879+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:02:54.880+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:02:54.880+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:02:54.882+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:02:54.882+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:02:54.884+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:02:54.884+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:02:54.886+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:02:54.886+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:02:54.888+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:02:54.889+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:02:54.890+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:02:54.890+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:02:54.892+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:02:54.892+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:02:54.893+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:02:54.893+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:02:54.893+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:02:54.895+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d5620ce
2023-01-21T10:02:54.896+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:02:54.896+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:02:54.896+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:02:54.897+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13526e59
2023-01-21T10:02:54.898+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:02:54.899+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:02:54.900+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:02:54.901+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:02:54.902+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:02:54.902+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:02:54.903+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:02:54.903+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:02:54.904+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:02:54.904+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:02:54.905+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7758be
2023-01-21T10:02:54.907+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:02:54.907+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:02:54.907+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:02:54.908+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:02:54.908+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:02:54.909+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:02:54.910+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4149c063
2023-01-21T10:02:54.911+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53f3bdbd
2023-01-21T10:02:54.912+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:02:54.912+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:02:54.913+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:02:54.914+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:02:54.914+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:02:54.914+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:02:54.915+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@4c5ae43b
2023-01-21T10:02:54.916+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@747f281
2023-01-21T10:02:54.921+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:02:54.921+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:02:54.921+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f666ebb
2023-01-21T10:02:54.926+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:02:54.926+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:02:54.929+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:02:54.930+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:02:54.931+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d6025c5
2023-01-21T10:02:54.931+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a7ed1f
2023-01-21T10:02:54.933+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3116c353
2023-01-21T10:02:54.937+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:02:54.937+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:02:54.938+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a00d9cf
2023-01-21T10:02:54.938+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6736fa8d
2023-01-21T10:02:54.939+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T10:02:54.939+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T10:02:54.939+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T10:02:54.939+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T10:02:54.940+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T10:02:54.940+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T10:02:54.950+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T10:02:54.959+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T10:02:54.959+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T10:02:54.960+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T10:02:54.963+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T10:02:54.964+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T10:02:55.528+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T10:02:55.528+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T10:02:55.528+0200 DEBUG JDBC version : 4.2
2023-01-21T10:02:55.537+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T10:02:55.586+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T10:02:55.588+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T10:02:55.632+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T10:02:55.633+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T10:02:55.634+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:02:55.634+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:02:55.635+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T10:02:55.637+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T10:02:55.638+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T10:02:55.640+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:02:55.641+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T10:02:55.642+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T10:02:55.643+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T10:02:55.644+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T10:02:55.644+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:02:55.646+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T10:02:55.681+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T10:02:55.786+0200 DEBUG Building session factory
2023-01-21T10:02:55.788+0200 DEBUG SessionFactory name : null
2023-01-21T10:02:55.788+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T10:02:55.790+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T10:02:55.791+0200 DEBUG Statistics: disabled
2023-01-21T10:02:55.792+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T10:02:55.792+0200 DEBUG Default entity-mode: pojo
2023-01-21T10:02:55.793+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T10:02:55.793+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T10:02:55.793+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T10:02:55.794+0200 DEBUG Default batch fetch size: -1
2023-01-21T10:02:55.794+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T10:02:55.795+0200 DEBUG Default null ordering: NONE
2023-01-21T10:02:55.795+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T10:02:55.795+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T10:02:55.796+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T10:02:55.796+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T10:02:55.797+0200 DEBUG Query language substitutions: {}
2023-01-21T10:02:55.798+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T10:02:55.798+0200 DEBUG Named query checking : enabled
2023-01-21T10:02:55.800+0200 DEBUG Second-level cache: enabled
2023-01-21T10:02:55.801+0200 DEBUG Second-level query cache: disabled
2023-01-21T10:02:55.801+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@241a0c3a
2023-01-21T10:02:55.801+0200 DEBUG Second-level cache region prefix: null
2023-01-21T10:02:55.802+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T10:02:55.802+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T10:02:55.802+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T10:02:55.803+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T10:02:55.803+0200 DEBUG JDBC batch size: 15
2023-01-21T10:02:55.805+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T10:02:55.806+0200 DEBUG Scrollable result sets: enabled
2023-01-21T10:02:55.806+0200 DEBUG Wrap result sets: disabled
2023-01-21T10:02:55.807+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T10:02:55.807+0200 DEBUG JDBC result set fetch size: null
2023-01-21T10:02:55.807+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T10:02:55.807+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T10:02:55.891+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T10:02:55.891+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@71c905a3, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T10:02:55.905+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T10:02:55.907+0200 DEBUG Instantiated session factory
2023-01-21T10:02:55.966+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2227a6c1] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-21T10:02:56.061+0200 DEBUG Checking 0 named HQL queries
2023-01-21T10:02:56.061+0200 DEBUG Checking 0 named SQL queries
2023-01-21T10:02:56.065+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@51e0301d
2023-01-21T10:02:56.073+0200 DEBUG Registering SessionFactory: a728a1ae-c4bc-4c8e-b454-16c5231be037 (<unnamed>)
2023-01-21T10:02:56.076+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-21T10:02:56.143+0200 DEBUG Statistics initialized [enabled=false]
2023-01-21T10:02:56.148+0200 DEBUG begin
2023-01-21T10:34:26.444+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T10:34:26.474+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T10:34:26.477+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T10:34:26.483+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T10:34:26.604+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T10:34:26.607+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T10:34:26.658+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T10:34:26.658+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T10:34:26.664+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T10:34:27.054+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T10:34:27.132+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T10:34:27.143+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T10:34:27.185+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:34:27.186+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:34:27.186+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:34:27.187+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2023-01-21T10:34:27.189+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c4eee0
2023-01-21T10:34:27.191+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2023-01-21T10:34:27.214+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:34:27.215+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:34:27.215+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:34:27.217+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:34:27.217+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:34:27.219+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:34:27.221+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:34:27.222+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:34:27.223+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:34:27.224+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:34:27.225+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:34:27.225+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:34:27.227+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:34:27.227+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:34:27.228+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:34:27.230+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:34:27.231+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:34:27.231+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:34:27.233+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:34:27.233+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:34:27.233+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:34:27.235+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:34:27.235+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:34:27.236+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:34:27.237+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:34:27.238+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:34:27.238+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:34:27.239+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50378a4
2023-01-21T10:34:27.241+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@97e93f1
2023-01-21T10:34:27.242+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@782859e
2023-01-21T10:34:27.242+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@782859e
2023-01-21T10:34:27.243+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:34:27.244+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:34:27.253+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:34:27.254+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:34:27.257+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:34:27.257+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:34:27.260+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:34:27.261+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:34:27.263+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:34:27.263+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:34:27.266+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:34:27.267+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:34:27.269+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:34:27.269+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:34:27.273+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:34:27.273+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:34:27.279+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:34:27.280+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:34:27.282+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:34:27.282+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:34:27.284+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:34:27.285+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:34:27.286+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:34:27.291+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d5620ce
2023-01-21T10:34:27.294+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:34:27.298+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:34:27.300+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:34:27.303+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13526e59
2023-01-21T10:34:27.343+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:34:27.344+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:34:27.350+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:34:27.351+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:34:27.353+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:34:27.353+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:34:27.354+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:34:27.355+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:34:27.359+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:34:27.359+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:34:27.362+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7758be
2023-01-21T10:34:27.364+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:34:27.365+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:34:27.365+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:34:27.367+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:34:27.368+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:34:27.368+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:34:27.372+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4149c063
2023-01-21T10:34:27.373+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53f3bdbd
2023-01-21T10:34:27.375+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:34:27.375+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:34:27.375+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:34:27.377+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:34:27.377+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:34:27.378+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:34:27.379+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@4c5ae43b
2023-01-21T10:34:27.380+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@747f281
2023-01-21T10:34:27.385+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:34:27.385+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:34:27.385+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f666ebb
2023-01-21T10:34:27.390+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:34:27.391+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:34:27.396+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:34:27.396+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:34:27.397+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d6025c5
2023-01-21T10:34:27.398+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a7ed1f
2023-01-21T10:34:27.400+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3116c353
2023-01-21T10:34:27.404+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:34:27.404+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:34:27.405+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a00d9cf
2023-01-21T10:34:27.406+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6736fa8d
2023-01-21T10:34:27.406+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T10:34:27.406+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T10:34:27.407+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T10:34:27.407+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T10:34:27.407+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T10:34:27.407+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T10:34:27.421+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T10:34:27.435+0200 INFO HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T10:34:27.435+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T10:34:27.435+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T10:34:27.439+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T10:34:27.439+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T10:34:28.237+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T10:34:28.238+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T10:34:28.238+0200 DEBUG JDBC version : 4.2
2023-01-21T10:34:28.252+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T10:34:28.335+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T10:34:28.337+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T10:34:28.376+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T10:34:28.376+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T10:34:28.377+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:34:28.377+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:34:28.378+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T10:34:28.380+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T10:34:28.381+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T10:34:28.382+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:34:28.384+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T10:34:28.385+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T10:34:28.386+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T10:34:28.386+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T10:34:28.387+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:34:28.387+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T10:34:28.417+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T10:34:28.547+0200 DEBUG Building session factory
2023-01-21T10:34:28.548+0200 DEBUG SessionFactory name : null
2023-01-21T10:34:28.548+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T10:34:28.549+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T10:34:28.549+0200 DEBUG Statistics: disabled
2023-01-21T10:34:28.550+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T10:34:28.550+0200 DEBUG Default entity-mode: pojo
2023-01-21T10:34:28.550+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T10:34:28.550+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T10:34:28.550+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T10:34:28.550+0200 DEBUG Default batch fetch size: -1
2023-01-21T10:34:28.551+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T10:34:28.551+0200 DEBUG Default null ordering: NONE
2023-01-21T10:34:28.551+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T10:34:28.551+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T10:34:28.551+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T10:34:28.551+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T10:34:28.552+0200 DEBUG Query language substitutions: {}
2023-01-21T10:34:28.552+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T10:34:28.552+0200 DEBUG Named query checking : enabled
2023-01-21T10:34:28.552+0200 DEBUG Second-level cache: enabled
2023-01-21T10:34:28.552+0200 DEBUG Second-level query cache: disabled
2023-01-21T10:34:28.552+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7fae4d4a
2023-01-21T10:34:28.553+0200 DEBUG Second-level cache region prefix: null
2023-01-21T10:34:28.553+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T10:34:28.553+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T10:34:28.553+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T10:34:28.553+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T10:34:28.553+0200 DEBUG JDBC batch size: 15
2023-01-21T10:34:28.553+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T10:34:28.554+0200 DEBUG Scrollable result sets: enabled
2023-01-21T10:34:28.554+0200 DEBUG Wrap result sets: disabled
2023-01-21T10:34:28.554+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T10:34:28.554+0200 DEBUG JDBC result set fetch size: null
2023-01-21T10:34:28.554+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T10:34:28.554+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T10:34:28.619+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T10:34:28.619+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1dab9dd6, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T10:34:28.632+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T10:34:28.633+0200 DEBUG Instantiated session factory
2023-01-21T10:34:28.694+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4e628b52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-21T10:34:28.795+0200 DEBUG Checking 0 named HQL queries
2023-01-21T10:34:28.798+0200 DEBUG Checking 0 named SQL queries
2023-01-21T10:34:28.807+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1eb6e1c
2023-01-21T10:34:28.825+0200 DEBUG Registering SessionFactory: 02df114c-f923-4767-b025-c44d01c08c5e (<unnamed>)
2023-01-21T10:34:28.825+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-21T10:34:28.913+0200 DEBUG Statistics initialized [enabled=false]
2023-01-21T10:34:28.922+0200 DEBUG begin
2023-01-21T10:37:26.404+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T10:37:26.438+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T10:37:26.442+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T10:37:26.454+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T10:37:26.633+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T10:37:26.636+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T10:37:26.778+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T10:37:26.778+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T10:37:26.791+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T10:37:27.400+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T10:37:27.437+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T10:37:27.451+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T10:37:27.481+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:37:27.482+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:37:27.482+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:37:27.484+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2023-01-21T10:37:27.485+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c4eee0
2023-01-21T10:37:27.486+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2023-01-21T10:37:27.489+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:37:27.490+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:37:27.491+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:37:27.494+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:37:27.495+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:37:27.495+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:37:27.497+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:37:27.497+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:37:27.498+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:37:27.500+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:37:27.500+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:37:27.501+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:37:27.502+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:37:27.503+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:37:27.503+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:37:27.505+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:37:27.506+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:37:27.506+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:37:27.508+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:37:27.509+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:37:27.510+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:37:27.512+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:37:27.512+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:37:27.513+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:37:27.514+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:37:27.516+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:37:27.516+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:37:27.518+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50378a4
2023-01-21T10:37:27.519+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@97e93f1
2023-01-21T10:37:27.520+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@782859e
2023-01-21T10:37:27.520+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@782859e
2023-01-21T10:37:27.521+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:37:27.522+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:37:27.530+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:37:27.530+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:37:27.532+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:37:27.532+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:37:27.534+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:37:27.534+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:37:27.536+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:37:27.536+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:37:27.538+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:37:27.539+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:37:27.541+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:37:27.541+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:37:27.544+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:37:27.545+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:37:27.547+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:37:27.547+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:37:27.549+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:37:27.550+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:37:27.552+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:37:27.552+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:37:27.552+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:37:27.554+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d5620ce
2023-01-21T10:37:27.556+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:37:27.556+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:37:27.557+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:37:27.558+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13526e59
2023-01-21T10:37:27.561+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:37:27.561+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:37:27.563+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:37:27.563+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:37:27.564+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:37:27.565+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:37:27.566+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:37:27.566+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:37:27.568+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:37:27.568+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:37:27.569+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7758be
2023-01-21T10:37:27.571+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:37:27.571+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:37:27.571+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:37:27.573+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:37:27.573+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:37:27.573+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:37:27.575+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4149c063
2023-01-21T10:37:27.575+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53f3bdbd
2023-01-21T10:37:27.577+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:37:27.577+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:37:27.577+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:37:27.578+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:37:27.578+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:37:27.578+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:37:27.579+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@4c5ae43b
2023-01-21T10:37:27.580+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@747f281
2023-01-21T10:37:27.583+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:37:27.583+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:37:27.584+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f666ebb
2023-01-21T10:37:27.588+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:37:27.589+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:37:27.594+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:37:27.595+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:37:27.595+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d6025c5
2023-01-21T10:37:27.596+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a7ed1f
2023-01-21T10:37:27.597+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3116c353
2023-01-21T10:37:27.600+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:37:27.601+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:37:27.602+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a00d9cf
2023-01-21T10:37:27.602+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6736fa8d
2023-01-21T10:37:27.602+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T10:37:27.602+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T10:37:27.603+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T10:37:27.603+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T10:37:27.603+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T10:37:27.604+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T10:37:27.617+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T10:37:27.639+0200 INFO HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T10:37:27.640+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T10:37:27.641+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T10:37:27.645+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T10:37:27.646+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T10:37:28.471+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T10:37:28.473+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T10:37:28.473+0200 DEBUG JDBC version : 4.2
2023-01-21T10:37:28.491+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T10:37:28.564+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T10:37:28.567+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T10:37:28.612+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T10:37:28.612+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T10:37:28.613+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:37:28.613+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:37:28.614+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T10:37:28.614+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T10:37:28.615+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T10:37:28.616+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:37:28.617+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T10:37:28.618+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T10:37:28.619+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T10:37:28.619+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T10:37:28.619+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:37:28.620+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T10:37:28.649+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T10:37:28.787+0200 DEBUG Building session factory
2023-01-21T10:37:28.792+0200 DEBUG SessionFactory name : null
2023-01-21T10:37:28.792+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T10:37:28.792+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T10:37:28.792+0200 DEBUG Statistics: disabled
2023-01-21T10:37:28.792+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T10:37:28.793+0200 DEBUG Default entity-mode: pojo
2023-01-21T10:37:28.793+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T10:37:28.793+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T10:37:28.793+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T10:37:28.793+0200 DEBUG Default batch fetch size: -1
2023-01-21T10:37:28.793+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T10:37:28.793+0200 DEBUG Default null ordering: NONE
2023-01-21T10:37:28.794+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T10:37:28.794+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T10:37:28.794+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T10:37:28.794+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T10:37:28.794+0200 DEBUG Query language substitutions: {}
2023-01-21T10:37:28.794+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T10:37:28.795+0200 DEBUG Named query checking : enabled
2023-01-21T10:37:28.796+0200 DEBUG Second-level cache: enabled
2023-01-21T10:37:28.796+0200 DEBUG Second-level query cache: disabled
2023-01-21T10:37:28.797+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7fae4d4a
2023-01-21T10:37:28.797+0200 DEBUG Second-level cache region prefix: null
2023-01-21T10:37:28.797+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T10:37:28.797+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T10:37:28.797+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T10:37:28.797+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T10:37:28.797+0200 DEBUG JDBC batch size: 15
2023-01-21T10:37:28.798+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T10:37:28.798+0200 DEBUG Scrollable result sets: enabled
2023-01-21T10:37:28.798+0200 DEBUG Wrap result sets: disabled
2023-01-21T10:37:28.798+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T10:37:28.798+0200 DEBUG JDBC result set fetch size: null
2023-01-21T10:37:28.798+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T10:37:28.798+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T10:37:28.867+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T10:37:28.868+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1dab9dd6, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T10:37:28.895+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T10:37:28.898+0200 DEBUG Instantiated session factory
2023-01-21T10:37:28.973+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4e628b52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-21T10:37:29.109+0200 DEBUG Checking 0 named HQL queries
2023-01-21T10:37:29.109+0200 DEBUG Checking 0 named SQL queries
2023-01-21T10:37:29.113+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1eb6e1c
2023-01-21T10:37:29.115+0200 DEBUG Registering SessionFactory: 3a4705e3-f5a0-4beb-933c-0cd01998dea5 (<unnamed>)
2023-01-21T10:37:29.115+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-21T10:37:29.186+0200 DEBUG Statistics initialized [enabled=false]
2023-01-21T10:37:29.193+0200 DEBUG begin
2023-01-21T10:37:58.286+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T10:37:58.315+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T10:37:58.320+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T10:37:58.327+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T10:37:58.442+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T10:37:58.445+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T10:37:58.526+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T10:37:58.526+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T10:37:58.536+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T10:37:59.039+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T10:37:59.077+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T10:37:59.092+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T10:37:59.123+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:37:59.124+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:37:59.124+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:37:59.125+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2023-01-21T10:37:59.127+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c4eee0
2023-01-21T10:37:59.128+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2023-01-21T10:37:59.131+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:37:59.131+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:37:59.131+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:37:59.134+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:37:59.134+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:37:59.134+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:37:59.136+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:37:59.137+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:37:59.137+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:37:59.139+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:37:59.139+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:37:59.140+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:37:59.142+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:37:59.142+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:37:59.142+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:37:59.144+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:37:59.144+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:37:59.144+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:37:59.146+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:37:59.147+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:37:59.147+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:37:59.150+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:37:59.151+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:37:59.152+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:37:59.153+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:37:59.154+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:37:59.154+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:37:59.155+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50378a4
2023-01-21T10:37:59.157+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@97e93f1
2023-01-21T10:37:59.158+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@782859e
2023-01-21T10:37:59.158+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@782859e
2023-01-21T10:37:59.159+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:37:59.160+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:37:59.167+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:37:59.168+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:37:59.171+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:37:59.172+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:37:59.174+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:37:59.174+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:37:59.176+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:37:59.177+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:37:59.178+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:37:59.179+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:37:59.181+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:37:59.181+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:37:59.184+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:37:59.184+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:37:59.186+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:37:59.186+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:37:59.187+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:37:59.188+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:37:59.190+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:37:59.190+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:37:59.190+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:37:59.192+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d5620ce
2023-01-21T10:37:59.193+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:37:59.193+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:37:59.194+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:37:59.194+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13526e59
2023-01-21T10:37:59.196+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:37:59.196+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:37:59.197+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:37:59.198+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:37:59.199+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:37:59.199+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:37:59.202+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:37:59.202+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:37:59.205+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:37:59.205+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:37:59.206+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7758be
2023-01-21T10:37:59.207+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:37:59.207+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:37:59.207+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:37:59.209+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:37:59.209+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:37:59.209+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:37:59.211+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4149c063
2023-01-21T10:37:59.212+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53f3bdbd
2023-01-21T10:37:59.213+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:37:59.213+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:37:59.214+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:37:59.215+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:37:59.215+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:37:59.215+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:37:59.216+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@4c5ae43b
2023-01-21T10:37:59.217+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@747f281
2023-01-21T10:37:59.222+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:37:59.222+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:37:59.223+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f666ebb
2023-01-21T10:37:59.226+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:37:59.226+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:37:59.231+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:37:59.231+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:37:59.232+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d6025c5
2023-01-21T10:37:59.232+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a7ed1f
2023-01-21T10:37:59.237+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3116c353
2023-01-21T10:37:59.241+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:37:59.241+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:37:59.242+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a00d9cf
2023-01-21T10:37:59.243+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6736fa8d
2023-01-21T10:37:59.243+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T10:37:59.243+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T10:37:59.244+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T10:37:59.244+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T10:37:59.245+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T10:37:59.255+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T10:37:59.277+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T10:37:59.303+0200 INFO HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T10:37:59.303+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T10:37:59.307+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T10:37:59.315+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T10:37:59.315+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T10:38:00.124+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T10:38:00.124+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T10:38:00.125+0200 DEBUG JDBC version : 4.2
2023-01-21T10:38:00.138+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T10:38:00.205+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T10:38:00.206+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T10:38:00.247+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T10:38:00.248+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T10:38:00.249+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:38:00.249+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:38:00.250+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T10:38:00.252+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T10:38:00.252+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T10:38:00.253+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:38:00.254+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T10:38:00.255+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T10:38:00.256+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T10:38:00.257+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T10:38:00.257+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:38:00.258+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T10:38:00.287+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T10:38:00.396+0200 DEBUG Building session factory
2023-01-21T10:38:00.397+0200 DEBUG SessionFactory name : null
2023-01-21T10:38:00.398+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T10:38:00.398+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T10:38:00.401+0200 DEBUG Statistics: disabled
2023-01-21T10:38:00.402+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T10:38:00.402+0200 DEBUG Default entity-mode: pojo
2023-01-21T10:38:00.402+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T10:38:00.402+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T10:38:00.403+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T10:38:00.403+0200 DEBUG Default batch fetch size: -1
2023-01-21T10:38:00.403+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T10:38:00.403+0200 DEBUG Default null ordering: NONE
2023-01-21T10:38:00.404+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T10:38:00.404+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T10:38:00.404+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T10:38:00.404+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T10:38:00.404+0200 DEBUG Query language substitutions: {}
2023-01-21T10:38:00.405+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T10:38:00.405+0200 DEBUG Named query checking : enabled
2023-01-21T10:38:00.407+0200 DEBUG Second-level cache: enabled
2023-01-21T10:38:00.407+0200 DEBUG Second-level query cache: disabled
2023-01-21T10:38:00.408+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7fae4d4a
2023-01-21T10:38:00.410+0200 DEBUG Second-level cache region prefix: null
2023-01-21T10:38:00.410+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T10:38:00.411+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T10:38:00.411+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T10:38:00.411+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T10:38:00.413+0200 DEBUG JDBC batch size: 15
2023-01-21T10:38:00.413+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T10:38:00.413+0200 DEBUG Scrollable result sets: enabled
2023-01-21T10:38:00.413+0200 DEBUG Wrap result sets: disabled
2023-01-21T10:38:00.414+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T10:38:00.414+0200 DEBUG JDBC result set fetch size: null
2023-01-21T10:38:00.414+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T10:38:00.415+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T10:38:00.486+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T10:38:00.487+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1dab9dd6, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T10:38:00.502+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T10:38:00.504+0200 DEBUG Instantiated session factory
2023-01-21T10:38:00.558+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4e628b52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-21T10:38:00.660+0200 DEBUG Checking 0 named HQL queries
2023-01-21T10:38:00.661+0200 DEBUG Checking 0 named SQL queries
2023-01-21T10:38:00.664+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1eb6e1c
2023-01-21T10:38:00.670+0200 DEBUG Registering SessionFactory: 3ae15ea7-7ea0-4812-b25f-753a090d7e38 (<unnamed>)
2023-01-21T10:38:00.670+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-21T10:38:00.784+0200 DEBUG Statistics initialized [enabled=false]
2023-01-21T10:38:00.797+0200 DEBUG begin
2023-01-21T10:44:52.918+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T10:44:52.953+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T10:44:52.958+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T10:44:52.964+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T10:44:53.068+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T10:44:53.072+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T10:44:53.158+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T10:44:53.158+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T10:44:53.165+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T10:44:53.505+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T10:44:53.545+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T10:44:53.555+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T10:44:53.575+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:44:53.575+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:44:53.576+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:44:53.576+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2023-01-21T10:44:53.578+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c4eee0
2023-01-21T10:44:53.578+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2023-01-21T10:44:53.579+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:44:53.580+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:44:53.580+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:44:53.581+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:44:53.582+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:44:53.582+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:44:53.583+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:44:53.583+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:44:53.583+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:44:53.584+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:44:53.585+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:44:53.585+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:44:53.586+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:44:53.587+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:44:53.587+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:44:53.589+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:44:53.590+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:44:53.590+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:44:53.591+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:44:53.591+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:44:53.591+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:44:53.593+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:44:53.593+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:44:53.594+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:44:53.594+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:44:53.595+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:44:53.595+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:44:53.596+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50378a4
2023-01-21T10:44:53.597+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@97e93f1
2023-01-21T10:44:53.598+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@782859e
2023-01-21T10:44:53.598+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@782859e
2023-01-21T10:44:53.599+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:44:53.599+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:44:53.602+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:44:53.603+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:44:53.604+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:44:53.605+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:44:53.606+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:44:53.606+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:44:53.609+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:44:53.609+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:44:53.611+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:44:53.611+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:44:53.612+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:44:53.613+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:44:53.614+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:44:53.615+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:44:53.616+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:44:53.617+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:44:53.618+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:44:53.618+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:44:53.619+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:44:53.619+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:44:53.619+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:44:53.621+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d5620ce
2023-01-21T10:44:53.621+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:44:53.622+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:44:53.622+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:44:53.622+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13526e59
2023-01-21T10:44:53.623+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:44:53.623+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:44:53.624+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:44:53.625+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:44:53.626+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:44:53.626+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:44:53.626+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:44:53.627+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:44:53.629+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:44:53.629+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:44:53.629+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7758be
2023-01-21T10:44:53.630+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:44:53.631+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:44:53.631+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:44:53.632+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:44:53.632+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:44:53.632+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:44:53.633+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4149c063
2023-01-21T10:44:53.634+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53f3bdbd
2023-01-21T10:44:53.635+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:44:53.635+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:44:53.636+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:44:53.637+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:44:53.637+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:44:53.637+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:44:53.638+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@4c5ae43b
2023-01-21T10:44:53.639+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@747f281
2023-01-21T10:44:53.643+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:44:53.643+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:44:53.644+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f666ebb
2023-01-21T10:44:53.647+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:44:53.648+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:44:53.653+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:44:53.654+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:44:53.654+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d6025c5
2023-01-21T10:44:53.655+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a7ed1f
2023-01-21T10:44:53.657+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3116c353
2023-01-21T10:44:53.660+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:44:53.660+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:44:53.662+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a00d9cf
2023-01-21T10:44:53.662+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6736fa8d
2023-01-21T10:44:53.662+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T10:44:53.662+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T10:44:53.663+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T10:44:53.663+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T10:44:53.663+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T10:44:53.663+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T10:44:53.674+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T10:44:53.687+0200 INFO HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T10:44:53.688+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T10:44:53.688+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T10:44:53.691+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T10:44:53.692+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T10:44:54.323+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T10:44:54.323+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T10:44:54.323+0200 DEBUG JDBC version : 4.2
2023-01-21T10:44:54.334+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T10:44:54.392+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T10:44:54.394+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T10:44:54.431+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T10:44:54.432+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T10:44:54.433+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:44:54.433+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:44:54.433+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T10:44:54.434+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T10:44:54.435+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T10:44:54.436+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:44:54.437+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T10:44:54.438+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T10:44:54.438+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T10:44:54.439+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T10:44:54.439+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:44:54.440+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T10:44:54.471+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T10:44:54.564+0200 DEBUG Building session factory
2023-01-21T10:44:54.574+0200 DEBUG SessionFactory name : null
2023-01-21T10:44:54.574+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T10:44:54.574+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T10:44:54.576+0200 DEBUG Statistics: disabled
2023-01-21T10:44:54.576+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T10:44:54.577+0200 DEBUG Default entity-mode: pojo
2023-01-21T10:44:54.577+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T10:44:54.577+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T10:44:54.577+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T10:44:54.578+0200 DEBUG Default batch fetch size: -1
2023-01-21T10:44:54.578+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T10:44:54.578+0200 DEBUG Default null ordering: NONE
2023-01-21T10:44:54.579+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T10:44:54.579+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T10:44:54.580+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T10:44:54.581+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T10:44:54.581+0200 DEBUG Query language substitutions: {}
2023-01-21T10:44:54.582+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T10:44:54.584+0200 DEBUG Named query checking : enabled
2023-01-21T10:44:54.593+0200 DEBUG Second-level cache: enabled
2023-01-21T10:44:54.593+0200 DEBUG Second-level query cache: disabled
2023-01-21T10:44:54.594+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7fae4d4a
2023-01-21T10:44:54.595+0200 DEBUG Second-level cache region prefix: null
2023-01-21T10:44:54.595+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T10:44:54.595+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T10:44:54.596+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T10:44:54.596+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T10:44:54.596+0200 DEBUG JDBC batch size: 15
2023-01-21T10:44:54.596+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T10:44:54.596+0200 DEBUG Scrollable result sets: enabled
2023-01-21T10:44:54.597+0200 DEBUG Wrap result sets: disabled
2023-01-21T10:44:54.597+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T10:44:54.597+0200 DEBUG JDBC result set fetch size: null
2023-01-21T10:44:54.597+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T10:44:54.597+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T10:44:54.658+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T10:44:54.658+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1dab9dd6, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T10:44:54.671+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T10:44:54.673+0200 DEBUG Instantiated session factory
2023-01-21T10:44:54.727+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4e628b52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-21T10:44:54.794+0200 DEBUG Checking 0 named HQL queries
2023-01-21T10:44:54.794+0200 DEBUG Checking 0 named SQL queries
2023-01-21T10:44:54.801+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1eb6e1c
2023-01-21T10:44:54.803+0200 DEBUG Registering SessionFactory: 45e18844-9c55-424e-8bb3-215640c22a0b (<unnamed>)
2023-01-21T10:44:54.804+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-21T10:44:54.892+0200 DEBUG Statistics initialized [enabled=false]
2023-01-21T10:44:54.897+0200 DEBUG begin
2023-01-21T10:50:01.157+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T10:50:01.185+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T10:50:01.189+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T10:50:01.196+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T10:50:01.318+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T10:50:01.321+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T10:50:01.380+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T10:50:01.380+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T10:50:01.390+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T10:50:01.781+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T10:50:01.814+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T10:50:01.825+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T10:50:01.854+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:50:01.854+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:50:01.855+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:50:01.856+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2023-01-21T10:50:01.857+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c4eee0
2023-01-21T10:50:01.858+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2023-01-21T10:50:01.860+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:50:01.861+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:50:01.861+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:50:01.862+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:50:01.863+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:50:01.863+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:50:01.864+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:50:01.864+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:50:01.865+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:50:01.866+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:50:01.868+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:50:01.868+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:50:01.871+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:50:01.871+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:50:01.872+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:50:01.874+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:50:01.874+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:50:01.875+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:50:01.877+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:50:01.877+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:50:01.878+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:50:01.880+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:50:01.880+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:50:01.881+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:50:01.882+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:50:01.883+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:50:01.883+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:50:01.884+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50378a4
2023-01-21T10:50:01.885+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@97e93f1
2023-01-21T10:50:01.886+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@782859e
2023-01-21T10:50:01.887+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@782859e
2023-01-21T10:50:01.888+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:50:01.889+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:50:01.893+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:50:01.893+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:50:01.894+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:50:01.895+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:50:01.896+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:50:01.896+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:50:01.897+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:50:01.898+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:50:01.900+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:50:01.900+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:50:01.901+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:50:01.902+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:50:01.904+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:50:01.905+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:50:01.906+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:50:01.906+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:50:01.909+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:50:01.909+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:50:01.911+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:50:01.911+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:50:01.911+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:50:01.913+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d5620ce
2023-01-21T10:50:01.914+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:50:01.914+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:50:01.914+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:50:01.916+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13526e59
2023-01-21T10:50:01.917+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:50:01.917+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:50:01.918+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:50:01.918+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:50:01.919+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:50:01.919+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:50:01.920+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:50:01.920+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:50:01.922+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:50:01.922+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:50:01.922+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7758be
2023-01-21T10:50:01.923+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:50:01.923+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:50:01.923+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:50:01.924+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:50:01.924+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:50:01.924+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:50:01.926+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4149c063
2023-01-21T10:50:01.926+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53f3bdbd
2023-01-21T10:50:01.927+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:50:01.928+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:50:01.928+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:50:01.929+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:50:01.929+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:50:01.930+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:50:01.930+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@4c5ae43b
2023-01-21T10:50:01.931+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@747f281
2023-01-21T10:50:01.934+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:50:01.935+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:50:01.935+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f666ebb
2023-01-21T10:50:01.938+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:50:01.939+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:50:01.942+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:50:01.942+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:50:01.943+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d6025c5
2023-01-21T10:50:01.943+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a7ed1f
2023-01-21T10:50:01.945+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3116c353
2023-01-21T10:50:01.950+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:50:01.950+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:50:01.951+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a00d9cf
2023-01-21T10:50:01.951+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6736fa8d
2023-01-21T10:50:01.951+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T10:50:01.952+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T10:50:01.952+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T10:50:01.952+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T10:50:01.953+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T10:50:01.953+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T10:50:01.964+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T10:50:01.978+0200 INFO HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T10:50:01.979+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T10:50:01.979+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T10:50:01.982+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T10:50:01.982+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T10:50:02.813+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T10:50:02.814+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T10:50:02.814+0200 DEBUG JDBC version : 4.2
2023-01-21T10:50:02.824+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T10:50:02.882+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T10:50:02.883+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T10:50:02.921+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T10:50:02.921+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T10:50:02.922+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:50:02.922+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:50:02.923+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T10:50:02.923+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T10:50:02.924+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T10:50:02.925+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:50:02.927+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T10:50:02.928+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T10:50:02.929+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T10:50:02.929+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T10:50:02.929+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:50:02.930+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T10:50:02.957+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T10:50:03.079+0200 DEBUG Building session factory
2023-01-21T10:50:03.080+0200 DEBUG SessionFactory name : null
2023-01-21T10:50:03.080+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T10:50:03.080+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T10:50:03.080+0200 DEBUG Statistics: disabled
2023-01-21T10:50:03.081+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T10:50:03.081+0200 DEBUG Default entity-mode: pojo
2023-01-21T10:50:03.081+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T10:50:03.081+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T10:50:03.081+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T10:50:03.081+0200 DEBUG Default batch fetch size: -1
2023-01-21T10:50:03.082+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T10:50:03.082+0200 DEBUG Default null ordering: NONE
2023-01-21T10:50:03.082+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T10:50:03.082+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T10:50:03.082+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T10:50:03.082+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T10:50:03.083+0200 DEBUG Query language substitutions: {}
2023-01-21T10:50:03.083+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T10:50:03.083+0200 DEBUG Named query checking : enabled
2023-01-21T10:50:03.083+0200 DEBUG Second-level cache: enabled
2023-01-21T10:50:03.083+0200 DEBUG Second-level query cache: disabled
2023-01-21T10:50:03.083+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7fae4d4a
2023-01-21T10:50:03.084+0200 DEBUG Second-level cache region prefix: null
2023-01-21T10:50:03.084+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T10:50:03.084+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T10:50:03.084+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T10:50:03.084+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T10:50:03.085+0200 DEBUG JDBC batch size: 15
2023-01-21T10:50:03.085+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T10:50:03.085+0200 DEBUG Scrollable result sets: enabled
2023-01-21T10:50:03.085+0200 DEBUG Wrap result sets: disabled
2023-01-21T10:50:03.086+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T10:50:03.086+0200 DEBUG JDBC result set fetch size: null
2023-01-21T10:50:03.089+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T10:50:03.089+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T10:50:03.151+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T10:50:03.151+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1dab9dd6, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T10:50:03.163+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T10:50:03.164+0200 DEBUG Instantiated session factory
2023-01-21T10:50:03.214+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4e628b52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-21T10:50:03.279+0200 DEBUG Checking 0 named HQL queries
2023-01-21T10:50:03.279+0200 DEBUG Checking 0 named SQL queries
2023-01-21T10:50:03.283+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1eb6e1c
2023-01-21T10:50:03.289+0200 DEBUG Registering SessionFactory: 219ffd07-55cc-4fd6-9975-5ddf4a2ca231 (<unnamed>)
2023-01-21T10:50:03.290+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-21T10:50:03.396+0200 DEBUG Statistics initialized [enabled=false]
2023-01-21T10:50:03.405+0200 DEBUG begin
2023-01-21T10:53:29.681+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T10:53:29.713+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T10:53:29.716+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T10:53:29.723+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T10:53:29.842+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T10:53:29.845+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T10:53:29.921+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T10:53:29.922+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T10:53:29.930+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T10:53:30.362+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T10:53:30.396+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T10:53:30.407+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T10:53:30.435+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:53:30.436+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:53:30.436+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4082ba93
2023-01-21T10:53:30.437+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@792b749c
2023-01-21T10:53:30.439+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@61c4eee0
2023-01-21T10:53:30.439+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@433defed
2023-01-21T10:53:30.442+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:53:30.442+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:53:30.443+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4c163e3
2023-01-21T10:53:30.444+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:53:30.445+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:53:30.445+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@66982506
2023-01-21T10:53:30.447+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:53:30.448+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:53:30.448+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6f53b8a
2023-01-21T10:53:30.450+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:53:30.450+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:53:30.451+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5965d37
2023-01-21T10:53:30.452+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:53:30.453+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:53:30.453+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@740fb309
2023-01-21T10:53:30.455+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:53:30.455+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:53:30.456+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@15a34df2
2023-01-21T10:53:30.457+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:53:30.457+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:53:30.458+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@26abb146
2023-01-21T10:53:30.459+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:53:30.460+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@d554c5f
2023-01-21T10:53:30.461+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:53:30.461+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6a8658ff
2023-01-21T10:53:30.463+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:53:30.463+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@4d14b6c2
2023-01-21T10:53:30.464+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@50378a4
2023-01-21T10:53:30.465+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@97e93f1
2023-01-21T10:53:30.466+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@782859e
2023-01-21T10:53:30.466+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@782859e
2023-01-21T10:53:30.468+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:53:30.469+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@210ab13f
2023-01-21T10:53:30.472+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:53:30.473+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7eecb5b8
2023-01-21T10:53:30.474+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:53:30.474+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71687585
2023-01-21T10:53:30.476+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:53:30.476+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7d3e8655
2023-01-21T10:53:30.478+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:53:30.478+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@66ea810
2023-01-21T10:53:30.480+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:53:30.480+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@d2de489
2023-01-21T10:53:30.482+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:53:30.482+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3e0e1046
2023-01-21T10:53:30.485+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:53:30.485+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@798162bc
2023-01-21T10:53:30.488+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:53:30.488+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2d29b4ee
2023-01-21T10:53:30.490+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:53:30.490+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3b35a229
2023-01-21T10:53:30.492+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:53:30.492+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:53:30.492+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fb0623e
2023-01-21T10:53:30.494+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d5620ce
2023-01-21T10:53:30.496+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:53:30.496+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:53:30.497+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@448c8166
2023-01-21T10:53:30.498+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@13526e59
2023-01-21T10:53:30.499+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:53:30.499+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@730d2164
2023-01-21T10:53:30.501+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:53:30.501+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7068e664
2023-01-21T10:53:30.502+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:53:30.502+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@24105dc5
2023-01-21T10:53:30.504+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:53:30.504+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@50f6ac94
2023-01-21T10:53:30.506+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:53:30.507+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3214ee6
2023-01-21T10:53:30.508+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7d7758be
2023-01-21T10:53:30.509+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:53:30.510+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:53:30.510+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2eea88a1
2023-01-21T10:53:30.511+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:53:30.512+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:53:30.513+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c78324b
2023-01-21T10:53:30.514+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4149c063
2023-01-21T10:53:30.515+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@53f3bdbd
2023-01-21T10:53:30.516+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:53:30.516+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:53:30.517+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4ef74c30
2023-01-21T10:53:30.518+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:53:30.519+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:53:30.519+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@776a6d9b
2023-01-21T10:53:30.520+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@4c5ae43b
2023-01-21T10:53:30.521+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@747f281
2023-01-21T10:53:30.527+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:53:30.527+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@e25951c
2023-01-21T10:53:30.528+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2f666ebb
2023-01-21T10:53:30.533+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:53:30.533+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@31edaa7d
2023-01-21T10:53:30.538+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:53:30.538+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@23202fce
2023-01-21T10:53:30.539+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d6025c5
2023-01-21T10:53:30.539+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2a7ed1f
2023-01-21T10:53:30.541+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3116c353
2023-01-21T10:53:30.546+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:53:30.547+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6692b6c6
2023-01-21T10:53:30.548+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4a00d9cf
2023-01-21T10:53:30.549+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6736fa8d
2023-01-21T10:53:30.549+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T10:53:30.549+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T10:53:30.550+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T10:53:30.550+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T10:53:30.550+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T10:53:30.551+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T10:53:30.562+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T10:53:30.574+0200 INFO HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T10:53:30.575+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T10:53:30.578+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T10:53:30.594+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T10:53:30.594+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T10:53:31.447+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T10:53:31.448+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T10:53:31.449+0200 DEBUG JDBC version : 4.2
2023-01-21T10:53:31.462+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T10:53:31.534+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T10:53:31.536+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T10:53:31.585+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T10:53:31.586+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T10:53:31.587+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:53:31.587+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:53:31.588+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T10:53:31.590+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T10:53:31.591+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T10:53:31.592+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:53:31.594+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T10:53:31.595+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T10:53:31.595+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T10:53:31.596+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T10:53:31.596+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:53:31.597+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T10:53:31.636+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T10:53:31.769+0200 DEBUG Building session factory
2023-01-21T10:53:31.770+0200 DEBUG SessionFactory name : null
2023-01-21T10:53:31.770+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T10:53:31.770+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T10:53:31.771+0200 DEBUG Statistics: disabled
2023-01-21T10:53:31.771+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T10:53:31.771+0200 DEBUG Default entity-mode: pojo
2023-01-21T10:53:31.771+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T10:53:31.771+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T10:53:31.771+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T10:53:31.771+0200 DEBUG Default batch fetch size: -1
2023-01-21T10:53:31.772+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T10:53:31.772+0200 DEBUG Default null ordering: NONE
2023-01-21T10:53:31.772+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T10:53:31.772+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T10:53:31.772+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T10:53:31.772+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T10:53:31.773+0200 DEBUG Query language substitutions: {}
2023-01-21T10:53:31.773+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T10:53:31.773+0200 DEBUG Named query checking : enabled
2023-01-21T10:53:31.773+0200 DEBUG Second-level cache: enabled
2023-01-21T10:53:31.773+0200 DEBUG Second-level query cache: disabled
2023-01-21T10:53:31.774+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7fae4d4a
2023-01-21T10:53:31.774+0200 DEBUG Second-level cache region prefix: null
2023-01-21T10:53:31.774+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T10:53:31.774+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T10:53:31.775+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T10:53:31.775+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T10:53:31.775+0200 DEBUG JDBC batch size: 15
2023-01-21T10:53:31.775+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T10:53:31.775+0200 DEBUG Scrollable result sets: enabled
2023-01-21T10:53:31.775+0200 DEBUG Wrap result sets: disabled
2023-01-21T10:53:31.775+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T10:53:31.776+0200 DEBUG JDBC result set fetch size: null
2023-01-21T10:53:31.776+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T10:53:31.776+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T10:53:31.852+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T10:53:31.852+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1dab9dd6, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T10:53:31.867+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T10:53:31.869+0200 DEBUG Instantiated session factory
2023-01-21T10:53:31.937+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4e628b52] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-21T10:53:32.000+0200 DEBUG Checking 0 named HQL queries
2023-01-21T10:53:32.000+0200 DEBUG Checking 0 named SQL queries
2023-01-21T10:53:32.011+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1eb6e1c
2023-01-21T10:53:32.016+0200 DEBUG Registering SessionFactory: 8c6171ac-60bd-465d-877c-242d6c9a3a8f (<unnamed>)
2023-01-21T10:53:32.016+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-21T10:53:32.129+0200 DEBUG Statistics initialized [enabled=false]
2023-01-21T10:53:32.139+0200 DEBUG begin
2023-01-21T10:56:55.560+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T10:56:55.593+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T10:56:55.599+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T10:56:55.607+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T10:56:55.739+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T10:56:55.742+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T10:56:55.827+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T10:56:55.828+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T10:56:55.838+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T10:56:56.265+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T10:56:56.293+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T10:56:56.302+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T10:56:56.324+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T10:56:56.324+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T10:56:56.325+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T10:56:56.325+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1040be71
2023-01-21T10:56:56.327+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@28dcca0c
2023-01-21T10:56:56.328+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@4a8355dd
2023-01-21T10:56:56.330+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T10:56:56.330+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T10:56:56.330+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65987993
2023-01-21T10:56:56.331+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T10:56:56.331+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T10:56:56.332+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T10:56:56.334+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T10:56:56.334+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T10:56:56.334+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@710636b0
2023-01-21T10:56:56.336+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T10:56:56.336+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T10:56:56.337+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T10:56:56.338+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T10:56:56.338+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T10:56:56.339+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e535154
2023-01-21T10:56:56.340+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T10:56:56.340+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T10:56:56.341+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T10:56:56.342+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T10:56:56.342+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T10:56:56.343+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T10:56:56.344+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T10:56:56.345+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T10:56:56.346+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T10:56:56.346+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T10:56:56.348+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T10:56:56.349+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T10:56:56.350+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@624ea235
2023-01-21T10:56:56.351+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f43c82
2023-01-21T10:56:56.352+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T10:56:56.352+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T10:56:56.354+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T10:56:56.354+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T10:56:56.359+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T10:56:56.359+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T10:56:56.361+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T10:56:56.361+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T10:56:56.363+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T10:56:56.363+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T10:56:56.365+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T10:56:56.365+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T10:56:56.368+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T10:56:56.369+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T10:56:56.370+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T10:56:56.370+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T10:56:56.372+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T10:56:56.373+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T10:56:56.375+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@565f390
2023-01-21T10:56:56.375+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@565f390
2023-01-21T10:56:56.376+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T10:56:56.377+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T10:56:56.378+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T10:56:56.378+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T10:56:56.378+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@448c8166
2023-01-21T10:56:56.380+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@503f91c3
2023-01-21T10:56:56.381+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T10:56:56.381+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T10:56:56.381+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T10:56:56.382+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4ee203eb
2023-01-21T10:56:56.383+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T10:56:56.384+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T10:56:56.385+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T10:56:56.385+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T10:56:56.387+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T10:56:56.388+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T10:56:56.389+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@61710c6
2023-01-21T10:56:56.389+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61710c6
2023-01-21T10:56:56.391+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T10:56:56.392+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T10:56:56.393+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78fa769e
2023-01-21T10:56:56.394+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T10:56:56.395+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T10:56:56.395+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T10:56:56.397+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T10:56:56.397+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T10:56:56.397+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T10:56:56.399+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4c2bb6e0
2023-01-21T10:56:56.400+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@536dbea0
2023-01-21T10:56:56.401+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T10:56:56.401+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T10:56:56.402+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T10:56:56.403+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T10:56:56.404+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T10:56:56.404+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T10:56:56.406+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@2ca923bb
2023-01-21T10:56:56.408+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@51bf5add
2023-01-21T10:56:56.414+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T10:56:56.414+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T10:56:56.415+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56dc1551
2023-01-21T10:56:56.419+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T10:56:56.420+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T10:56:56.424+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T10:56:56.424+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T10:56:56.425+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4fa1c212
2023-01-21T10:56:56.426+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e928fbf
2023-01-21T10:56:56.428+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@895e367
2023-01-21T10:56:56.432+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T10:56:56.432+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T10:56:56.433+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20d7d6fb
2023-01-21T10:56:56.433+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ef782af
2023-01-21T10:56:56.434+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T10:56:56.434+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T10:56:56.434+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T10:56:56.434+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T10:56:56.435+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T10:56:56.435+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T10:56:56.448+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T10:56:56.457+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T10:56:56.457+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T10:56:56.458+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T10:56:56.467+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T10:56:56.468+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T10:56:57.268+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T10:56:57.268+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T10:56:57.268+0200 DEBUG JDBC version : 4.2
2023-01-21T10:56:57.282+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T10:56:57.367+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T10:56:57.369+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T10:56:57.419+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T10:56:57.419+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T10:56:57.420+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:56:57.421+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T10:56:57.421+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T10:56:57.422+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T10:56:57.423+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T10:56:57.425+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:56:57.427+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T10:56:57.428+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T10:56:57.429+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T10:56:57.430+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T10:56:57.430+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T10:56:57.431+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T10:56:57.462+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T10:56:57.509+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T10:56:57.560+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T10:56:57.572+0200 DEBUG Import with entity name Users
2023-01-21T10:56:57.577+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T10:56:57.611+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T10:56:57.615+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T10:56:57.617+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T10:56:57.619+0200 DEBUG building SimpleValue for id
2023-01-21T10:56:57.621+0200 DEBUG Building property id
2023-01-21T10:56:57.630+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T10:56:57.630+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T10:56:57.631+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T10:56:57.631+0200 DEBUG building SimpleValue for password
2023-01-21T10:56:57.631+0200 DEBUG Building property password
2023-01-21T10:56:57.631+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T10:56:57.632+0200 DEBUG MetadataSourceProcessor property user_name with lazy=false
2023-01-21T10:56:57.632+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:user_name]
2023-01-21T10:56:57.632+0200 DEBUG building SimpleValue for user_name
2023-01-21T10:56:57.632+0200 DEBUG Building property user_name
2023-01-21T10:56:57.634+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T10:56:57.635+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T10:56:57.635+0200 DEBUG Starting fillSimpleValue for user_name
2023-01-21T10:56:57.637+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T10:56:57.685+0200 DEBUG Building session factory
2023-01-21T10:56:57.687+0200 DEBUG SessionFactory name : null
2023-01-21T10:56:57.687+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T10:56:57.688+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T10:56:57.688+0200 DEBUG Statistics: disabled
2023-01-21T10:56:57.688+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T10:56:57.688+0200 DEBUG Default entity-mode: pojo
2023-01-21T10:56:57.688+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T10:56:57.689+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T10:56:57.689+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T10:56:57.689+0200 DEBUG Default batch fetch size: -1
2023-01-21T10:56:57.689+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T10:56:57.689+0200 DEBUG Default null ordering: NONE
2023-01-21T10:56:57.689+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T10:56:57.690+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T10:56:57.690+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T10:56:57.690+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T10:56:57.690+0200 DEBUG Query language substitutions: {}
2023-01-21T10:56:57.690+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T10:56:57.690+0200 DEBUG Named query checking : enabled
2023-01-21T10:56:57.690+0200 DEBUG Second-level cache: enabled
2023-01-21T10:56:57.691+0200 DEBUG Second-level query cache: disabled
2023-01-21T10:56:57.691+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6fca2a8f
2023-01-21T10:56:57.691+0200 DEBUG Second-level cache region prefix: null
2023-01-21T10:56:57.691+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T10:56:57.691+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T10:56:57.691+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T10:56:57.691+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T10:56:57.692+0200 DEBUG JDBC batch size: 15
2023-01-21T10:56:57.692+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T10:56:57.692+0200 DEBUG Scrollable result sets: enabled
2023-01-21T10:56:57.692+0200 DEBUG Wrap result sets: disabled
2023-01-21T10:56:57.692+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T10:56:57.692+0200 DEBUG JDBC result set fetch size: null
2023-01-21T10:56:57.692+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T10:56:57.693+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T10:56:57.811+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T10:56:57.811+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ba05e38, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T10:56:57.836+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T10:56:57.838+0200 DEBUG Instantiated session factory
2023-01-21T10:56:57.893+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T10:56:57.894+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T10:56:57.913+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T10:56:57.914+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T10:56:57.964+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T10:56:57.965+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T10:56:57.970+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T11:11:23.832+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T11:11:23.866+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T11:11:23.869+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T11:11:23.878+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T11:11:24.010+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T11:11:24.014+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T11:11:24.111+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T11:11:24.112+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T11:11:24.121+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T11:11:24.559+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T11:11:24.586+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T11:11:24.595+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T11:11:24.618+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T11:11:24.619+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T11:11:24.619+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T11:11:24.620+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1040be71
2023-01-21T11:11:24.621+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@28dcca0c
2023-01-21T11:11:24.621+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@4a8355dd
2023-01-21T11:11:24.623+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T11:11:24.623+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T11:11:24.623+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65987993
2023-01-21T11:11:24.626+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T11:11:24.626+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T11:11:24.626+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T11:11:24.627+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T11:11:24.628+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T11:11:24.628+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@710636b0
2023-01-21T11:11:24.629+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T11:11:24.629+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T11:11:24.629+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T11:11:24.631+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T11:11:24.631+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T11:11:24.631+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e535154
2023-01-21T11:11:24.633+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T11:11:24.633+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T11:11:24.633+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T11:11:24.634+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T11:11:24.634+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T11:11:24.635+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T11:11:24.636+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T11:11:24.636+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T11:11:24.637+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T11:11:24.637+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T11:11:24.638+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T11:11:24.639+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T11:11:24.639+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@624ea235
2023-01-21T11:11:24.640+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f43c82
2023-01-21T11:11:24.641+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T11:11:24.641+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T11:11:24.642+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T11:11:24.643+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T11:11:24.647+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T11:11:24.647+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T11:11:24.648+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T11:11:24.649+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T11:11:24.650+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T11:11:24.650+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T11:11:24.652+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T11:11:24.652+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T11:11:24.653+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T11:11:24.654+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T11:11:24.655+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T11:11:24.655+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T11:11:24.657+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T11:11:24.658+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T11:11:24.659+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@565f390
2023-01-21T11:11:24.660+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@565f390
2023-01-21T11:11:24.661+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T11:11:24.661+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T11:11:24.662+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T11:11:24.662+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T11:11:24.662+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@448c8166
2023-01-21T11:11:24.664+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@503f91c3
2023-01-21T11:11:24.665+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T11:11:24.666+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T11:11:24.666+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T11:11:24.667+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4ee203eb
2023-01-21T11:11:24.668+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T11:11:24.668+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T11:11:24.669+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T11:11:24.669+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T11:11:24.670+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T11:11:24.670+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T11:11:24.671+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@61710c6
2023-01-21T11:11:24.671+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61710c6
2023-01-21T11:11:24.672+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T11:11:24.672+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T11:11:24.673+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78fa769e
2023-01-21T11:11:24.674+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T11:11:24.675+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T11:11:24.675+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T11:11:24.676+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T11:11:24.676+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T11:11:24.676+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T11:11:24.677+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4c2bb6e0
2023-01-21T11:11:24.678+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@536dbea0
2023-01-21T11:11:24.679+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T11:11:24.679+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T11:11:24.679+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T11:11:24.680+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T11:11:24.680+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T11:11:24.681+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T11:11:24.681+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@2ca923bb
2023-01-21T11:11:24.682+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@51bf5add
2023-01-21T11:11:24.688+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T11:11:24.688+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T11:11:24.688+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56dc1551
2023-01-21T11:11:24.692+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T11:11:24.692+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T11:11:24.695+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T11:11:24.696+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T11:11:24.696+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4fa1c212
2023-01-21T11:11:24.697+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e928fbf
2023-01-21T11:11:24.698+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@895e367
2023-01-21T11:11:24.701+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T11:11:24.702+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T11:11:24.703+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20d7d6fb
2023-01-21T11:11:24.703+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ef782af
2023-01-21T11:11:24.703+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T11:11:24.703+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T11:11:24.703+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T11:11:24.704+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T11:11:24.704+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T11:11:24.705+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T11:11:24.715+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T11:11:24.729+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:11:24.729+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T11:11:24.729+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T11:11:24.732+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T11:11:24.732+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T11:11:25.457+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T11:11:25.458+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T11:11:25.458+0200 DEBUG JDBC version : 4.2
2023-01-21T11:11:25.470+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T11:11:25.539+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T11:11:25.542+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T11:11:25.581+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T11:11:25.581+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T11:11:25.582+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:11:25.582+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:11:25.583+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T11:11:25.584+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T11:11:25.584+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T11:11:25.586+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:11:25.587+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T11:11:25.588+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T11:11:25.588+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T11:11:25.589+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T11:11:25.589+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:11:25.590+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T11:11:25.633+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T11:11:25.680+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T11:11:25.780+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T11:11:25.790+0200 DEBUG Import with entity name Users
2023-01-21T11:11:25.796+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T11:11:25.830+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T11:11:25.835+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T11:11:25.838+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T11:11:25.840+0200 DEBUG building SimpleValue for id
2023-01-21T11:11:25.844+0200 DEBUG Building property id
2023-01-21T11:11:25.854+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T11:11:25.855+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T11:11:25.855+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T11:11:25.855+0200 DEBUG building SimpleValue for password
2023-01-21T11:11:25.856+0200 DEBUG Building property password
2023-01-21T11:11:25.857+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T11:11:25.863+0200 DEBUG MetadataSourceProcessor property user_name with lazy=false
2023-01-21T11:11:25.863+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:user_name]
2023-01-21T11:11:25.863+0200 DEBUG building SimpleValue for user_name
2023-01-21T11:11:25.864+0200 DEBUG Building property user_name
2023-01-21T11:11:25.869+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T11:11:25.872+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T11:11:25.872+0200 DEBUG Starting fillSimpleValue for user_name
2023-01-21T11:11:25.876+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T11:11:26.000+0200 DEBUG Building session factory
2023-01-21T11:11:26.001+0200 DEBUG SessionFactory name : null
2023-01-21T11:11:26.002+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T11:11:26.002+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T11:11:26.002+0200 DEBUG Statistics: disabled
2023-01-21T11:11:26.002+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T11:11:26.003+0200 DEBUG Default entity-mode: pojo
2023-01-21T11:11:26.003+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T11:11:26.003+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T11:11:26.003+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T11:11:26.003+0200 DEBUG Default batch fetch size: -1
2023-01-21T11:11:26.003+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T11:11:26.004+0200 DEBUG Default null ordering: NONE
2023-01-21T11:11:26.004+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T11:11:26.004+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T11:11:26.004+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T11:11:26.004+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T11:11:26.004+0200 DEBUG Query language substitutions: {}
2023-01-21T11:11:26.005+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T11:11:26.005+0200 DEBUG Named query checking : enabled
2023-01-21T11:11:26.005+0200 DEBUG Second-level cache: enabled
2023-01-21T11:11:26.005+0200 DEBUG Second-level query cache: disabled
2023-01-21T11:11:26.005+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6fca2a8f
2023-01-21T11:11:26.005+0200 DEBUG Second-level cache region prefix: null
2023-01-21T11:11:26.005+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T11:11:26.005+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T11:11:26.006+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T11:11:26.006+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T11:11:26.006+0200 DEBUG JDBC batch size: 15
2023-01-21T11:11:26.006+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T11:11:26.006+0200 DEBUG Scrollable result sets: enabled
2023-01-21T11:11:26.006+0200 DEBUG Wrap result sets: disabled
2023-01-21T11:11:26.006+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T11:11:26.006+0200 DEBUG JDBC result set fetch size: null
2023-01-21T11:11:26.006+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T11:11:26.006+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T11:11:26.112+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T11:11:26.113+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ba05e38, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T11:11:26.145+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T11:11:26.153+0200 DEBUG Instantiated session factory
2023-01-21T11:11:26.233+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:11:26.234+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:11:26.277+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:11:26.277+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:11:26.360+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T11:11:26.360+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:11:26.366+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T11:27:23.942+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T11:27:23.974+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T11:27:23.976+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T11:27:23.983+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T11:27:24.104+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T11:27:24.107+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T11:27:24.192+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T11:27:24.193+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T11:27:24.201+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T11:27:24.631+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T11:27:24.659+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T11:27:24.667+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T11:27:24.688+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T11:27:24.688+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T11:27:24.689+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T11:27:24.690+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1040be71
2023-01-21T11:27:24.692+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@28dcca0c
2023-01-21T11:27:24.693+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@4a8355dd
2023-01-21T11:27:24.695+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T11:27:24.696+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T11:27:24.696+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65987993
2023-01-21T11:27:24.698+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T11:27:24.698+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T11:27:24.699+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T11:27:24.701+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T11:27:24.701+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T11:27:24.701+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@710636b0
2023-01-21T11:27:24.703+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T11:27:24.704+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T11:27:24.704+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T11:27:24.706+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T11:27:24.707+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T11:27:24.707+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e535154
2023-01-21T11:27:24.709+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T11:27:24.710+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T11:27:24.710+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T11:27:24.712+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T11:27:24.712+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T11:27:24.713+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T11:27:24.714+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T11:27:24.714+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T11:27:24.716+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T11:27:24.716+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T11:27:24.718+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T11:27:24.718+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T11:27:24.719+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@624ea235
2023-01-21T11:27:24.721+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f43c82
2023-01-21T11:27:24.722+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T11:27:24.722+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T11:27:24.724+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T11:27:24.724+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T11:27:24.730+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T11:27:24.730+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T11:27:24.732+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T11:27:24.732+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T11:27:24.734+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T11:27:24.734+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T11:27:24.735+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T11:27:24.736+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T11:27:24.738+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T11:27:24.739+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T11:27:24.741+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T11:27:24.741+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T11:27:24.743+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T11:27:24.744+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T11:27:24.747+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@565f390
2023-01-21T11:27:24.747+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@565f390
2023-01-21T11:27:24.748+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T11:27:24.749+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T11:27:24.750+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T11:27:24.750+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T11:27:24.750+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@448c8166
2023-01-21T11:27:24.752+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@503f91c3
2023-01-21T11:27:24.753+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T11:27:24.753+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T11:27:24.754+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T11:27:24.755+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4ee203eb
2023-01-21T11:27:24.756+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T11:27:24.756+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T11:27:24.757+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T11:27:24.758+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T11:27:24.759+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T11:27:24.759+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T11:27:24.760+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@61710c6
2023-01-21T11:27:24.761+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61710c6
2023-01-21T11:27:24.763+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T11:27:24.763+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T11:27:24.764+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78fa769e
2023-01-21T11:27:24.766+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T11:27:24.766+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T11:27:24.766+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T11:27:24.767+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T11:27:24.767+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T11:27:24.768+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T11:27:24.769+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4c2bb6e0
2023-01-21T11:27:24.770+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@536dbea0
2023-01-21T11:27:24.771+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T11:27:24.771+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T11:27:24.772+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T11:27:24.773+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T11:27:24.773+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T11:27:24.774+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T11:27:24.774+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@2ca923bb
2023-01-21T11:27:24.775+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@51bf5add
2023-01-21T11:27:24.779+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T11:27:24.780+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T11:27:24.780+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56dc1551
2023-01-21T11:27:24.785+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T11:27:24.786+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T11:27:24.789+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T11:27:24.789+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T11:27:24.790+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4fa1c212
2023-01-21T11:27:24.790+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e928fbf
2023-01-21T11:27:24.793+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@895e367
2023-01-21T11:27:24.796+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T11:27:24.797+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T11:27:24.798+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20d7d6fb
2023-01-21T11:27:24.798+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ef782af
2023-01-21T11:27:24.798+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T11:27:24.798+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T11:27:24.799+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T11:27:24.799+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T11:27:24.799+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T11:27:24.799+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T11:27:24.810+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T11:27:24.819+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:27:24.819+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T11:27:24.820+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T11:27:24.824+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T11:27:24.824+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T11:27:25.573+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T11:27:25.574+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T11:27:25.574+0200 DEBUG JDBC version : 4.2
2023-01-21T11:27:25.589+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T11:27:25.677+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T11:27:25.679+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T11:27:25.730+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T11:27:25.731+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T11:27:25.732+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:27:25.732+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:27:25.733+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T11:27:25.734+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T11:27:25.735+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T11:27:25.737+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:27:25.738+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T11:27:25.739+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T11:27:25.740+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T11:27:25.741+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T11:27:25.741+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:27:25.742+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T11:27:25.800+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T11:27:25.858+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T11:27:25.909+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T11:27:25.920+0200 DEBUG Import with entity name Users
2023-01-21T11:27:25.926+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T11:27:25.961+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T11:27:25.968+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T11:27:25.970+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T11:27:25.972+0200 DEBUG building SimpleValue for id
2023-01-21T11:27:25.975+0200 DEBUG Building property id
2023-01-21T11:27:25.983+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T11:27:25.984+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T11:27:25.985+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T11:27:25.986+0200 DEBUG building SimpleValue for password
2023-01-21T11:27:25.986+0200 DEBUG Building property password
2023-01-21T11:27:25.986+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T11:27:25.987+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T11:27:25.987+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T11:27:25.987+0200 DEBUG building SimpleValue for userName
2023-01-21T11:27:25.987+0200 DEBUG Building property userName
2023-01-21T11:27:25.990+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T11:27:25.990+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T11:27:25.990+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T11:27:25.992+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T11:27:26.051+0200 DEBUG Building session factory
2023-01-21T11:27:26.053+0200 DEBUG SessionFactory name : null
2023-01-21T11:27:26.053+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T11:27:26.053+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T11:27:26.054+0200 DEBUG Statistics: disabled
2023-01-21T11:27:26.054+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T11:27:26.054+0200 DEBUG Default entity-mode: pojo
2023-01-21T11:27:26.054+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T11:27:26.055+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T11:27:26.055+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T11:27:26.055+0200 DEBUG Default batch fetch size: -1
2023-01-21T11:27:26.055+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T11:27:26.055+0200 DEBUG Default null ordering: NONE
2023-01-21T11:27:26.055+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T11:27:26.055+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T11:27:26.056+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T11:27:26.056+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T11:27:26.056+0200 DEBUG Query language substitutions: {}
2023-01-21T11:27:26.056+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T11:27:26.056+0200 DEBUG Named query checking : enabled
2023-01-21T11:27:26.056+0200 DEBUG Second-level cache: enabled
2023-01-21T11:27:26.057+0200 DEBUG Second-level query cache: disabled
2023-01-21T11:27:26.057+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6fca2a8f
2023-01-21T11:27:26.057+0200 DEBUG Second-level cache region prefix: null
2023-01-21T11:27:26.057+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T11:27:26.057+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T11:27:26.057+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T11:27:26.057+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T11:27:26.058+0200 DEBUG JDBC batch size: 15
2023-01-21T11:27:26.058+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T11:27:26.058+0200 DEBUG Scrollable result sets: enabled
2023-01-21T11:27:26.058+0200 DEBUG Wrap result sets: disabled
2023-01-21T11:27:26.058+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T11:27:26.058+0200 DEBUG JDBC result set fetch size: null
2023-01-21T11:27:26.059+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T11:27:26.059+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T11:27:26.154+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T11:27:26.154+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ba05e38, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T11:27:26.176+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T11:27:26.177+0200 DEBUG Instantiated session factory
2023-01-21T11:27:26.234+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:27:26.235+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:27:26.255+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:27:26.255+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:27:26.319+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T11:27:26.319+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:27:26.329+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T11:28:17.772+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T11:28:17.801+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T11:28:17.806+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T11:28:17.814+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T11:28:17.931+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T11:28:17.934+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T11:28:18.018+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T11:28:18.019+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T11:28:18.029+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T11:28:18.467+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T11:28:18.497+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T11:28:18.509+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T11:28:18.536+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T11:28:18.536+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T11:28:18.537+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T11:28:18.538+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1040be71
2023-01-21T11:28:18.539+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@28dcca0c
2023-01-21T11:28:18.540+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@4a8355dd
2023-01-21T11:28:18.542+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T11:28:18.542+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T11:28:18.542+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65987993
2023-01-21T11:28:18.544+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T11:28:18.545+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T11:28:18.545+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T11:28:18.547+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T11:28:18.548+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T11:28:18.548+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@710636b0
2023-01-21T11:28:18.550+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T11:28:18.550+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T11:28:18.550+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T11:28:18.553+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T11:28:18.554+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T11:28:18.554+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e535154
2023-01-21T11:28:18.557+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T11:28:18.557+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T11:28:18.558+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T11:28:18.559+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T11:28:18.560+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T11:28:18.560+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T11:28:18.562+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T11:28:18.563+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T11:28:18.565+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T11:28:18.565+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T11:28:18.567+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T11:28:18.567+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T11:28:18.568+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@624ea235
2023-01-21T11:28:18.569+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f43c82
2023-01-21T11:28:18.570+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T11:28:18.571+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T11:28:18.572+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T11:28:18.573+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T11:28:18.577+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T11:28:18.577+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T11:28:18.579+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T11:28:18.579+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T11:28:18.581+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T11:28:18.581+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T11:28:18.582+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T11:28:18.583+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T11:28:18.586+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T11:28:18.586+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T11:28:18.588+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T11:28:18.588+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T11:28:18.591+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T11:28:18.591+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T11:28:18.593+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@565f390
2023-01-21T11:28:18.594+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@565f390
2023-01-21T11:28:18.595+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T11:28:18.596+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T11:28:18.597+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T11:28:18.598+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T11:28:18.598+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@448c8166
2023-01-21T11:28:18.600+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@503f91c3
2023-01-21T11:28:18.602+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T11:28:18.602+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T11:28:18.602+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T11:28:18.604+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4ee203eb
2023-01-21T11:28:18.605+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T11:28:18.606+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T11:28:18.607+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T11:28:18.608+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T11:28:18.609+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T11:28:18.609+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T11:28:18.610+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@61710c6
2023-01-21T11:28:18.610+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61710c6
2023-01-21T11:28:18.611+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T11:28:18.612+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T11:28:18.612+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78fa769e
2023-01-21T11:28:18.613+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T11:28:18.613+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T11:28:18.614+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T11:28:18.615+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T11:28:18.615+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T11:28:18.615+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T11:28:18.616+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4c2bb6e0
2023-01-21T11:28:18.617+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@536dbea0
2023-01-21T11:28:18.618+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T11:28:18.619+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T11:28:18.619+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T11:28:18.620+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T11:28:18.621+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T11:28:18.621+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T11:28:18.622+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@2ca923bb
2023-01-21T11:28:18.623+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@51bf5add
2023-01-21T11:28:18.628+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T11:28:18.628+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T11:28:18.629+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56dc1551
2023-01-21T11:28:18.633+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T11:28:18.633+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T11:28:18.637+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T11:28:18.637+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T11:28:18.638+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4fa1c212
2023-01-21T11:28:18.639+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e928fbf
2023-01-21T11:28:18.641+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@895e367
2023-01-21T11:28:18.645+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T11:28:18.645+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T11:28:18.646+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20d7d6fb
2023-01-21T11:28:18.647+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ef782af
2023-01-21T11:28:18.647+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T11:28:18.647+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T11:28:18.648+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T11:28:18.648+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T11:28:18.648+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T11:28:18.648+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T11:28:18.657+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T11:28:18.673+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:28:18.674+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T11:28:18.674+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T11:28:18.678+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T11:28:18.679+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T11:28:19.527+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T11:28:19.528+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T11:28:19.528+0200 DEBUG JDBC version : 4.2
2023-01-21T11:28:19.541+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T11:28:19.620+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T11:28:19.623+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T11:28:19.669+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T11:28:19.670+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T11:28:19.670+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:28:19.671+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:28:19.671+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T11:28:19.673+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T11:28:19.673+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T11:28:19.675+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:28:19.676+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T11:28:19.677+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T11:28:19.678+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T11:28:19.678+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T11:28:19.679+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:28:19.680+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T11:28:19.717+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T11:28:19.750+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T11:28:19.810+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T11:28:19.827+0200 DEBUG Import with entity name Users
2023-01-21T11:28:19.836+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T11:28:19.866+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T11:28:19.871+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T11:28:19.874+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T11:28:19.875+0200 DEBUG building SimpleValue for id
2023-01-21T11:28:19.878+0200 DEBUG Building property id
2023-01-21T11:28:19.889+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T11:28:19.890+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T11:28:19.890+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T11:28:19.891+0200 DEBUG building SimpleValue for password
2023-01-21T11:28:19.891+0200 DEBUG Building property password
2023-01-21T11:28:19.892+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T11:28:19.893+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T11:28:19.893+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T11:28:19.894+0200 DEBUG building SimpleValue for userName
2023-01-21T11:28:19.894+0200 DEBUG Building property userName
2023-01-21T11:28:19.896+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T11:28:19.896+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T11:28:19.897+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T11:28:19.906+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T11:28:19.962+0200 DEBUG Building session factory
2023-01-21T11:28:19.964+0200 DEBUG SessionFactory name : null
2023-01-21T11:28:19.965+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T11:28:19.965+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T11:28:19.965+0200 DEBUG Statistics: disabled
2023-01-21T11:28:19.965+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T11:28:19.965+0200 DEBUG Default entity-mode: pojo
2023-01-21T11:28:19.966+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T11:28:19.966+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T11:28:19.966+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T11:28:19.966+0200 DEBUG Default batch fetch size: -1
2023-01-21T11:28:19.966+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T11:28:19.966+0200 DEBUG Default null ordering: NONE
2023-01-21T11:28:19.966+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T11:28:19.967+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T11:28:19.967+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T11:28:19.968+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T11:28:19.968+0200 DEBUG Query language substitutions: {}
2023-01-21T11:28:19.969+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T11:28:19.969+0200 DEBUG Named query checking : enabled
2023-01-21T11:28:19.969+0200 DEBUG Second-level cache: enabled
2023-01-21T11:28:19.969+0200 DEBUG Second-level query cache: disabled
2023-01-21T11:28:19.970+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6fca2a8f
2023-01-21T11:28:19.970+0200 DEBUG Second-level cache region prefix: null
2023-01-21T11:28:19.971+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T11:28:19.971+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T11:28:19.971+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T11:28:19.971+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T11:28:19.971+0200 DEBUG JDBC batch size: 15
2023-01-21T11:28:19.971+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T11:28:19.971+0200 DEBUG Scrollable result sets: enabled
2023-01-21T11:28:19.971+0200 DEBUG Wrap result sets: disabled
2023-01-21T11:28:19.972+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T11:28:19.972+0200 DEBUG JDBC result set fetch size: null
2023-01-21T11:28:19.972+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T11:28:19.972+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T11:28:20.078+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T11:28:20.079+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ba05e38, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T11:28:20.099+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T11:28:20.102+0200 DEBUG Instantiated session factory
2023-01-21T11:28:20.187+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:28:20.187+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:28:20.221+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:28:20.222+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:28:20.304+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T11:28:20.304+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:28:20.310+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T11:31:54.799+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T11:31:54.831+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T11:31:54.835+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T11:31:54.842+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T11:31:54.969+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T11:31:54.973+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T11:31:55.082+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T11:31:55.082+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T11:31:55.095+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T11:31:55.750+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T11:31:55.792+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T11:31:55.807+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T11:31:55.844+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T11:31:55.845+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T11:31:55.845+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T11:31:55.848+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1040be71
2023-01-21T11:31:55.851+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@28dcca0c
2023-01-21T11:31:55.852+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@4a8355dd
2023-01-21T11:31:55.855+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T11:31:55.856+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T11:31:55.857+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65987993
2023-01-21T11:31:55.859+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T11:31:55.859+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T11:31:55.860+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T11:31:55.864+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T11:31:55.865+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T11:31:55.865+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@710636b0
2023-01-21T11:31:55.867+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T11:31:55.868+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T11:31:55.868+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T11:31:55.870+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T11:31:55.871+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T11:31:55.871+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e535154
2023-01-21T11:31:55.873+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T11:31:55.873+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T11:31:55.874+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T11:31:55.875+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T11:31:55.876+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T11:31:55.876+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T11:31:55.878+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T11:31:55.878+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T11:31:55.880+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T11:31:55.880+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T11:31:55.882+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T11:31:55.883+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T11:31:55.885+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@624ea235
2023-01-21T11:31:55.886+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f43c82
2023-01-21T11:31:55.888+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T11:31:55.888+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T11:31:55.890+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T11:31:55.891+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T11:31:55.898+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T11:31:55.898+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T11:31:55.900+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T11:31:55.900+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T11:31:55.904+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T11:31:55.905+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T11:31:55.907+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T11:31:55.908+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T11:31:55.912+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T11:31:55.913+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T11:31:55.915+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T11:31:55.915+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T11:31:55.918+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T11:31:55.920+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T11:31:55.922+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@565f390
2023-01-21T11:31:55.922+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@565f390
2023-01-21T11:31:55.925+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T11:31:55.925+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T11:31:55.927+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T11:31:55.927+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T11:31:55.928+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@448c8166
2023-01-21T11:31:55.931+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@503f91c3
2023-01-21T11:31:55.932+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T11:31:55.933+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T11:31:55.933+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T11:31:55.934+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4ee203eb
2023-01-21T11:31:55.936+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T11:31:55.936+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T11:31:55.938+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T11:31:55.938+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T11:31:55.940+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T11:31:55.941+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T11:31:55.943+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@61710c6
2023-01-21T11:31:55.944+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61710c6
2023-01-21T11:31:55.946+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T11:31:55.947+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T11:31:55.948+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78fa769e
2023-01-21T11:31:55.951+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T11:31:55.951+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T11:31:55.952+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T11:31:55.953+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T11:31:55.954+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T11:31:55.955+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T11:31:55.957+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4c2bb6e0
2023-01-21T11:31:55.958+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@536dbea0
2023-01-21T11:31:55.964+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T11:31:55.966+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T11:31:55.967+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T11:31:55.968+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T11:31:55.969+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T11:31:55.969+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T11:31:55.971+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@2ca923bb
2023-01-21T11:31:55.973+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@51bf5add
2023-01-21T11:31:55.980+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T11:31:55.980+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T11:31:55.981+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56dc1551
2023-01-21T11:31:55.987+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T11:31:55.988+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T11:31:55.995+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T11:31:55.995+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T11:31:55.996+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4fa1c212
2023-01-21T11:31:55.998+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e928fbf
2023-01-21T11:31:56.000+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@895e367
2023-01-21T11:31:56.006+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T11:31:56.007+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T11:31:56.008+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20d7d6fb
2023-01-21T11:31:56.009+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ef782af
2023-01-21T11:31:56.009+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T11:31:56.010+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T11:31:56.010+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T11:31:56.010+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T11:31:56.011+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T11:31:56.011+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T11:31:56.027+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T11:31:56.039+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:31:56.041+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T11:31:56.045+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T11:31:56.050+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T11:31:56.050+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T11:31:56.860+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T11:31:56.861+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T11:31:56.861+0200 DEBUG JDBC version : 4.2
2023-01-21T11:31:56.878+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T11:31:56.973+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T11:31:56.977+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T11:31:57.035+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T11:31:57.036+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T11:31:57.041+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:31:57.041+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:31:57.045+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T11:31:57.049+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T11:31:57.050+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T11:31:57.053+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:31:57.056+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T11:31:57.057+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T11:31:57.058+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T11:31:57.059+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T11:31:57.060+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:31:57.062+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T11:31:57.137+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T11:31:57.200+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T11:31:57.240+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T11:31:57.248+0200 DEBUG Import with entity name Users
2023-01-21T11:31:57.252+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T11:31:57.289+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T11:31:57.298+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T11:31:57.301+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T11:31:57.310+0200 DEBUG building SimpleValue for id
2023-01-21T11:31:57.313+0200 DEBUG Building property id
2023-01-21T11:31:57.327+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T11:31:57.328+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T11:31:57.328+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T11:31:57.328+0200 DEBUG building SimpleValue for password
2023-01-21T11:31:57.328+0200 DEBUG Building property password
2023-01-21T11:31:57.329+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T11:31:57.329+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T11:31:57.329+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T11:31:57.329+0200 DEBUG building SimpleValue for userName
2023-01-21T11:31:57.330+0200 DEBUG Building property userName
2023-01-21T11:31:57.332+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T11:31:57.333+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T11:31:57.333+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T11:31:57.335+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T11:31:57.388+0200 DEBUG Building session factory
2023-01-21T11:31:57.389+0200 DEBUG SessionFactory name : null
2023-01-21T11:31:57.390+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T11:31:57.390+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T11:31:57.390+0200 DEBUG Statistics: disabled
2023-01-21T11:31:57.390+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T11:31:57.390+0200 DEBUG Default entity-mode: pojo
2023-01-21T11:31:57.390+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T11:31:57.391+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T11:31:57.391+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T11:31:57.391+0200 DEBUG Default batch fetch size: -1
2023-01-21T11:31:57.391+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T11:31:57.391+0200 DEBUG Default null ordering: NONE
2023-01-21T11:31:57.391+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T11:31:57.391+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T11:31:57.391+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T11:31:57.392+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T11:31:57.392+0200 DEBUG Query language substitutions: {}
2023-01-21T11:31:57.392+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T11:31:57.392+0200 DEBUG Named query checking : enabled
2023-01-21T11:31:57.392+0200 DEBUG Second-level cache: enabled
2023-01-21T11:31:57.392+0200 DEBUG Second-level query cache: disabled
2023-01-21T11:31:57.392+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6fca2a8f
2023-01-21T11:31:57.392+0200 DEBUG Second-level cache region prefix: null
2023-01-21T11:31:57.393+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T11:31:57.393+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T11:31:57.393+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T11:31:57.393+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T11:31:57.393+0200 DEBUG JDBC batch size: 15
2023-01-21T11:31:57.393+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T11:31:57.393+0200 DEBUG Scrollable result sets: enabled
2023-01-21T11:31:57.393+0200 DEBUG Wrap result sets: disabled
2023-01-21T11:31:57.394+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T11:31:57.394+0200 DEBUG JDBC result set fetch size: null
2023-01-21T11:31:57.394+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T11:31:57.394+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T11:31:57.464+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T11:31:57.465+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ba05e38, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T11:31:57.481+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T11:31:57.482+0200 DEBUG Instantiated session factory
2023-01-21T11:31:57.561+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:31:57.562+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:31:57.601+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:31:57.604+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:31:57.661+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T11:31:57.661+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:31:57.666+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T11:35:55.121+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T11:35:55.159+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T11:35:55.166+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T11:35:55.177+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T11:35:55.312+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T11:35:55.315+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T11:35:55.408+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T11:35:55.409+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T11:35:55.421+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T11:35:55.918+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T11:35:55.953+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T11:35:55.965+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T11:35:56.000+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T11:35:56.001+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T11:35:56.001+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T11:35:56.003+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@433defed
2023-01-21T11:35:56.005+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@52f27fbd
2023-01-21T11:35:56.006+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@c430e6c
2023-01-21T11:35:56.008+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T11:35:56.008+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T11:35:56.009+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T11:35:56.011+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T11:35:56.012+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T11:35:56.012+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T11:35:56.015+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T11:35:56.015+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T11:35:56.016+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T11:35:56.018+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T11:35:56.019+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T11:35:56.019+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T11:35:56.024+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T11:35:56.024+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T11:35:56.025+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T11:35:56.027+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T11:35:56.028+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T11:35:56.028+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38467116
2023-01-21T11:35:56.030+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T11:35:56.030+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T11:35:56.031+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T11:35:56.033+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T11:35:56.034+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T11:35:56.035+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T11:35:56.036+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T11:35:56.037+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@97e93f1
2023-01-21T11:35:56.038+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@97e93f1
2023-01-21T11:35:56.039+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@782859e
2023-01-21T11:35:56.041+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@210ab13f
2023-01-21T11:35:56.044+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@446a1e84
2023-01-21T11:35:56.044+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@446a1e84
2023-01-21T11:35:56.046+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T11:35:56.046+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T11:35:56.051+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T11:35:56.051+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T11:35:56.053+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T11:35:56.054+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T11:35:56.056+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T11:35:56.056+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T11:35:56.058+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T11:35:56.058+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T11:35:56.061+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T11:35:56.061+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T11:35:56.064+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T11:35:56.064+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T11:35:56.067+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T11:35:56.068+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T11:35:56.070+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T11:35:56.070+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T11:35:56.072+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@642a7222
2023-01-21T11:35:56.072+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@642a7222
2023-01-21T11:35:56.074+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T11:35:56.074+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T11:35:56.075+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15d49048
2023-01-21T11:35:56.077+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2235eaab
2023-01-21T11:35:56.079+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T11:35:56.079+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T11:35:56.079+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T11:35:56.080+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7068e664
2023-01-21T11:35:56.082+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T11:35:56.082+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T11:35:56.085+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T11:35:56.085+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T11:35:56.087+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T11:35:56.087+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T11:35:56.088+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T11:35:56.089+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T11:35:56.091+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T11:35:56.091+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T11:35:56.092+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54e041a4
2023-01-21T11:35:56.093+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4149c063
2023-01-21T11:35:56.094+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4149c063
2023-01-21T11:35:56.094+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4149c063
2023-01-21T11:35:56.095+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T11:35:56.096+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T11:35:56.096+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T11:35:56.097+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4ef74c30
2023-01-21T11:35:56.098+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@776a6d9b
2023-01-21T11:35:56.100+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T11:35:56.100+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T11:35:56.101+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T11:35:56.104+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T11:35:56.104+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T11:35:56.104+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T11:35:56.105+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@1ebea008
2023-01-21T11:35:56.107+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
2023-01-21T11:35:56.111+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T11:35:56.112+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T11:35:56.112+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74f6c5d8
2023-01-21T11:35:56.117+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T11:35:56.117+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T11:35:56.123+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T11:35:56.124+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T11:35:56.125+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3116c353
2023-01-21T11:35:56.125+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3224a577
2023-01-21T11:35:56.130+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@7a3793c7
2023-01-21T11:35:56.135+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T11:35:56.135+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T11:35:56.137+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T11:35:56.137+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T11:35:56.137+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T11:35:56.138+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T11:35:56.139+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T11:35:56.139+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T11:35:56.140+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@12299890
2023-01-21T11:35:56.144+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fba3fc4
2023-01-21T11:35:56.163+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T11:35:56.181+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:35:56.182+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T11:35:56.184+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T11:35:56.188+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T11:35:56.188+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T11:35:57.033+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T11:35:57.034+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T11:35:57.034+0200 DEBUG JDBC version : 4.2
2023-01-21T11:35:57.049+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T11:35:57.139+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T11:35:57.142+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T11:35:57.194+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T11:35:57.195+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T11:35:57.196+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:35:57.197+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:35:57.197+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T11:35:57.199+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T11:35:57.200+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T11:35:57.201+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:35:57.204+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T11:35:57.204+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T11:35:57.205+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T11:35:57.206+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T11:35:57.206+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:35:57.207+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T11:35:57.254+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T11:35:57.305+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T11:35:57.381+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T11:35:57.395+0200 DEBUG Import with entity name Users
2023-01-21T11:35:57.399+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T11:35:57.440+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T11:35:57.447+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T11:35:57.450+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T11:35:57.452+0200 DEBUG building SimpleValue for id
2023-01-21T11:35:57.455+0200 DEBUG Building property id
2023-01-21T11:35:57.468+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T11:35:57.468+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T11:35:57.468+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T11:35:57.469+0200 DEBUG building SimpleValue for password
2023-01-21T11:35:57.470+0200 DEBUG Building property password
2023-01-21T11:35:57.472+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T11:35:57.474+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T11:35:57.475+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T11:35:57.475+0200 DEBUG building SimpleValue for userName
2023-01-21T11:35:57.476+0200 DEBUG Building property userName
2023-01-21T11:35:57.478+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T11:35:57.483+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T11:35:57.484+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T11:35:57.486+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T11:35:57.567+0200 DEBUG Building session factory
2023-01-21T11:35:57.568+0200 DEBUG SessionFactory name : null
2023-01-21T11:35:57.569+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T11:35:57.569+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T11:35:57.569+0200 DEBUG Statistics: disabled
2023-01-21T11:35:57.569+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T11:35:57.569+0200 DEBUG Default entity-mode: pojo
2023-01-21T11:35:57.570+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T11:35:57.570+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T11:35:57.570+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T11:35:57.570+0200 DEBUG Default batch fetch size: -1
2023-01-21T11:35:57.570+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T11:35:57.570+0200 DEBUG Default null ordering: NONE
2023-01-21T11:35:57.570+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T11:35:57.571+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T11:35:57.571+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T11:35:57.571+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T11:35:57.571+0200 DEBUG Query language substitutions: {}
2023-01-21T11:35:57.571+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T11:35:57.571+0200 DEBUG Named query checking : enabled
2023-01-21T11:35:57.572+0200 DEBUG Second-level cache: enabled
2023-01-21T11:35:57.572+0200 DEBUG Second-level query cache: disabled
2023-01-21T11:35:57.572+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@71391b3f
2023-01-21T11:35:57.572+0200 DEBUG Second-level cache region prefix: null
2023-01-21T11:35:57.572+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T11:35:57.572+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T11:35:57.572+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T11:35:57.573+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T11:35:57.573+0200 DEBUG JDBC batch size: 15
2023-01-21T11:35:57.573+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T11:35:57.573+0200 DEBUG Scrollable result sets: enabled
2023-01-21T11:35:57.573+0200 DEBUG Wrap result sets: disabled
2023-01-21T11:35:57.574+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T11:35:57.574+0200 DEBUG JDBC result set fetch size: null
2023-01-21T11:35:57.574+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T11:35:57.574+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T11:35:57.688+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T11:35:57.688+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3e7dfd44, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T11:35:57.718+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T11:35:57.773+0200 DEBUG Instantiated session factory
2023-01-21T11:35:57.835+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:35:57.836+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:35:57.855+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:35:57.855+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:35:57.954+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T11:35:57.955+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:35:57.965+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T11:36:47.529+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T11:36:47.559+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T11:36:47.566+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T11:36:47.577+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T11:36:47.693+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T11:36:47.696+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T11:36:47.755+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T11:36:47.756+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T11:36:47.765+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T11:36:48.155+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T11:36:48.182+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T11:36:48.191+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T11:36:48.210+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@2b30a42c
2023-01-21T11:36:48.210+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@2b30a42c
2023-01-21T11:36:48.211+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2b30a42c
2023-01-21T11:36:48.211+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@19932c16
2023-01-21T11:36:48.212+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@1040be71
2023-01-21T11:36:48.213+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@3f4faf53
2023-01-21T11:36:48.215+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4d0d9fe7
2023-01-21T11:36:48.215+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4d0d9fe7
2023-01-21T11:36:48.215+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4d0d9fe7
2023-01-21T11:36:48.216+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@5a59ca5e
2023-01-21T11:36:48.217+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@5a59ca5e
2023-01-21T11:36:48.217+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5a59ca5e
2023-01-21T11:36:48.218+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7d900ecf
2023-01-21T11:36:48.218+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7d900ecf
2023-01-21T11:36:48.219+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d900ecf
2023-01-21T11:36:48.220+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@4201c465
2023-01-21T11:36:48.221+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@4201c465
2023-01-21T11:36:48.221+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4201c465
2023-01-21T11:36:48.224+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@43f02ef2
2023-01-21T11:36:48.224+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@43f02ef2
2023-01-21T11:36:48.224+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@43f02ef2
2023-01-21T11:36:48.226+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@338fc1d8
2023-01-21T11:36:48.226+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@338fc1d8
2023-01-21T11:36:48.226+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@338fc1d8
2023-01-21T11:36:48.227+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@65f8f5ae
2023-01-21T11:36:48.227+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@65f8f5ae
2023-01-21T11:36:48.227+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65f8f5ae
2023-01-21T11:36:48.228+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@15888343
2023-01-21T11:36:48.229+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@15888343
2023-01-21T11:36:48.230+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@333d4a8c
2023-01-21T11:36:48.230+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@333d4a8c
2023-01-21T11:36:48.231+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@c05fddc
2023-01-21T11:36:48.231+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@c05fddc
2023-01-21T11:36:48.232+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@79207381
2023-01-21T11:36:48.233+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4b520ea8
2023-01-21T11:36:48.233+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@34bde49d
2023-01-21T11:36:48.234+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@34bde49d
2023-01-21T11:36:48.235+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7857fe2
2023-01-21T11:36:48.235+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7857fe2
2023-01-21T11:36:48.238+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@57db2b13
2023-01-21T11:36:48.239+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@57db2b13
2023-01-21T11:36:48.240+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1b919693
2023-01-21T11:36:48.240+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1b919693
2023-01-21T11:36:48.242+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@626abbd0
2023-01-21T11:36:48.242+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@626abbd0
2023-01-21T11:36:48.244+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5dafbe45
2023-01-21T11:36:48.244+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5dafbe45
2023-01-21T11:36:48.245+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@12591ac8
2023-01-21T11:36:48.246+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@12591ac8
2023-01-21T11:36:48.247+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7dc19a70
2023-01-21T11:36:48.247+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7dc19a70
2023-01-21T11:36:48.249+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@23941fb4
2023-01-21T11:36:48.249+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@23941fb4
2023-01-21T11:36:48.251+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@6e2aa843
2023-01-21T11:36:48.251+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@6e2aa843
2023-01-21T11:36:48.252+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@1e16c0aa
2023-01-21T11:36:48.252+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1e16c0aa
2023-01-21T11:36:48.253+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2023-01-21T11:36:48.253+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5be1d0a4
2023-01-21T11:36:48.253+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5be1d0a4
2023-01-21T11:36:48.254+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@642a7222
2023-01-21T11:36:48.255+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@15d49048
2023-01-21T11:36:48.256+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@15d49048
2023-01-21T11:36:48.256+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@15d49048
2023-01-21T11:36:48.257+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@17503f6b
2023-01-21T11:36:48.258+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@10289886
2023-01-21T11:36:48.258+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10289886
2023-01-21T11:36:48.259+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@3e78b6a5
2023-01-21T11:36:48.259+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e78b6a5
2023-01-21T11:36:48.260+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@64b0598
2023-01-21T11:36:48.261+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@64b0598
2023-01-21T11:36:48.261+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@28194a50
2023-01-21T11:36:48.261+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@28194a50
2023-01-21T11:36:48.263+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@4a07d605
2023-01-21T11:36:48.263+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@4a07d605
2023-01-21T11:36:48.264+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5f9edf14
2023-01-21T11:36:48.265+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@7fd7a283
2023-01-21T11:36:48.265+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@7fd7a283
2023-01-21T11:36:48.265+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@7fd7a283
2023-01-21T11:36:48.266+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@18317edc
2023-01-21T11:36:48.266+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@18317edc
2023-01-21T11:36:48.266+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@18317edc
2023-01-21T11:36:48.267+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@76b07f29
2023-01-21T11:36:48.268+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@7d61eb55
2023-01-21T11:36:48.269+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@638ef7ed
2023-01-21T11:36:48.269+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@638ef7ed
2023-01-21T11:36:48.269+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@638ef7ed
2023-01-21T11:36:48.270+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1f760b47
2023-01-21T11:36:48.270+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1f760b47
2023-01-21T11:36:48.271+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1f760b47
2023-01-21T11:36:48.271+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@3576ddc2
2023-01-21T11:36:48.272+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@2ca26d77
2023-01-21T11:36:48.275+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@471a9022
2023-01-21T11:36:48.275+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@471a9022
2023-01-21T11:36:48.276+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@a1f72f5
2023-01-21T11:36:48.278+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@3336e6b6
2023-01-21T11:36:48.279+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3336e6b6
2023-01-21T11:36:48.281+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@37911f88
2023-01-21T11:36:48.281+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@37911f88
2023-01-21T11:36:48.282+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@407a7f2a
2023-01-21T11:36:48.284+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2cb2fc20
2023-01-21T11:36:48.285+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@4e928fbf
2023-01-21T11:36:48.288+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@589da3f3
2023-01-21T11:36:48.288+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@589da3f3
2023-01-21T11:36:48.289+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@52815fa3
2023-01-21T11:36:48.289+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@50313382
2023-01-21T11:36:48.290+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1cb346ea
2023-01-21T11:36:48.290+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c012563
2023-01-21T11:36:48.290+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@14a50707
2023-01-21T11:36:48.290+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T11:36:48.291+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4bd31064
2023-01-21T11:36:48.291+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@e3c0e40
2023-01-21T11:36:48.300+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T11:36:48.313+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:36:48.314+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T11:36:48.314+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T11:36:48.317+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T11:36:48.317+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T11:36:48.963+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T11:36:48.963+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T11:36:48.964+0200 DEBUG JDBC version : 4.2
2023-01-21T11:36:48.974+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T11:36:49.038+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T11:36:49.040+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T11:36:49.079+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T11:36:49.080+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T11:36:49.080+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:36:49.081+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:36:49.081+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T11:36:49.082+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T11:36:49.083+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T11:36:49.085+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:36:49.086+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T11:36:49.087+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T11:36:49.087+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T11:36:49.087+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T11:36:49.088+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:36:49.088+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T11:36:49.115+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T11:36:49.217+0200 DEBUG Building session factory
2023-01-21T11:36:49.219+0200 DEBUG SessionFactory name : null
2023-01-21T11:36:49.219+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T11:36:49.221+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T11:36:49.221+0200 DEBUG Statistics: disabled
2023-01-21T11:36:49.222+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T11:36:49.222+0200 DEBUG Default entity-mode: pojo
2023-01-21T11:36:49.223+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T11:36:49.224+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T11:36:49.224+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T11:36:49.225+0200 DEBUG Default batch fetch size: -1
2023-01-21T11:36:49.226+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T11:36:49.226+0200 DEBUG Default null ordering: NONE
2023-01-21T11:36:49.226+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T11:36:49.227+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T11:36:49.227+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T11:36:49.227+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T11:36:49.228+0200 DEBUG Query language substitutions: {}
2023-01-21T11:36:49.228+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T11:36:49.228+0200 DEBUG Named query checking : enabled
2023-01-21T11:36:49.229+0200 DEBUG Second-level cache: enabled
2023-01-21T11:36:49.229+0200 DEBUG Second-level query cache: disabled
2023-01-21T11:36:49.230+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@30e92cb9
2023-01-21T11:36:49.230+0200 DEBUG Second-level cache region prefix: null
2023-01-21T11:36:49.231+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T11:36:49.231+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T11:36:49.232+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T11:36:49.232+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T11:36:49.232+0200 DEBUG JDBC batch size: 15
2023-01-21T11:36:49.232+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T11:36:49.232+0200 DEBUG Scrollable result sets: enabled
2023-01-21T11:36:49.233+0200 DEBUG Wrap result sets: disabled
2023-01-21T11:36:49.233+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T11:36:49.233+0200 DEBUG JDBC result set fetch size: null
2023-01-21T11:36:49.233+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T11:36:49.233+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T11:36:49.300+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T11:36:49.300+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@67a056f1, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T11:36:49.312+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T11:36:49.313+0200 DEBUG Instantiated session factory
2023-01-21T11:36:49.359+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@543e593] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-21T11:36:49.439+0200 DEBUG Checking 0 named HQL queries
2023-01-21T11:36:49.440+0200 DEBUG Checking 0 named SQL queries
2023-01-21T11:36:49.449+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@770b3be0
2023-01-21T11:36:49.453+0200 DEBUG Registering SessionFactory: 0209a3fd-673a-4c3c-880e-df0768ab7d85 (<unnamed>)
2023-01-21T11:36:49.453+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-21T11:36:49.552+0200 DEBUG Statistics initialized [enabled=false]
2023-01-21T11:36:49.557+0200 DEBUG begin
2023-01-21T11:37:05.490+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T11:37:05.549+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T11:37:05.553+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T11:37:05.561+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T11:37:05.772+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T11:37:05.776+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T11:37:05.878+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T11:37:05.878+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T11:37:05.891+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T11:37:06.299+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T11:37:06.326+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T11:37:06.334+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T11:37:06.354+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T11:37:06.354+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T11:37:06.354+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T11:37:06.355+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@433defed
2023-01-21T11:37:06.357+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@52f27fbd
2023-01-21T11:37:06.357+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@c430e6c
2023-01-21T11:37:06.359+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T11:37:06.359+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T11:37:06.359+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T11:37:06.360+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T11:37:06.361+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T11:37:06.361+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T11:37:06.362+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T11:37:06.362+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T11:37:06.363+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T11:37:06.365+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T11:37:06.365+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T11:37:06.365+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T11:37:06.367+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T11:37:06.367+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T11:37:06.367+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T11:37:06.368+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T11:37:06.368+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T11:37:06.369+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38467116
2023-01-21T11:37:06.370+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T11:37:06.370+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T11:37:06.370+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T11:37:06.372+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T11:37:06.372+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T11:37:06.373+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T11:37:06.373+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T11:37:06.374+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@97e93f1
2023-01-21T11:37:06.374+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@97e93f1
2023-01-21T11:37:06.375+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@782859e
2023-01-21T11:37:06.376+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@210ab13f
2023-01-21T11:37:06.376+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@446a1e84
2023-01-21T11:37:06.377+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@446a1e84
2023-01-21T11:37:06.378+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T11:37:06.378+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T11:37:06.381+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T11:37:06.382+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T11:37:06.384+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T11:37:06.384+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T11:37:06.386+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T11:37:06.386+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T11:37:06.387+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T11:37:06.388+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T11:37:06.389+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T11:37:06.389+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T11:37:06.391+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T11:37:06.391+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T11:37:06.393+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T11:37:06.394+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T11:37:06.395+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T11:37:06.395+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T11:37:06.396+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@642a7222
2023-01-21T11:37:06.396+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@642a7222
2023-01-21T11:37:06.397+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T11:37:06.397+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T11:37:06.397+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15d49048
2023-01-21T11:37:06.398+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2235eaab
2023-01-21T11:37:06.399+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T11:37:06.399+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T11:37:06.400+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T11:37:06.401+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7068e664
2023-01-21T11:37:06.402+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T11:37:06.402+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T11:37:06.404+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T11:37:06.404+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T11:37:06.405+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T11:37:06.405+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T11:37:06.406+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T11:37:06.406+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T11:37:06.407+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T11:37:06.408+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T11:37:06.408+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54e041a4
2023-01-21T11:37:06.409+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4149c063
2023-01-21T11:37:06.409+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4149c063
2023-01-21T11:37:06.409+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4149c063
2023-01-21T11:37:06.410+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T11:37:06.411+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T11:37:06.411+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T11:37:06.413+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4ef74c30
2023-01-21T11:37:06.414+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@776a6d9b
2023-01-21T11:37:06.415+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T11:37:06.415+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T11:37:06.416+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T11:37:06.417+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T11:37:06.417+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T11:37:06.417+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T11:37:06.418+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@1ebea008
2023-01-21T11:37:06.419+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
2023-01-21T11:37:06.423+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T11:37:06.423+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T11:37:06.424+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74f6c5d8
2023-01-21T11:37:06.428+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T11:37:06.428+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T11:37:06.430+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T11:37:06.431+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T11:37:06.431+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3116c353
2023-01-21T11:37:06.432+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3224a577
2023-01-21T11:37:06.433+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@7a3793c7
2023-01-21T11:37:06.436+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T11:37:06.437+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T11:37:06.437+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T11:37:06.437+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T11:37:06.438+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T11:37:06.438+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T11:37:06.438+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T11:37:06.438+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T11:37:06.439+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@12299890
2023-01-21T11:37:06.439+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fba3fc4
2023-01-21T11:37:06.448+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T11:37:06.459+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:37:06.459+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T11:37:06.459+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T11:37:06.463+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T11:37:06.463+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T11:37:07.258+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T11:37:07.258+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T11:37:07.258+0200 DEBUG JDBC version : 4.2
2023-01-21T11:37:07.274+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T11:37:07.365+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T11:37:07.367+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T11:37:07.420+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T11:37:07.421+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T11:37:07.421+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:37:07.422+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:37:07.422+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T11:37:07.425+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T11:37:07.426+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T11:37:07.428+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:37:07.429+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T11:37:07.430+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T11:37:07.431+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T11:37:07.431+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T11:37:07.432+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:37:07.433+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T11:37:07.469+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T11:37:07.508+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T11:37:07.568+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T11:37:07.575+0200 DEBUG Import with entity name Users
2023-01-21T11:37:07.580+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T11:37:07.610+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T11:37:07.615+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T11:37:07.617+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T11:37:07.619+0200 DEBUG building SimpleValue for id
2023-01-21T11:37:07.621+0200 DEBUG Building property id
2023-01-21T11:37:07.628+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T11:37:07.629+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T11:37:07.629+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T11:37:07.629+0200 DEBUG building SimpleValue for password
2023-01-21T11:37:07.630+0200 DEBUG Building property password
2023-01-21T11:37:07.630+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T11:37:07.631+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T11:37:07.631+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T11:37:07.631+0200 DEBUG building SimpleValue for userName
2023-01-21T11:37:07.631+0200 DEBUG Building property userName
2023-01-21T11:37:07.634+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T11:37:07.634+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T11:37:07.634+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T11:37:07.636+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T11:37:07.688+0200 DEBUG Building session factory
2023-01-21T11:37:07.689+0200 DEBUG SessionFactory name : null
2023-01-21T11:37:07.689+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T11:37:07.689+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T11:37:07.690+0200 DEBUG Statistics: disabled
2023-01-21T11:37:07.690+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T11:37:07.690+0200 DEBUG Default entity-mode: pojo
2023-01-21T11:37:07.690+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T11:37:07.690+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T11:37:07.690+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T11:37:07.690+0200 DEBUG Default batch fetch size: -1
2023-01-21T11:37:07.691+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T11:37:07.691+0200 DEBUG Default null ordering: NONE
2023-01-21T11:37:07.691+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T11:37:07.691+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T11:37:07.692+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T11:37:07.692+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T11:37:07.692+0200 DEBUG Query language substitutions: {}
2023-01-21T11:37:07.696+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T11:37:07.696+0200 DEBUG Named query checking : enabled
2023-01-21T11:37:07.697+0200 DEBUG Second-level cache: enabled
2023-01-21T11:37:07.697+0200 DEBUG Second-level query cache: disabled
2023-01-21T11:37:07.697+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@71391b3f
2023-01-21T11:37:07.697+0200 DEBUG Second-level cache region prefix: null
2023-01-21T11:37:07.698+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T11:37:07.698+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T11:37:07.698+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T11:37:07.698+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T11:37:07.698+0200 DEBUG JDBC batch size: 15
2023-01-21T11:37:07.700+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T11:37:07.700+0200 DEBUG Scrollable result sets: enabled
2023-01-21T11:37:07.700+0200 DEBUG Wrap result sets: disabled
2023-01-21T11:37:07.700+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T11:37:07.701+0200 DEBUG JDBC result set fetch size: null
2023-01-21T11:37:07.701+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T11:37:07.701+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T11:37:07.797+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T11:37:07.798+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3e7dfd44, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T11:37:07.812+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T11:37:07.814+0200 DEBUG Instantiated session factory
2023-01-21T11:37:07.860+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:37:07.861+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:37:07.878+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:37:07.878+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:37:07.953+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T11:37:07.954+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:37:07.958+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T11:40:50.788+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T11:40:50.821+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T11:40:50.825+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T11:40:50.833+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T11:40:50.991+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T11:40:50.997+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T11:40:51.073+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T11:40:51.073+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T11:40:51.082+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T11:40:51.510+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T11:40:51.544+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T11:40:51.557+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T11:40:51.587+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T11:40:51.587+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T11:40:51.587+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T11:40:51.589+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@433defed
2023-01-21T11:40:51.591+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@52f27fbd
2023-01-21T11:40:51.592+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@c430e6c
2023-01-21T11:40:51.594+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T11:40:51.594+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T11:40:51.595+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T11:40:51.597+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T11:40:51.598+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T11:40:51.598+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T11:40:51.600+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T11:40:51.600+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T11:40:51.601+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T11:40:51.602+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T11:40:51.603+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T11:40:51.603+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T11:40:51.605+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T11:40:51.606+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T11:40:51.606+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T11:40:51.608+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T11:40:51.608+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T11:40:51.608+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38467116
2023-01-21T11:40:51.610+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T11:40:51.611+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T11:40:51.611+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T11:40:51.613+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T11:40:51.614+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T11:40:51.616+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T11:40:51.617+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T11:40:51.618+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@97e93f1
2023-01-21T11:40:51.619+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@97e93f1
2023-01-21T11:40:51.620+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@782859e
2023-01-21T11:40:51.621+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@210ab13f
2023-01-21T11:40:51.623+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@446a1e84
2023-01-21T11:40:51.623+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@446a1e84
2023-01-21T11:40:51.626+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T11:40:51.626+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T11:40:51.632+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T11:40:51.633+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T11:40:51.634+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T11:40:51.634+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T11:40:51.636+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T11:40:51.637+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T11:40:51.639+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T11:40:51.639+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T11:40:51.641+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T11:40:51.642+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T11:40:51.644+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T11:40:51.645+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T11:40:51.648+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T11:40:51.649+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T11:40:51.651+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T11:40:51.651+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T11:40:51.653+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@642a7222
2023-01-21T11:40:51.653+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@642a7222
2023-01-21T11:40:51.654+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T11:40:51.655+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T11:40:51.655+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15d49048
2023-01-21T11:40:51.657+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2235eaab
2023-01-21T11:40:51.658+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T11:40:51.658+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T11:40:51.659+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T11:40:51.660+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7068e664
2023-01-21T11:40:51.662+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T11:40:51.662+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T11:40:51.664+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T11:40:51.664+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T11:40:51.666+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T11:40:51.666+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T11:40:51.667+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T11:40:51.667+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T11:40:51.669+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T11:40:51.670+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T11:40:51.671+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54e041a4
2023-01-21T11:40:51.672+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4149c063
2023-01-21T11:40:51.672+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4149c063
2023-01-21T11:40:51.673+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4149c063
2023-01-21T11:40:51.674+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T11:40:51.675+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T11:40:51.675+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T11:40:51.676+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4ef74c30
2023-01-21T11:40:51.678+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@776a6d9b
2023-01-21T11:40:51.679+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T11:40:51.679+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T11:40:51.679+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T11:40:51.681+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T11:40:51.682+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T11:40:51.682+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T11:40:51.683+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@1ebea008
2023-01-21T11:40:51.684+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
2023-01-21T11:40:51.689+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T11:40:51.689+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T11:40:51.690+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74f6c5d8
2023-01-21T11:40:51.694+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T11:40:51.695+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T11:40:51.700+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T11:40:51.700+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T11:40:51.701+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3116c353
2023-01-21T11:40:51.702+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3224a577
2023-01-21T11:40:51.704+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@7a3793c7
2023-01-21T11:40:51.709+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T11:40:51.709+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T11:40:51.710+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T11:40:51.711+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T11:40:51.711+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T11:40:51.711+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T11:40:51.712+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T11:40:51.712+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T11:40:51.713+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@12299890
2023-01-21T11:40:51.713+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fba3fc4
2023-01-21T11:40:51.728+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T11:40:51.740+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:40:51.741+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T11:40:51.742+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T11:40:51.751+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T11:40:51.751+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T11:40:52.628+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T11:40:52.629+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T11:40:52.629+0200 DEBUG JDBC version : 4.2
2023-01-21T11:40:52.644+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T11:40:52.726+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T11:40:52.728+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T11:40:52.776+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T11:40:52.777+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T11:40:52.778+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:40:52.779+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:40:52.779+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T11:40:52.783+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T11:40:52.784+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T11:40:52.786+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:40:52.787+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T11:40:52.788+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T11:40:52.789+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T11:40:52.789+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T11:40:52.790+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:40:52.791+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T11:40:52.834+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T11:40:52.879+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T11:40:52.972+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T11:40:52.979+0200 DEBUG Import with entity name Users
2023-01-21T11:40:52.987+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T11:40:53.031+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T11:40:53.037+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T11:40:53.044+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T11:40:53.050+0200 DEBUG building SimpleValue for id
2023-01-21T11:40:53.055+0200 DEBUG Building property id
2023-01-21T11:40:53.117+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T11:40:53.119+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T11:40:53.134+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T11:40:53.134+0200 DEBUG building SimpleValue for password
2023-01-21T11:40:53.135+0200 DEBUG Building property password
2023-01-21T11:40:53.136+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T11:40:53.137+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T11:40:53.138+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T11:40:53.138+0200 DEBUG building SimpleValue for userName
2023-01-21T11:40:53.139+0200 DEBUG Building property userName
2023-01-21T11:40:53.145+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T11:40:53.150+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T11:40:53.151+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T11:40:53.154+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T11:40:53.223+0200 DEBUG Building session factory
2023-01-21T11:40:53.225+0200 DEBUG SessionFactory name : null
2023-01-21T11:40:53.225+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T11:40:53.226+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T11:40:53.226+0200 DEBUG Statistics: disabled
2023-01-21T11:40:53.226+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T11:40:53.226+0200 DEBUG Default entity-mode: pojo
2023-01-21T11:40:53.226+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T11:40:53.226+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T11:40:53.227+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T11:40:53.227+0200 DEBUG Default batch fetch size: -1
2023-01-21T11:40:53.227+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T11:40:53.227+0200 DEBUG Default null ordering: NONE
2023-01-21T11:40:53.227+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T11:40:53.227+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T11:40:53.227+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T11:40:53.228+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T11:40:53.228+0200 DEBUG Query language substitutions: {}
2023-01-21T11:40:53.228+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T11:40:53.228+0200 DEBUG Named query checking : enabled
2023-01-21T11:40:53.228+0200 DEBUG Second-level cache: enabled
2023-01-21T11:40:53.229+0200 DEBUG Second-level query cache: disabled
2023-01-21T11:40:53.229+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@71391b3f
2023-01-21T11:40:53.229+0200 DEBUG Second-level cache region prefix: null
2023-01-21T11:40:53.229+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T11:40:53.230+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T11:40:53.231+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T11:40:53.232+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T11:40:53.232+0200 DEBUG JDBC batch size: 15
2023-01-21T11:40:53.232+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T11:40:53.233+0200 DEBUG Scrollable result sets: enabled
2023-01-21T11:40:53.233+0200 DEBUG Wrap result sets: disabled
2023-01-21T11:40:53.233+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T11:40:53.233+0200 DEBUG JDBC result set fetch size: null
2023-01-21T11:40:53.233+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T11:40:53.233+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T11:40:53.363+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T11:40:53.363+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3e7dfd44, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T11:40:53.392+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T11:40:53.394+0200 DEBUG Instantiated session factory
2023-01-21T11:40:53.465+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:40:53.465+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:40:53.488+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:40:53.488+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:40:53.549+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T11:40:53.549+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:40:53.553+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T11:46:56.758+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T11:46:56.774+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T11:46:56.777+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T11:46:56.786+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T11:46:56.978+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T11:46:56.982+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T11:46:57.002+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T11:46:57.003+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T11:46:57.003+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T11:46:57.022+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T11:46:57.023+0200 DEBUG Building session factory using provided StandardServiceRegistry
2023-01-21T11:46:57.051+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T11:46:57.064+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T11:46:57.095+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@491666ad
2023-01-21T11:46:57.095+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@491666ad
2023-01-21T11:46:57.096+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@491666ad
2023-01-21T11:46:57.097+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@18a70f16
2023-01-21T11:46:57.099+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@1a052a00
2023-01-21T11:46:57.100+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@448ff1a8
2023-01-21T11:46:57.104+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@2ea6137
2023-01-21T11:46:57.104+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@2ea6137
2023-01-21T11:46:57.105+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2ea6137
2023-01-21T11:46:57.106+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@6ee12bac
2023-01-21T11:46:57.107+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@6ee12bac
2023-01-21T11:46:57.107+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6ee12bac
2023-01-21T11:46:57.110+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@5ea434c8
2023-01-21T11:46:57.110+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@5ea434c8
2023-01-21T11:46:57.111+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5ea434c8
2023-01-21T11:46:57.113+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@45f45fa1
2023-01-21T11:46:57.113+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@45f45fa1
2023-01-21T11:46:57.114+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@45f45fa1
2023-01-21T11:46:57.116+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@40e6dfe1
2023-01-21T11:46:57.117+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@40e6dfe1
2023-01-21T11:46:57.118+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@40e6dfe1
2023-01-21T11:46:57.121+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@214b199c
2023-01-21T11:46:57.121+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@214b199c
2023-01-21T11:46:57.122+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@214b199c
2023-01-21T11:46:57.124+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@14a2f921
2023-01-21T11:46:57.124+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@14a2f921
2023-01-21T11:46:57.125+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@14a2f921
2023-01-21T11:46:57.129+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@161b062a
2023-01-21T11:46:57.130+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@161b062a
2023-01-21T11:46:57.132+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@358c99f5
2023-01-21T11:46:57.132+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@358c99f5
2023-01-21T11:46:57.134+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@6b419da
2023-01-21T11:46:57.134+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@6b419da
2023-01-21T11:46:57.136+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6f3b5d16
2023-01-21T11:46:57.137+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@657c8ad9
2023-01-21T11:46:57.139+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@5ad851c9
2023-01-21T11:46:57.139+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@5ad851c9
2023-01-21T11:46:57.141+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@2b6856dd
2023-01-21T11:46:57.141+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2b6856dd
2023-01-21T11:46:57.149+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@a4102b8
2023-01-21T11:46:57.149+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@a4102b8
2023-01-21T11:46:57.151+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1460a8c0
2023-01-21T11:46:57.151+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1460a8c0
2023-01-21T11:46:57.153+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2aa3cd93
2023-01-21T11:46:57.153+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2aa3cd93
2023-01-21T11:46:57.155+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@27c86f2d
2023-01-21T11:46:57.155+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@27c86f2d
2023-01-21T11:46:57.157+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6a01e23
2023-01-21T11:46:57.158+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6a01e23
2023-01-21T11:46:57.160+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2133814f
2023-01-21T11:46:57.160+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2133814f
2023-01-21T11:46:57.163+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60704c
2023-01-21T11:46:57.164+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60704c
2023-01-21T11:46:57.166+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2fd6b6c7
2023-01-21T11:46:57.166+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2fd6b6c7
2023-01-21T11:46:57.168+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@358ee631
2023-01-21T11:46:57.169+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@358ee631
2023-01-21T11:46:57.171+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@11a9e7c8
2023-01-21T11:46:57.171+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@11a9e7c8
2023-01-21T11:46:57.171+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@11a9e7c8
2023-01-21T11:46:57.174+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4c1d9d4b
2023-01-21T11:46:57.176+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@2928854b
2023-01-21T11:46:57.176+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2928854b
2023-01-21T11:46:57.176+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2928854b
2023-01-21T11:46:57.177+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@147ed70f
2023-01-21T11:46:57.179+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@6973bf95
2023-01-21T11:46:57.179+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6973bf95
2023-01-21T11:46:57.182+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@56a6d5a6
2023-01-21T11:46:57.182+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@56a6d5a6
2023-01-21T11:46:57.184+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@63a65a25
2023-01-21T11:46:57.185+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@63a65a25
2023-01-21T11:46:57.186+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@1a04f701
2023-01-21T11:46:57.187+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1a04f701
2023-01-21T11:46:57.190+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@159f197
2023-01-21T11:46:57.190+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@159f197
2023-01-21T11:46:57.191+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@51e5fc98
2023-01-21T11:46:57.192+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@6d2a209c
2023-01-21T11:46:57.193+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@6d2a209c
2023-01-21T11:46:57.193+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@6d2a209c
2023-01-21T11:46:57.194+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@778d1062
2023-01-21T11:46:57.195+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@778d1062
2023-01-21T11:46:57.195+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@778d1062
2023-01-21T11:46:57.197+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@5ccddd20
2023-01-21T11:46:57.198+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@20d28811
2023-01-21T11:46:57.200+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@433d61fb
2023-01-21T11:46:57.200+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@433d61fb
2023-01-21T11:46:57.201+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@433d61fb
2023-01-21T11:46:57.203+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2ea227af
2023-01-21T11:46:57.203+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2ea227af
2023-01-21T11:46:57.203+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2ea227af
2023-01-21T11:46:57.206+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@3c22fc4c
2023-01-21T11:46:57.208+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@2f7c2f4f
2023-01-21T11:46:57.214+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@61230f6a
2023-01-21T11:46:57.215+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61230f6a
2023-01-21T11:46:57.216+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@470f1802
2023-01-21T11:46:57.226+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@48ae9b55
2023-01-21T11:46:57.226+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@48ae9b55
2023-01-21T11:46:57.231+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@15eb5ee5
2023-01-21T11:46:57.232+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@15eb5ee5
2023-01-21T11:46:57.233+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3daa422a
2023-01-21T11:46:57.234+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@481a996b
2023-01-21T11:46:57.236+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@130161f7
2023-01-21T11:46:57.245+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@1dde4cb2
2023-01-21T11:46:57.245+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1dde4cb2
2023-01-21T11:46:57.246+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@56620197
2023-01-21T11:46:57.247+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6eda5c9
2023-01-21T11:46:57.249+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@55b7a4e0
2023-01-21T11:46:57.250+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5f058f00
2023-01-21T11:46:57.250+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@192d43ce
2023-01-21T11:46:57.250+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72057ecf
2023-01-21T11:46:57.251+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1afd44cb
2023-01-21T11:46:57.251+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6973b51b
2023-01-21T11:46:57.269+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T11:46:57.287+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/albums]
2023-01-21T11:46:57.287+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T11:46:57.288+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T11:46:57.296+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T11:46:57.296+0200 INFO HHH000115: Hibernate connection pool size: 20 (min=1)
2023-01-21T11:46:58.274+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T11:46:58.274+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T11:46:58.275+0200 DEBUG JDBC version : 4.2
2023-01-21T11:46:58.296+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2023-01-21T11:46:58.387+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T11:46:58.390+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T11:46:58.446+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T11:46:58.447+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T11:46:58.448+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:46:58.448+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:46:58.448+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T11:46:58.450+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T11:46:58.450+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T11:46:58.453+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:46:58.455+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T11:46:58.456+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T11:46:58.457+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T11:46:58.458+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T11:46:58.458+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:46:58.460+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T11:46:58.527+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T11:46:58.590+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T11:46:58.615+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T11:46:58.622+0200 DEBUG Import with entity name Users
2023-01-21T11:46:58.626+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T11:46:58.651+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T11:46:58.655+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T11:46:58.657+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T11:46:58.659+0200 DEBUG building SimpleValue for id
2023-01-21T11:46:58.662+0200 DEBUG Building property id
2023-01-21T11:46:58.670+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T11:46:58.671+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T11:46:58.671+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T11:46:58.671+0200 DEBUG building SimpleValue for password
2023-01-21T11:46:58.671+0200 DEBUG Building property password
2023-01-21T11:46:58.672+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T11:46:58.672+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T11:46:58.673+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T11:46:58.673+0200 DEBUG building SimpleValue for userName
2023-01-21T11:46:58.673+0200 DEBUG Building property userName
2023-01-21T11:46:58.675+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T11:46:58.676+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T11:46:58.676+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T11:46:58.678+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T11:46:58.737+0200 DEBUG Building session factory
2023-01-21T11:46:58.738+0200 DEBUG SessionFactory name : null
2023-01-21T11:46:58.738+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T11:46:58.738+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T11:46:58.738+0200 DEBUG Statistics: disabled
2023-01-21T11:46:58.740+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T11:46:58.740+0200 DEBUG Default entity-mode: pojo
2023-01-21T11:46:58.742+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T11:46:58.743+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T11:46:58.743+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T11:46:58.743+0200 DEBUG Default batch fetch size: -1
2023-01-21T11:46:58.743+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T11:46:58.744+0200 DEBUG Default null ordering: NONE
2023-01-21T11:46:58.744+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T11:46:58.745+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T11:46:58.745+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T11:46:58.746+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T11:46:58.746+0200 DEBUG Query language substitutions: {}
2023-01-21T11:46:58.746+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T11:46:58.746+0200 DEBUG Named query checking : enabled
2023-01-21T11:46:58.746+0200 DEBUG Second-level cache: enabled
2023-01-21T11:46:58.746+0200 DEBUG Second-level query cache: disabled
2023-01-21T11:46:58.747+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@2427e004
2023-01-21T11:46:58.747+0200 DEBUG Second-level cache region prefix: null
2023-01-21T11:46:58.747+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T11:46:58.747+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T11:46:58.747+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T11:46:58.748+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T11:46:58.748+0200 DEBUG JDBC batch size: 15
2023-01-21T11:46:58.748+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T11:46:58.748+0200 DEBUG Scrollable result sets: enabled
2023-01-21T11:46:58.749+0200 DEBUG Wrap result sets: disabled
2023-01-21T11:46:58.751+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T11:46:58.752+0200 DEBUG JDBC result set fetch size: null
2023-01-21T11:46:58.753+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T11:46:58.753+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T11:46:58.849+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T11:46:58.849+0200 DEBUG Instantiating session factory with properties: {java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create-drop, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/albums, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@df5f5c0, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.class.version=60.0}
2023-01-21T11:46:58.866+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T11:46:58.868+0200 DEBUG Instantiated session factory
2023-01-21T11:46:58.913+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:46:58.914+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:46:58.934+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:46:58.934+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:46:58.999+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T11:46:58.999+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/albums]
2023-01-21T11:46:59.008+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T11:50:25.552+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T11:50:25.587+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T11:50:25.592+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T11:50:25.601+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T11:50:25.754+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T11:50:25.757+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T11:50:25.834+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T11:50:25.834+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T11:50:25.849+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T11:50:26.310+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T11:50:26.339+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T11:50:26.352+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T11:50:26.383+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T11:50:26.384+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T11:50:26.384+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T11:50:26.385+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@433defed
2023-01-21T11:50:26.386+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@52f27fbd
2023-01-21T11:50:26.387+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@c430e6c
2023-01-21T11:50:26.391+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T11:50:26.391+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T11:50:26.391+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T11:50:26.393+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T11:50:26.393+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T11:50:26.394+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T11:50:26.395+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T11:50:26.395+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T11:50:26.396+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T11:50:26.398+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T11:50:26.398+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T11:50:26.399+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T11:50:26.400+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T11:50:26.401+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T11:50:26.401+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T11:50:26.403+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T11:50:26.403+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T11:50:26.404+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38467116
2023-01-21T11:50:26.406+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T11:50:26.406+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T11:50:26.407+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T11:50:26.409+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T11:50:26.409+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T11:50:26.411+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T11:50:26.411+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T11:50:26.413+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@97e93f1
2023-01-21T11:50:26.413+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@97e93f1
2023-01-21T11:50:26.414+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@782859e
2023-01-21T11:50:26.415+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@210ab13f
2023-01-21T11:50:26.417+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@446a1e84
2023-01-21T11:50:26.417+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@446a1e84
2023-01-21T11:50:26.418+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T11:50:26.419+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T11:50:26.425+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T11:50:26.426+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T11:50:26.427+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T11:50:26.428+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T11:50:26.430+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T11:50:26.431+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T11:50:26.432+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T11:50:26.433+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T11:50:26.435+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T11:50:26.435+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T11:50:26.437+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T11:50:26.438+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T11:50:26.440+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T11:50:26.440+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T11:50:26.444+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T11:50:26.444+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T11:50:26.446+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@642a7222
2023-01-21T11:50:26.446+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@642a7222
2023-01-21T11:50:26.447+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T11:50:26.447+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T11:50:26.448+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15d49048
2023-01-21T11:50:26.450+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2235eaab
2023-01-21T11:50:26.451+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T11:50:26.452+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T11:50:26.452+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T11:50:26.453+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7068e664
2023-01-21T11:50:26.454+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T11:50:26.455+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T11:50:26.456+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T11:50:26.456+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T11:50:26.457+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T11:50:26.458+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T11:50:26.459+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T11:50:26.460+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T11:50:26.462+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T11:50:26.462+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T11:50:26.463+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54e041a4
2023-01-21T11:50:26.465+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4149c063
2023-01-21T11:50:26.465+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4149c063
2023-01-21T11:50:26.465+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4149c063
2023-01-21T11:50:26.467+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T11:50:26.467+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T11:50:26.468+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T11:50:26.469+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4ef74c30
2023-01-21T11:50:26.470+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@776a6d9b
2023-01-21T11:50:26.472+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T11:50:26.472+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T11:50:26.472+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T11:50:26.474+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T11:50:26.474+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T11:50:26.474+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T11:50:26.475+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@1ebea008
2023-01-21T11:50:26.476+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
2023-01-21T11:50:26.482+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T11:50:26.483+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T11:50:26.483+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74f6c5d8
2023-01-21T11:50:26.489+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T11:50:26.489+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T11:50:26.493+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T11:50:26.494+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T11:50:26.494+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3116c353
2023-01-21T11:50:26.495+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3224a577
2023-01-21T11:50:26.497+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@7a3793c7
2023-01-21T11:50:26.503+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T11:50:26.504+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T11:50:26.505+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T11:50:26.505+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T11:50:26.505+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T11:50:26.505+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T11:50:26.506+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T11:50:26.506+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T11:50:26.506+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@12299890
2023-01-21T11:50:26.506+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fba3fc4
2023-01-21T11:50:26.518+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T11:50:26.539+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:50:26.540+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T11:50:26.543+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T11:50:26.550+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T11:50:26.550+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T11:50:27.392+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T11:50:27.393+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T11:50:27.393+0200 DEBUG JDBC version : 4.2
2023-01-21T11:50:27.410+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T11:50:27.487+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T11:50:27.489+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T11:50:27.537+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T11:50:27.538+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T11:50:27.539+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:50:27.539+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:50:27.539+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T11:50:27.541+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T11:50:27.542+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T11:50:27.544+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:50:27.545+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T11:50:27.546+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T11:50:27.547+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T11:50:27.547+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T11:50:27.548+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:50:27.549+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T11:50:27.585+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T11:50:27.626+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T11:50:27.695+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T11:50:27.706+0200 DEBUG Import with entity name Users
2023-01-21T11:50:27.709+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T11:50:27.746+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T11:50:27.752+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T11:50:27.755+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T11:50:27.757+0200 DEBUG building SimpleValue for id
2023-01-21T11:50:27.759+0200 DEBUG Building property id
2023-01-21T11:50:27.770+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T11:50:27.771+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T11:50:27.771+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T11:50:27.771+0200 DEBUG building SimpleValue for password
2023-01-21T11:50:27.771+0200 DEBUG Building property password
2023-01-21T11:50:27.772+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T11:50:27.772+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T11:50:27.772+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T11:50:27.773+0200 DEBUG building SimpleValue for userName
2023-01-21T11:50:27.773+0200 DEBUG Building property userName
2023-01-21T11:50:27.775+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T11:50:27.777+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T11:50:27.778+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T11:50:27.782+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T11:50:27.838+0200 DEBUG Building session factory
2023-01-21T11:50:27.839+0200 DEBUG SessionFactory name : null
2023-01-21T11:50:27.840+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T11:50:27.842+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T11:50:27.842+0200 DEBUG Statistics: disabled
2023-01-21T11:50:27.842+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T11:50:27.843+0200 DEBUG Default entity-mode: pojo
2023-01-21T11:50:27.843+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T11:50:27.843+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T11:50:27.843+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T11:50:27.843+0200 DEBUG Default batch fetch size: -1
2023-01-21T11:50:27.844+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T11:50:27.844+0200 DEBUG Default null ordering: NONE
2023-01-21T11:50:27.844+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T11:50:27.844+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T11:50:27.844+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T11:50:27.844+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T11:50:27.845+0200 DEBUG Query language substitutions: {}
2023-01-21T11:50:27.845+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T11:50:27.845+0200 DEBUG Named query checking : enabled
2023-01-21T11:50:27.845+0200 DEBUG Second-level cache: enabled
2023-01-21T11:50:27.846+0200 DEBUG Second-level query cache: disabled
2023-01-21T11:50:27.849+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@71391b3f
2023-01-21T11:50:27.849+0200 DEBUG Second-level cache region prefix: null
2023-01-21T11:50:27.849+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T11:50:27.849+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T11:50:27.850+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T11:50:27.850+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T11:50:27.850+0200 DEBUG JDBC batch size: 15
2023-01-21T11:50:27.850+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T11:50:27.850+0200 DEBUG Scrollable result sets: enabled
2023-01-21T11:50:27.851+0200 DEBUG Wrap result sets: disabled
2023-01-21T11:50:27.851+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T11:50:27.851+0200 DEBUG JDBC result set fetch size: null
2023-01-21T11:50:27.851+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T11:50:27.851+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T11:50:27.963+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T11:50:27.964+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3e7dfd44, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T11:50:27.985+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T11:50:27.987+0200 DEBUG Instantiated session factory
2023-01-21T11:50:28.159+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:50:28.159+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:50:28.185+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:50:28.186+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:50:28.244+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T11:50:28.244+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:50:28.249+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T11:55:23.713+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T11:55:23.750+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T11:55:23.753+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T11:55:23.757+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T11:55:23.868+0200 INFO HHH000412: Hibernate Core {5.0.10.Final}
2023-01-21T11:55:23.871+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T11:55:23.875+0200 INFO HHH000021: Bytecode provider name : javassist
2023-01-21T11:55:23.970+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T11:55:23.970+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T11:55:23.985+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T11:55:24.391+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T11:55:24.421+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T11:55:24.432+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T11:55:24.456+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@6440112d
2023-01-21T11:55:24.456+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@6440112d
2023-01-21T11:55:24.456+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6440112d
2023-01-21T11:55:24.458+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@451001e5
2023-01-21T11:55:24.459+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@7188af83
2023-01-21T11:55:24.460+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@1033576a
2023-01-21T11:55:24.463+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@792b749c
2023-01-21T11:55:24.463+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@792b749c
2023-01-21T11:55:24.464+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@792b749c
2023-01-21T11:55:24.465+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@1972e513
2023-01-21T11:55:24.465+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@1972e513
2023-01-21T11:55:24.465+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1972e513
2023-01-21T11:55:24.467+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2023-01-21T11:55:24.467+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2023-01-21T11:55:24.468+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2023-01-21T11:55:24.469+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2023-01-21T11:55:24.470+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2023-01-21T11:55:24.470+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2023-01-21T11:55:24.472+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5a59ca5e
2023-01-21T11:55:24.472+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5a59ca5e
2023-01-21T11:55:24.472+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5a59ca5e
2023-01-21T11:55:24.474+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@1a245833
2023-01-21T11:55:24.474+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@1a245833
2023-01-21T11:55:24.474+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1a245833
2023-01-21T11:55:24.475+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@4e5ed836
2023-01-21T11:55:24.476+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@4e5ed836
2023-01-21T11:55:24.476+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4e5ed836
2023-01-21T11:55:24.477+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@17bffc17
2023-01-21T11:55:24.477+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@17bffc17
2023-01-21T11:55:24.478+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@55cb6996
2023-01-21T11:55:24.479+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@55cb6996
2023-01-21T11:55:24.480+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@65f8f5ae
2023-01-21T11:55:24.480+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@65f8f5ae
2023-01-21T11:55:24.482+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5fb759d6
2023-01-21T11:55:24.484+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@33ecda92
2023-01-21T11:55:24.485+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@55de24cc
2023-01-21T11:55:24.486+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@55de24cc
2023-01-21T11:55:24.489+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@491b9b8
2023-01-21T11:55:24.489+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@491b9b8
2023-01-21T11:55:24.490+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@782859e
2023-01-21T11:55:24.491+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@782859e
2023-01-21T11:55:24.492+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@1be2019a
2023-01-21T11:55:24.492+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1be2019a
2023-01-21T11:55:24.492+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1be2019a
2023-01-21T11:55:24.494+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f0f2942
2023-01-21T11:55:24.496+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@1500b2f3
2023-01-21T11:55:24.496+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1500b2f3
2023-01-21T11:55:24.497+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1500b2f3
2023-01-21T11:55:24.498+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5c86a017
2023-01-21T11:55:24.499+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@4dc27487
2023-01-21T11:55:24.500+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4dc27487
2023-01-21T11:55:24.503+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7dfb0c0f
2023-01-21T11:55:24.503+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7dfb0c0f
2023-01-21T11:55:24.504+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@2d0399f4
2023-01-21T11:55:24.505+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2d0399f4
2023-01-21T11:55:24.506+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@2f953efd
2023-01-21T11:55:24.506+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f953efd
2023-01-21T11:55:24.509+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e4f4a5c
2023-01-21T11:55:24.509+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e4f4a5c
2023-01-21T11:55:24.510+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1df8da7a
2023-01-21T11:55:24.512+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@45385f75
2023-01-21T11:55:24.513+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@45385f75
2023-01-21T11:55:24.513+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@45385f75
2023-01-21T11:55:24.515+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1224144a
2023-01-21T11:55:24.516+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1224144a
2023-01-21T11:55:24.516+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1224144a
2023-01-21T11:55:24.518+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@565f390
2023-01-21T11:55:24.522+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@415b0b49
2023-01-21T11:55:24.524+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@78452606
2023-01-21T11:55:24.524+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@78452606
2023-01-21T11:55:24.524+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@78452606
2023-01-21T11:55:24.526+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13526e59
2023-01-21T11:55:24.526+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13526e59
2023-01-21T11:55:24.527+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13526e59
2023-01-21T11:55:24.528+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@730d2164
2023-01-21T11:55:24.529+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@7068e664
2023-01-21T11:55:24.534+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@2f01783a
2023-01-21T11:55:24.534+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2f01783a
2023-01-21T11:55:24.535+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eea88a1
2023-01-21T11:55:24.542+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@536dbea0
2023-01-21T11:55:24.542+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@536dbea0
2023-01-21T11:55:24.546+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@51bf5add
2023-01-21T11:55:24.547+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51bf5add
2023-01-21T11:55:24.548+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13d9cbf5
2023-01-21T11:55:24.549+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@51bd8b5c
2023-01-21T11:55:24.550+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@1e13529a
2023-01-21T11:55:24.554+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@3b5fad2d
2023-01-21T11:55:24.555+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b5fad2d
2023-01-21T11:55:24.555+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@102cec62
2023-01-21T11:55:24.556+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74f6c5d8
2023-01-21T11:55:24.556+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@27912e3
2023-01-21T11:55:24.556+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34b9f960
2023-01-21T11:55:24.556+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@43015c69
2023-01-21T11:55:24.557+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19b89d4
2023-01-21T11:55:24.557+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4bbf6d0e
2023-01-21T11:55:24.557+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@30b6ffe0
2023-01-21T11:55:24.570+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T11:55:24.581+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:55:24.582+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T11:55:24.582+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T11:55:24.587+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T11:55:24.587+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T11:55:25.348+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T11:55:25.348+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T11:55:25.348+0200 DEBUG JDBC version : 4.2
2023-01-21T11:55:25.363+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T11:55:25.437+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T11:55:25.440+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T11:55:25.482+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T11:55:25.483+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T11:55:25.485+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:55:25.485+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:55:25.486+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T11:55:25.488+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T11:55:25.489+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T11:55:25.491+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:55:25.492+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T11:55:25.493+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T11:55:25.493+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T11:55:25.494+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T11:55:25.494+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:55:25.496+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T11:55:25.533+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T11:55:25.566+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T11:55:25.611+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T11:55:25.630+0200 DEBUG Import with entity name Users
2023-01-21T11:55:25.646+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T11:55:25.685+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T11:55:25.705+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T11:55:25.715+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T11:55:25.717+0200 DEBUG building SimpleValue for id
2023-01-21T11:55:25.722+0200 DEBUG Building property id
2023-01-21T11:55:25.736+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T11:55:25.737+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T11:55:25.737+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T11:55:25.737+0200 DEBUG building SimpleValue for password
2023-01-21T11:55:25.737+0200 DEBUG Building property password
2023-01-21T11:55:25.738+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T11:55:25.738+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T11:55:25.739+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T11:55:25.739+0200 DEBUG building SimpleValue for userName
2023-01-21T11:55:25.740+0200 DEBUG Building property userName
2023-01-21T11:55:25.742+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T11:55:25.743+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T11:55:25.743+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T11:55:25.745+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T11:55:25.806+0200 DEBUG Building session factory
2023-01-21T11:55:25.808+0200 DEBUG SessionFactory name : null
2023-01-21T11:55:25.809+0200 DEBUG Automatic flush during beforeCompletion(): disabled
2023-01-21T11:55:25.809+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T11:55:25.810+0200 DEBUG Statistics: disabled
2023-01-21T11:55:25.810+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T11:55:25.811+0200 DEBUG Default entity-mode: pojo
2023-01-21T11:55:25.814+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T11:55:25.814+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T11:55:25.815+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T11:55:25.815+0200 DEBUG Default batch fetch size: -1
2023-01-21T11:55:25.815+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T11:55:25.815+0200 DEBUG Default null ordering: NONE
2023-01-21T11:55:25.815+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T11:55:25.816+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T11:55:25.816+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T11:55:25.816+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T11:55:25.816+0200 DEBUG Query language substitutions: {}
2023-01-21T11:55:25.816+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T11:55:25.817+0200 DEBUG Named query checking : enabled
2023-01-21T11:55:25.817+0200 DEBUG Second-level cache: enabled
2023-01-21T11:55:25.817+0200 DEBUG Second-level query cache: disabled
2023-01-21T11:55:25.817+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@25d958c6
2023-01-21T11:55:25.818+0200 DEBUG Second-level cache region prefix: null
2023-01-21T11:55:25.823+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T11:55:25.823+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T11:55:25.824+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T11:55:25.824+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T11:55:25.824+0200 DEBUG JDBC batch size: 15
2023-01-21T11:55:25.825+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T11:55:25.825+0200 DEBUG Scrollable result sets: enabled
2023-01-21T11:55:25.825+0200 DEBUG Wrap result sets: disabled
2023-01-21T11:55:25.831+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T11:55:25.832+0200 DEBUG JDBC result set fetch size: null
2023-01-21T11:55:25.833+0200 DEBUG Connection release mode: ON_CLOSE
2023-01-21T11:55:25.833+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T11:55:25.926+0200 DEBUG Returning a Reference to the SessionFactory
2023-01-21T11:55:25.946+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T11:55:25.946+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, sun.arch.data.model=64, hbm2ddl.auto=update, java.vendor.url=https://java.oracle.com/, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, connection.pool_size=3, file.encoding=UTF-8, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.0.10.Final\hibernate-core-5.0.10.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar, java.vm.vendor=Oracle Corporation, user.variant=, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, hibernate.connection.password=cisco, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@49aa766b, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T11:55:25.962+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T11:55:26.001+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:55:26.001+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:55:26.028+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:55:26.029+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:55:55.358+0200 DEBUG Connection pool now considered primed; min-size will be maintained
2023-01-21T11:58:05.184+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T11:58:05.210+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T11:58:05.213+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T11:58:05.217+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T11:58:05.303+0200 INFO HHH000412: Hibernate Core {5.0.10.Final}
2023-01-21T11:58:05.306+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T11:58:05.309+0200 INFO HHH000021: Bytecode provider name : javassist
2023-01-21T11:58:05.356+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T11:58:05.356+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T11:58:05.363+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T11:58:05.756+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T11:58:05.804+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T11:58:05.824+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T11:58:05.865+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@6440112d
2023-01-21T11:58:05.865+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@6440112d
2023-01-21T11:58:05.865+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6440112d
2023-01-21T11:58:05.867+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@451001e5
2023-01-21T11:58:05.869+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@7188af83
2023-01-21T11:58:05.871+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@1033576a
2023-01-21T11:58:05.873+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@792b749c
2023-01-21T11:58:05.873+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@792b749c
2023-01-21T11:58:05.874+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@792b749c
2023-01-21T11:58:05.875+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@1972e513
2023-01-21T11:58:05.876+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@1972e513
2023-01-21T11:58:05.876+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1972e513
2023-01-21T11:58:05.878+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2023-01-21T11:58:05.878+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2023-01-21T11:58:05.878+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2023-01-21T11:58:05.880+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2023-01-21T11:58:05.880+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2023-01-21T11:58:05.881+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2023-01-21T11:58:05.883+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5a59ca5e
2023-01-21T11:58:05.883+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5a59ca5e
2023-01-21T11:58:05.883+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5a59ca5e
2023-01-21T11:58:05.885+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@1a245833
2023-01-21T11:58:05.885+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@1a245833
2023-01-21T11:58:05.885+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1a245833
2023-01-21T11:58:05.887+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@4e5ed836
2023-01-21T11:58:05.887+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@4e5ed836
2023-01-21T11:58:05.887+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4e5ed836
2023-01-21T11:58:05.889+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@17bffc17
2023-01-21T11:58:05.889+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@17bffc17
2023-01-21T11:58:05.891+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@55cb6996
2023-01-21T11:58:05.891+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@55cb6996
2023-01-21T11:58:05.893+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@65f8f5ae
2023-01-21T11:58:05.894+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@65f8f5ae
2023-01-21T11:58:05.895+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5fb759d6
2023-01-21T11:58:05.896+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@33ecda92
2023-01-21T11:58:05.897+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@55de24cc
2023-01-21T11:58:05.897+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@55de24cc
2023-01-21T11:58:05.899+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@491b9b8
2023-01-21T11:58:05.900+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@491b9b8
2023-01-21T11:58:05.904+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@782859e
2023-01-21T11:58:05.904+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@782859e
2023-01-21T11:58:05.907+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@1be2019a
2023-01-21T11:58:05.907+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1be2019a
2023-01-21T11:58:05.907+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1be2019a
2023-01-21T11:58:05.910+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f0f2942
2023-01-21T11:58:05.911+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@1500b2f3
2023-01-21T11:58:05.912+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1500b2f3
2023-01-21T11:58:05.912+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1500b2f3
2023-01-21T11:58:05.913+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5c86a017
2023-01-21T11:58:05.914+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@4dc27487
2023-01-21T11:58:05.915+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4dc27487
2023-01-21T11:58:05.917+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7dfb0c0f
2023-01-21T11:58:05.918+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7dfb0c0f
2023-01-21T11:58:05.919+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@2d0399f4
2023-01-21T11:58:05.919+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2d0399f4
2023-01-21T11:58:05.921+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@2f953efd
2023-01-21T11:58:05.922+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f953efd
2023-01-21T11:58:05.924+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e4f4a5c
2023-01-21T11:58:05.924+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e4f4a5c
2023-01-21T11:58:05.925+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1df8da7a
2023-01-21T11:58:05.927+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@45385f75
2023-01-21T11:58:05.927+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@45385f75
2023-01-21T11:58:05.927+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@45385f75
2023-01-21T11:58:05.928+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1224144a
2023-01-21T11:58:05.929+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1224144a
2023-01-21T11:58:05.929+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1224144a
2023-01-21T11:58:05.930+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@565f390
2023-01-21T11:58:05.931+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@415b0b49
2023-01-21T11:58:05.932+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@78452606
2023-01-21T11:58:05.933+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@78452606
2023-01-21T11:58:05.933+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@78452606
2023-01-21T11:58:05.935+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13526e59
2023-01-21T11:58:05.936+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13526e59
2023-01-21T11:58:05.936+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13526e59
2023-01-21T11:58:05.937+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@730d2164
2023-01-21T11:58:05.939+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@7068e664
2023-01-21T11:58:05.944+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@2f01783a
2023-01-21T11:58:05.945+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2f01783a
2023-01-21T11:58:05.945+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eea88a1
2023-01-21T11:58:05.949+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@536dbea0
2023-01-21T11:58:05.950+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@536dbea0
2023-01-21T11:58:05.954+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@51bf5add
2023-01-21T11:58:05.954+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51bf5add
2023-01-21T11:58:05.955+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13d9cbf5
2023-01-21T11:58:05.956+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@51bd8b5c
2023-01-21T11:58:05.957+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@1e13529a
2023-01-21T11:58:05.959+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@3b5fad2d
2023-01-21T11:58:05.959+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b5fad2d
2023-01-21T11:58:05.961+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@102cec62
2023-01-21T11:58:05.961+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74f6c5d8
2023-01-21T11:58:05.962+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@27912e3
2023-01-21T11:58:05.962+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34b9f960
2023-01-21T11:58:05.962+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@43015c69
2023-01-21T11:58:05.962+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19b89d4
2023-01-21T11:58:05.962+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4bbf6d0e
2023-01-21T11:58:05.963+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@30b6ffe0
2023-01-21T11:58:05.974+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T11:58:05.989+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T11:58:05.990+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T11:58:05.991+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T11:58:05.997+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T11:58:05.998+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T11:58:06.744+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T11:58:06.744+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T11:58:06.744+0200 DEBUG JDBC version : 4.2
2023-01-21T11:58:06.753+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T11:58:06.809+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T11:58:06.812+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T11:58:06.841+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T11:58:06.842+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T11:58:06.843+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:58:06.843+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T11:58:06.844+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T11:58:06.845+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T11:58:06.846+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T11:58:06.847+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:58:06.848+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T11:58:06.849+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T11:58:06.850+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T11:58:06.850+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T11:58:06.850+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T11:58:06.851+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T11:58:06.878+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T11:58:06.899+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T11:58:06.917+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T11:58:06.925+0200 DEBUG Import with entity name Users
2023-01-21T11:58:06.929+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T11:58:07.046+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T11:58:07.067+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T11:58:07.069+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T11:58:07.075+0200 DEBUG building SimpleValue for id
2023-01-21T11:58:07.078+0200 DEBUG Building property id
2023-01-21T11:58:07.107+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T11:58:07.107+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T11:58:07.107+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T11:58:07.107+0200 DEBUG building SimpleValue for password
2023-01-21T11:58:07.107+0200 DEBUG Building property password
2023-01-21T11:58:07.107+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T11:58:07.108+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T11:58:07.108+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T11:58:07.108+0200 DEBUG building SimpleValue for userName
2023-01-21T11:58:07.108+0200 DEBUG Building property userName
2023-01-21T11:58:07.112+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T11:58:07.112+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T11:58:07.112+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T11:58:07.115+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T11:58:07.160+0200 DEBUG Building session factory
2023-01-21T11:58:07.162+0200 DEBUG SessionFactory name : null
2023-01-21T11:58:07.163+0200 DEBUG Automatic flush during beforeCompletion(): disabled
2023-01-21T11:58:07.163+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T11:58:07.163+0200 DEBUG Statistics: disabled
2023-01-21T11:58:07.163+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T11:58:07.163+0200 DEBUG Default entity-mode: pojo
2023-01-21T11:58:07.163+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T11:58:07.163+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T11:58:07.164+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T11:58:07.164+0200 DEBUG Default batch fetch size: -1
2023-01-21T11:58:07.164+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T11:58:07.164+0200 DEBUG Default null ordering: NONE
2023-01-21T11:58:07.164+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T11:58:07.164+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T11:58:07.164+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T11:58:07.165+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T11:58:07.165+0200 DEBUG Query language substitutions: {}
2023-01-21T11:58:07.165+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T11:58:07.165+0200 DEBUG Named query checking : enabled
2023-01-21T11:58:07.165+0200 DEBUG Second-level cache: enabled
2023-01-21T11:58:07.165+0200 DEBUG Second-level query cache: disabled
2023-01-21T11:58:07.165+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@25d958c6
2023-01-21T11:58:07.165+0200 DEBUG Second-level cache region prefix: null
2023-01-21T11:58:07.166+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T11:58:07.166+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T11:58:07.166+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T11:58:07.166+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T11:58:07.166+0200 DEBUG JDBC batch size: 15
2023-01-21T11:58:07.166+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T11:58:07.166+0200 DEBUG Scrollable result sets: enabled
2023-01-21T11:58:07.167+0200 DEBUG Wrap result sets: disabled
2023-01-21T11:58:07.167+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T11:58:07.167+0200 DEBUG JDBC result set fetch size: null
2023-01-21T11:58:07.167+0200 DEBUG Connection release mode: ON_CLOSE
2023-01-21T11:58:07.167+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T11:58:07.236+0200 DEBUG Returning a Reference to the SessionFactory
2023-01-21T11:58:07.238+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T11:58:07.239+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, sun.arch.data.model=64, hbm2ddl.auto=update, java.vendor.url=https://java.oracle.com/, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, connection.pool_size=3, file.encoding=UTF-8, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.0.10.Final\hibernate-core-5.0.10.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar, java.vm.vendor=Oracle Corporation, user.variant=, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, hibernate.connection.password=cisco, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@49aa766b, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T11:58:07.267+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T11:58:07.367+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:58:07.368+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:58:07.401+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T11:58:07.402+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T11:58:36.754+0200 DEBUG Connection pool now considered primed; min-size will be maintained
2023-01-21T12:06:20.247+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T12:06:20.283+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T12:06:20.288+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T12:06:20.293+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T12:06:20.422+0200 INFO HHH000412: Hibernate Core {5.0.10.Final}
2023-01-21T12:06:20.425+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T12:06:20.429+0200 INFO HHH000021: Bytecode provider name : javassist
2023-01-21T12:06:20.509+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T12:06:20.510+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T12:06:20.517+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T12:06:21.175+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T12:06:21.206+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T12:06:21.216+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T12:06:21.246+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@6440112d
2023-01-21T12:06:21.246+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@6440112d
2023-01-21T12:06:21.246+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6440112d
2023-01-21T12:06:21.247+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@451001e5
2023-01-21T12:06:21.249+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@7188af83
2023-01-21T12:06:21.250+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@1033576a
2023-01-21T12:06:21.252+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@792b749c
2023-01-21T12:06:21.254+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@792b749c
2023-01-21T12:06:21.254+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@792b749c
2023-01-21T12:06:21.256+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@1972e513
2023-01-21T12:06:21.256+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@1972e513
2023-01-21T12:06:21.256+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1972e513
2023-01-21T12:06:21.258+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2023-01-21T12:06:21.258+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2023-01-21T12:06:21.258+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2023-01-21T12:06:21.260+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2023-01-21T12:06:21.261+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2023-01-21T12:06:21.262+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2023-01-21T12:06:21.264+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5a59ca5e
2023-01-21T12:06:21.264+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5a59ca5e
2023-01-21T12:06:21.265+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5a59ca5e
2023-01-21T12:06:21.267+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@1a245833
2023-01-21T12:06:21.268+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@1a245833
2023-01-21T12:06:21.268+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1a245833
2023-01-21T12:06:21.270+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@4e5ed836
2023-01-21T12:06:21.271+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@4e5ed836
2023-01-21T12:06:21.271+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4e5ed836
2023-01-21T12:06:21.273+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@17bffc17
2023-01-21T12:06:21.273+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@17bffc17
2023-01-21T12:06:21.275+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@55cb6996
2023-01-21T12:06:21.276+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@55cb6996
2023-01-21T12:06:21.277+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@65f8f5ae
2023-01-21T12:06:21.277+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@65f8f5ae
2023-01-21T12:06:21.278+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5fb759d6
2023-01-21T12:06:21.280+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@33ecda92
2023-01-21T12:06:21.281+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@55de24cc
2023-01-21T12:06:21.282+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@55de24cc
2023-01-21T12:06:21.284+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@491b9b8
2023-01-21T12:06:21.285+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@491b9b8
2023-01-21T12:06:21.287+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@782859e
2023-01-21T12:06:21.287+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@782859e
2023-01-21T12:06:21.289+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@1be2019a
2023-01-21T12:06:21.289+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1be2019a
2023-01-21T12:06:21.289+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1be2019a
2023-01-21T12:06:21.291+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f0f2942
2023-01-21T12:06:21.293+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@1500b2f3
2023-01-21T12:06:21.293+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1500b2f3
2023-01-21T12:06:21.293+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1500b2f3
2023-01-21T12:06:21.294+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5c86a017
2023-01-21T12:06:21.296+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@4dc27487
2023-01-21T12:06:21.296+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4dc27487
2023-01-21T12:06:21.298+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@7dfb0c0f
2023-01-21T12:06:21.298+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7dfb0c0f
2023-01-21T12:06:21.300+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@2d0399f4
2023-01-21T12:06:21.301+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2d0399f4
2023-01-21T12:06:21.302+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@2f953efd
2023-01-21T12:06:21.302+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2f953efd
2023-01-21T12:06:21.304+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e4f4a5c
2023-01-21T12:06:21.305+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e4f4a5c
2023-01-21T12:06:21.305+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1df8da7a
2023-01-21T12:06:21.307+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@45385f75
2023-01-21T12:06:21.307+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@45385f75
2023-01-21T12:06:21.308+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@45385f75
2023-01-21T12:06:21.309+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1224144a
2023-01-21T12:06:21.309+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1224144a
2023-01-21T12:06:21.310+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1224144a
2023-01-21T12:06:21.311+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@565f390
2023-01-21T12:06:21.312+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@415b0b49
2023-01-21T12:06:21.313+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@78452606
2023-01-21T12:06:21.313+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@78452606
2023-01-21T12:06:21.313+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@78452606
2023-01-21T12:06:21.315+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13526e59
2023-01-21T12:06:21.315+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13526e59
2023-01-21T12:06:21.315+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13526e59
2023-01-21T12:06:21.316+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@730d2164
2023-01-21T12:06:21.317+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@7068e664
2023-01-21T12:06:21.322+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@2f01783a
2023-01-21T12:06:21.323+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2f01783a
2023-01-21T12:06:21.324+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2eea88a1
2023-01-21T12:06:21.327+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@536dbea0
2023-01-21T12:06:21.328+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@536dbea0
2023-01-21T12:06:21.331+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@51bf5add
2023-01-21T12:06:21.331+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@51bf5add
2023-01-21T12:06:21.334+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@13d9cbf5
2023-01-21T12:06:21.335+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@51bd8b5c
2023-01-21T12:06:21.337+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@1e13529a
2023-01-21T12:06:21.341+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@3b5fad2d
2023-01-21T12:06:21.342+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3b5fad2d
2023-01-21T12:06:21.342+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@102cec62
2023-01-21T12:06:21.343+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@74f6c5d8
2023-01-21T12:06:21.343+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@27912e3
2023-01-21T12:06:21.343+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@34b9f960
2023-01-21T12:06:21.343+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@43015c69
2023-01-21T12:06:21.343+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19b89d4
2023-01-21T12:06:21.343+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4bbf6d0e
2023-01-21T12:06:21.344+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@30b6ffe0
2023-01-21T12:06:21.356+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T12:06:21.376+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:06:21.377+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T12:06:21.378+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T12:06:21.384+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T12:06:21.384+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T12:06:22.455+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T12:06:22.455+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T12:06:22.456+0200 DEBUG JDBC version : 4.2
2023-01-21T12:06:22.475+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T12:06:22.588+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T12:06:22.590+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T12:06:22.647+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T12:06:22.648+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T12:06:22.650+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:06:22.651+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:06:22.652+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T12:06:22.654+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T12:06:22.655+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T12:06:22.662+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:06:22.664+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T12:06:22.665+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T12:06:22.666+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T12:06:22.667+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T12:06:22.667+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:06:22.668+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T12:06:22.723+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T12:06:22.763+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T12:06:22.795+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T12:06:22.805+0200 DEBUG Import with entity name Users
2023-01-21T12:06:22.809+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T12:06:22.865+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T12:06:22.884+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T12:06:22.894+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T12:06:22.896+0200 DEBUG building SimpleValue for id
2023-01-21T12:06:22.900+0200 DEBUG Building property id
2023-01-21T12:06:22.917+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T12:06:22.918+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T12:06:22.918+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T12:06:22.918+0200 DEBUG building SimpleValue for password
2023-01-21T12:06:22.921+0200 DEBUG Building property password
2023-01-21T12:06:22.922+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T12:06:22.922+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T12:06:22.924+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T12:06:22.925+0200 DEBUG building SimpleValue for userName
2023-01-21T12:06:22.927+0200 DEBUG Building property userName
2023-01-21T12:06:22.929+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T12:06:22.931+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T12:06:22.932+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T12:06:22.933+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T12:06:22.992+0200 DEBUG Building session factory
2023-01-21T12:06:22.993+0200 DEBUG SessionFactory name : null
2023-01-21T12:06:22.994+0200 DEBUG Automatic flush during beforeCompletion(): disabled
2023-01-21T12:06:22.994+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T12:06:22.994+0200 DEBUG Statistics: disabled
2023-01-21T12:06:22.995+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T12:06:22.995+0200 DEBUG Default entity-mode: pojo
2023-01-21T12:06:22.995+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T12:06:22.995+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T12:06:22.995+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T12:06:22.995+0200 DEBUG Default batch fetch size: -1
2023-01-21T12:06:22.996+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T12:06:22.996+0200 DEBUG Default null ordering: NONE
2023-01-21T12:06:22.996+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T12:06:22.996+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T12:06:22.996+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T12:06:22.996+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T12:06:22.996+0200 DEBUG Query language substitutions: {}
2023-01-21T12:06:22.997+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T12:06:22.997+0200 DEBUG Named query checking : enabled
2023-01-21T12:06:22.997+0200 DEBUG Second-level cache: enabled
2023-01-21T12:06:22.997+0200 DEBUG Second-level query cache: disabled
2023-01-21T12:06:22.997+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@25d958c6
2023-01-21T12:06:22.997+0200 DEBUG Second-level cache region prefix: null
2023-01-21T12:06:22.997+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T12:06:22.998+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T12:06:22.998+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T12:06:22.998+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T12:06:22.998+0200 DEBUG JDBC batch size: 15
2023-01-21T12:06:22.998+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T12:06:22.998+0200 DEBUG Scrollable result sets: enabled
2023-01-21T12:06:22.998+0200 DEBUG Wrap result sets: disabled
2023-01-21T12:06:22.999+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T12:06:22.999+0200 DEBUG JDBC result set fetch size: null
2023-01-21T12:06:23.000+0200 DEBUG Connection release mode: ON_CLOSE
2023-01-21T12:06:23.001+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T12:06:23.081+0200 DEBUG Returning a Reference to the SessionFactory
2023-01-21T12:06:23.084+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T12:06:23.084+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, sun.arch.data.model=64, hbm2ddl.auto=update, java.vendor.url=https://java.oracle.com/, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, connection.pool_size=3, file.encoding=UTF-8, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, dialect=org.hibernate.dialect.MySQLDialect, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.0.10.Final\hibernate-core-5.0.10.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\apache\geronimo\specs\geronimo-jta_1.1_spec\1.1.1\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.0.Final\jandex-2.0.0.Final.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\javassist\javassist\3.12.1.GA\javassist-3.12.1.GA.jar, java.vm.vendor=Oracle Corporation, user.variant=, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, java.vendor.url.bug=https://bugreport.java.com/bugreport/, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, hibernate.connection.password=cisco, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@49aa766b, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T12:06:23.107+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T12:06:23.165+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:06:23.165+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:06:23.185+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:06:23.186+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:06:52.445+0200 DEBUG Connection pool now considered primed; min-size will be maintained
2023-01-21T12:10:25.264+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T12:10:25.297+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T12:10:25.301+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T12:10:25.311+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T12:10:25.464+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T12:10:25.473+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T12:10:25.565+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T12:10:25.565+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T12:10:25.575+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T12:10:26.135+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T12:10:26.166+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T12:10:26.177+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T12:10:26.205+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T12:10:26.206+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T12:10:26.206+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T12:10:26.207+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1040be71
2023-01-21T12:10:26.208+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@28dcca0c
2023-01-21T12:10:26.209+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@4a8355dd
2023-01-21T12:10:26.211+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T12:10:26.211+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T12:10:26.211+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65987993
2023-01-21T12:10:26.213+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T12:10:26.213+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T12:10:26.214+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T12:10:26.215+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T12:10:26.215+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T12:10:26.216+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@710636b0
2023-01-21T12:10:26.217+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T12:10:26.218+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T12:10:26.218+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T12:10:26.221+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T12:10:26.221+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T12:10:26.221+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e535154
2023-01-21T12:10:26.223+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T12:10:26.224+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T12:10:26.224+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T12:10:26.226+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T12:10:26.226+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T12:10:26.227+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T12:10:26.229+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T12:10:26.229+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T12:10:26.231+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T12:10:26.231+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T12:10:26.232+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T12:10:26.233+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T12:10:26.234+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@624ea235
2023-01-21T12:10:26.236+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f43c82
2023-01-21T12:10:26.238+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T12:10:26.238+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T12:10:26.240+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T12:10:26.241+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T12:10:26.246+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T12:10:26.246+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T12:10:26.248+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T12:10:26.248+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T12:10:26.250+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T12:10:26.251+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T12:10:26.253+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T12:10:26.253+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T12:10:26.255+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T12:10:26.256+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T12:10:26.257+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T12:10:26.258+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T12:10:26.261+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T12:10:26.261+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T12:10:26.263+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@565f390
2023-01-21T12:10:26.264+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@565f390
2023-01-21T12:10:26.266+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T12:10:26.266+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T12:10:26.267+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T12:10:26.268+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T12:10:26.268+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@448c8166
2023-01-21T12:10:26.271+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@503f91c3
2023-01-21T12:10:26.272+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T12:10:26.273+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T12:10:26.273+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T12:10:26.274+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4ee203eb
2023-01-21T12:10:26.275+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T12:10:26.276+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T12:10:26.277+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T12:10:26.278+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T12:10:26.280+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T12:10:26.280+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T12:10:26.282+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@61710c6
2023-01-21T12:10:26.282+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61710c6
2023-01-21T12:10:26.284+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T12:10:26.284+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T12:10:26.285+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78fa769e
2023-01-21T12:10:26.287+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T12:10:26.288+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T12:10:26.288+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T12:10:26.290+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T12:10:26.290+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T12:10:26.290+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T12:10:26.291+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4c2bb6e0
2023-01-21T12:10:26.293+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@536dbea0
2023-01-21T12:10:26.294+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T12:10:26.294+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T12:10:26.294+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T12:10:26.296+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T12:10:26.296+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T12:10:26.296+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T12:10:26.297+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@2ca923bb
2023-01-21T12:10:26.298+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@51bf5add
2023-01-21T12:10:26.305+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T12:10:26.305+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T12:10:26.306+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56dc1551
2023-01-21T12:10:26.310+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T12:10:26.310+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T12:10:26.315+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T12:10:26.315+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T12:10:26.315+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4fa1c212
2023-01-21T12:10:26.316+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e928fbf
2023-01-21T12:10:26.319+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@895e367
2023-01-21T12:10:26.323+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T12:10:26.323+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T12:10:26.324+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20d7d6fb
2023-01-21T12:10:26.325+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ef782af
2023-01-21T12:10:26.325+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T12:10:26.325+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T12:10:26.325+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T12:10:26.325+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T12:10:26.326+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T12:10:26.326+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T12:10:26.336+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T12:10:26.366+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:10:26.367+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T12:10:26.374+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T12:10:26.383+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T12:10:26.384+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T12:10:27.194+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T12:10:27.194+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T12:10:27.194+0200 DEBUG JDBC version : 4.2
2023-01-21T12:10:27.213+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T12:10:27.323+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T12:10:27.325+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T12:10:27.394+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T12:10:27.395+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T12:10:27.396+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:10:27.396+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:10:27.397+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T12:10:27.401+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T12:10:27.401+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T12:10:27.404+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:10:27.406+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T12:10:27.407+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T12:10:27.408+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T12:10:27.409+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T12:10:27.409+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:10:27.411+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T12:10:27.462+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T12:10:27.509+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T12:10:27.547+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T12:10:27.556+0200 DEBUG Import with entity name Users
2023-01-21T12:10:27.561+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T12:10:27.594+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T12:10:27.602+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T12:10:27.608+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T12:10:27.611+0200 DEBUG building SimpleValue for id
2023-01-21T12:10:27.614+0200 DEBUG Building property id
2023-01-21T12:10:27.630+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T12:10:27.631+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T12:10:27.631+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T12:10:27.631+0200 DEBUG building SimpleValue for password
2023-01-21T12:10:27.632+0200 DEBUG Building property password
2023-01-21T12:10:27.633+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T12:10:27.633+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T12:10:27.633+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T12:10:27.634+0200 DEBUG building SimpleValue for userName
2023-01-21T12:10:27.635+0200 DEBUG Building property userName
2023-01-21T12:10:27.642+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T12:10:27.643+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T12:10:27.644+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T12:10:27.647+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T12:10:27.716+0200 DEBUG Building session factory
2023-01-21T12:10:27.717+0200 DEBUG SessionFactory name : null
2023-01-21T12:10:27.717+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T12:10:27.718+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T12:10:27.718+0200 DEBUG Statistics: disabled
2023-01-21T12:10:27.718+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T12:10:27.718+0200 DEBUG Default entity-mode: pojo
2023-01-21T12:10:27.718+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T12:10:27.720+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T12:10:27.721+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T12:10:27.721+0200 DEBUG Default batch fetch size: -1
2023-01-21T12:10:27.722+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T12:10:27.722+0200 DEBUG Default null ordering: NONE
2023-01-21T12:10:27.722+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T12:10:27.722+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T12:10:27.722+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T12:10:27.723+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T12:10:27.723+0200 DEBUG Query language substitutions: {}
2023-01-21T12:10:27.723+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T12:10:27.723+0200 DEBUG Named query checking : enabled
2023-01-21T12:10:27.724+0200 DEBUG Second-level cache: enabled
2023-01-21T12:10:27.724+0200 DEBUG Second-level query cache: disabled
2023-01-21T12:10:27.724+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6fca2a8f
2023-01-21T12:10:27.724+0200 DEBUG Second-level cache region prefix: null
2023-01-21T12:10:27.724+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T12:10:27.724+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T12:10:27.724+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T12:10:27.725+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T12:10:27.725+0200 DEBUG JDBC batch size: 15
2023-01-21T12:10:27.725+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T12:10:27.725+0200 DEBUG Scrollable result sets: enabled
2023-01-21T12:10:27.725+0200 DEBUG Wrap result sets: disabled
2023-01-21T12:10:27.725+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T12:10:27.725+0200 DEBUG JDBC result set fetch size: null
2023-01-21T12:10:27.725+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T12:10:27.726+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T12:10:27.813+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T12:10:27.814+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ba05e38, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T12:10:27.841+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T12:10:27.843+0200 DEBUG Instantiated session factory
2023-01-21T12:10:27.924+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:10:27.924+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:10:27.946+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:10:27.946+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:10:27.995+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T12:10:27.996+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:10:28.003+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T12:12:58.626+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T12:12:58.656+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T12:12:58.659+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T12:12:58.667+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T12:12:58.804+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T12:12:58.807+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T12:12:58.892+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T12:12:58.893+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T12:12:58.903+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T12:12:59.323+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T12:12:59.353+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T12:12:59.366+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T12:12:59.394+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T12:12:59.395+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T12:12:59.395+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T12:12:59.397+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1040be71
2023-01-21T12:12:59.400+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@28dcca0c
2023-01-21T12:12:59.401+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@4a8355dd
2023-01-21T12:12:59.403+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T12:12:59.404+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T12:12:59.405+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65987993
2023-01-21T12:12:59.407+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T12:12:59.407+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T12:12:59.407+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T12:12:59.410+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T12:12:59.410+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T12:12:59.410+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@710636b0
2023-01-21T12:12:59.413+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T12:12:59.413+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T12:12:59.414+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T12:12:59.416+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T12:12:59.416+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T12:12:59.416+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e535154
2023-01-21T12:12:59.419+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T12:12:59.419+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T12:12:59.420+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T12:12:59.421+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T12:12:59.422+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T12:12:59.422+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T12:12:59.423+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T12:12:59.424+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T12:12:59.426+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T12:12:59.426+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T12:12:59.428+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T12:12:59.428+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T12:12:59.429+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@624ea235
2023-01-21T12:12:59.430+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f43c82
2023-01-21T12:12:59.432+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T12:12:59.432+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T12:12:59.434+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T12:12:59.434+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T12:12:59.441+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T12:12:59.441+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T12:12:59.443+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T12:12:59.444+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T12:12:59.446+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T12:12:59.446+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T12:12:59.448+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T12:12:59.449+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T12:12:59.451+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T12:12:59.451+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T12:12:59.453+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T12:12:59.454+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T12:12:59.456+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T12:12:59.457+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T12:12:59.460+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@565f390
2023-01-21T12:12:59.460+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@565f390
2023-01-21T12:12:59.462+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T12:12:59.462+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T12:12:59.464+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T12:12:59.464+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T12:12:59.464+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@448c8166
2023-01-21T12:12:59.466+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@503f91c3
2023-01-21T12:12:59.467+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T12:12:59.468+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T12:12:59.468+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T12:12:59.469+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4ee203eb
2023-01-21T12:12:59.471+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T12:12:59.471+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T12:12:59.473+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T12:12:59.473+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T12:12:59.474+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T12:12:59.474+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T12:12:59.476+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@61710c6
2023-01-21T12:12:59.476+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61710c6
2023-01-21T12:12:59.478+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T12:12:59.478+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T12:12:59.479+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78fa769e
2023-01-21T12:12:59.482+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T12:12:59.482+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T12:12:59.482+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T12:12:59.484+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T12:12:59.484+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T12:12:59.484+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T12:12:59.486+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4c2bb6e0
2023-01-21T12:12:59.487+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@536dbea0
2023-01-21T12:12:59.489+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T12:12:59.489+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T12:12:59.489+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T12:12:59.491+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T12:12:59.491+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T12:12:59.491+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T12:12:59.492+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@2ca923bb
2023-01-21T12:12:59.493+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@51bf5add
2023-01-21T12:12:59.498+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T12:12:59.499+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T12:12:59.500+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56dc1551
2023-01-21T12:12:59.504+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T12:12:59.504+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T12:12:59.508+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T12:12:59.509+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T12:12:59.509+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4fa1c212
2023-01-21T12:12:59.510+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e928fbf
2023-01-21T12:12:59.512+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@895e367
2023-01-21T12:12:59.517+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T12:12:59.517+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T12:12:59.518+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20d7d6fb
2023-01-21T12:12:59.518+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ef782af
2023-01-21T12:12:59.518+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T12:12:59.519+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T12:12:59.519+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T12:12:59.520+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T12:12:59.520+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T12:12:59.520+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T12:12:59.532+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T12:12:59.550+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:12:59.551+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T12:12:59.551+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T12:12:59.558+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T12:12:59.560+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T12:13:00.330+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T12:13:00.331+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T12:13:00.331+0200 DEBUG JDBC version : 4.2
2023-01-21T12:13:00.346+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T12:13:00.426+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T12:13:00.428+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T12:13:00.481+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T12:13:00.482+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T12:13:00.483+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:13:00.483+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:13:00.484+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T12:13:00.486+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T12:13:00.487+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T12:13:00.489+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:13:00.490+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T12:13:00.491+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T12:13:00.492+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T12:13:00.493+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T12:13:00.493+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:13:00.494+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T12:13:00.534+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T12:13:00.582+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T12:13:00.641+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T12:13:00.650+0200 DEBUG Import with entity name Users
2023-01-21T12:13:00.654+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T12:13:00.695+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T12:13:00.701+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T12:13:00.703+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T12:13:00.706+0200 DEBUG building SimpleValue for id
2023-01-21T12:13:00.709+0200 DEBUG Building property id
2023-01-21T12:13:00.720+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T12:13:00.721+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T12:13:00.721+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T12:13:00.721+0200 DEBUG building SimpleValue for password
2023-01-21T12:13:00.722+0200 DEBUG Building property password
2023-01-21T12:13:00.722+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T12:13:00.722+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T12:13:00.723+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T12:13:00.723+0200 DEBUG building SimpleValue for userName
2023-01-21T12:13:00.723+0200 DEBUG Building property userName
2023-01-21T12:13:00.725+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T12:13:00.728+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T12:13:00.729+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T12:13:00.731+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T12:13:00.820+0200 DEBUG Building session factory
2023-01-21T12:13:00.823+0200 DEBUG SessionFactory name : null
2023-01-21T12:13:00.824+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T12:13:00.825+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T12:13:00.825+0200 DEBUG Statistics: disabled
2023-01-21T12:13:00.825+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T12:13:00.825+0200 DEBUG Default entity-mode: pojo
2023-01-21T12:13:00.825+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T12:13:00.827+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T12:13:00.827+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T12:13:00.827+0200 DEBUG Default batch fetch size: -1
2023-01-21T12:13:00.828+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T12:13:00.828+0200 DEBUG Default null ordering: NONE
2023-01-21T12:13:00.828+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T12:13:00.828+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T12:13:00.829+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T12:13:00.829+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T12:13:00.830+0200 DEBUG Query language substitutions: {}
2023-01-21T12:13:00.831+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T12:13:00.832+0200 DEBUG Named query checking : enabled
2023-01-21T12:13:00.832+0200 DEBUG Second-level cache: enabled
2023-01-21T12:13:00.832+0200 DEBUG Second-level query cache: disabled
2023-01-21T12:13:00.832+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6fca2a8f
2023-01-21T12:13:00.832+0200 DEBUG Second-level cache region prefix: null
2023-01-21T12:13:00.833+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T12:13:00.833+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T12:13:00.833+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T12:13:00.833+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T12:13:00.833+0200 DEBUG JDBC batch size: 15
2023-01-21T12:13:00.834+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T12:13:00.834+0200 DEBUG Scrollable result sets: enabled
2023-01-21T12:13:00.834+0200 DEBUG Wrap result sets: disabled
2023-01-21T12:13:00.834+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T12:13:00.834+0200 DEBUG JDBC result set fetch size: null
2023-01-21T12:13:00.834+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T12:13:00.834+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T12:13:00.926+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T12:13:00.926+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ba05e38, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T12:13:00.946+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T12:13:00.948+0200 DEBUG Instantiated session factory
2023-01-21T12:13:01.012+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:13:01.012+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:13:01.036+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:13:01.037+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:13:01.046+0200 INFO HHH000182: No default (no-argument) constructor for class: edu.itstep.sql.Users (class must be instantiated by Interceptor)
2023-01-21T12:13:01.117+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T12:13:01.120+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:13:01.128+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T12:13:29.328+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T12:13:29.370+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T12:13:29.374+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T12:13:29.381+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T12:13:29.507+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T12:13:29.510+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T12:13:29.596+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T12:13:29.596+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T12:13:29.605+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T12:13:30.063+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T12:13:30.094+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T12:13:30.107+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T12:13:30.135+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T12:13:30.136+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T12:13:30.136+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@305ffe9e
2023-01-21T12:13:30.137+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1040be71
2023-01-21T12:13:30.139+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@28dcca0c
2023-01-21T12:13:30.140+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@4a8355dd
2023-01-21T12:13:30.142+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T12:13:30.143+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@65987993
2023-01-21T12:13:30.143+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65987993
2023-01-21T12:13:30.144+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T12:13:30.144+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T12:13:30.145+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d900ecf
2023-01-21T12:13:30.147+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T12:13:30.147+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@710636b0
2023-01-21T12:13:30.147+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@710636b0
2023-01-21T12:13:30.149+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T12:13:30.149+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T12:13:30.149+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@43f02ef2
2023-01-21T12:13:30.151+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T12:13:30.151+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@6e535154
2023-01-21T12:13:30.152+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@6e535154
2023-01-21T12:13:30.153+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T12:13:30.153+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T12:13:30.153+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@65f8f5ae
2023-01-21T12:13:30.155+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T12:13:30.155+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T12:13:30.155+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@68c9d179
2023-01-21T12:13:30.157+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T12:13:30.157+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@30f842ca
2023-01-21T12:13:30.159+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T12:13:30.160+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7b4c50bc
2023-01-21T12:13:30.161+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T12:13:30.162+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@7a6d7e92
2023-01-21T12:13:30.163+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@624ea235
2023-01-21T12:13:30.164+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f43c82
2023-01-21T12:13:30.165+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T12:13:30.165+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@29d80d2b
2023-01-21T12:13:30.166+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T12:13:30.166+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7139992f
2023-01-21T12:13:30.171+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T12:13:30.171+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6a4f1a55
2023-01-21T12:13:30.173+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T12:13:30.173+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@626abbd0
2023-01-21T12:13:30.175+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T12:13:30.176+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5dafbe45
2023-01-21T12:13:30.178+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T12:13:30.179+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@41330d4f
2023-01-21T12:13:30.182+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T12:13:30.182+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@37313c65
2023-01-21T12:13:30.184+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T12:13:30.185+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5d908d47
2023-01-21T12:13:30.187+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T12:13:30.188+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@69ee81fc
2023-01-21T12:13:30.190+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@565f390
2023-01-21T12:13:30.191+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@565f390
2023-01-21T12:13:30.193+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T12:13:30.193+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6d5620ce
2023-01-21T12:13:30.195+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T12:13:30.195+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@448c8166
2023-01-21T12:13:30.196+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@448c8166
2023-01-21T12:13:30.198+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@503f91c3
2023-01-21T12:13:30.200+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T12:13:30.200+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T12:13:30.201+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@730d2164
2023-01-21T12:13:30.201+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4ee203eb
2023-01-21T12:13:30.203+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T12:13:30.203+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7975d1d8
2023-01-21T12:13:30.204+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T12:13:30.205+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50029372
2023-01-21T12:13:30.206+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T12:13:30.206+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5038d0b5
2023-01-21T12:13:30.207+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@61710c6
2023-01-21T12:13:30.207+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@61710c6
2023-01-21T12:13:30.209+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T12:13:30.210+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2eea88a1
2023-01-21T12:13:30.211+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78fa769e
2023-01-21T12:13:30.212+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T12:13:30.212+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T12:13:30.213+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4b86805d
2023-01-21T12:13:30.214+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T12:13:30.214+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T12:13:30.215+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62656be4
2023-01-21T12:13:30.216+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4c2bb6e0
2023-01-21T12:13:30.217+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@536dbea0
2023-01-21T12:13:30.220+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T12:13:30.221+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T12:13:30.221+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@1cf56a1c
2023-01-21T12:13:30.223+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T12:13:30.223+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T12:13:30.223+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@b86de0d
2023-01-21T12:13:30.224+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@2ca923bb
2023-01-21T12:13:30.225+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@51bf5add
2023-01-21T12:13:30.230+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T12:13:30.231+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6531a794
2023-01-21T12:13:30.231+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@56dc1551
2023-01-21T12:13:30.235+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T12:13:30.236+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@42e25b0b
2023-01-21T12:13:30.240+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T12:13:30.240+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@723e88f9
2023-01-21T12:13:30.241+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4fa1c212
2023-01-21T12:13:30.242+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@4e928fbf
2023-01-21T12:13:30.244+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@895e367
2023-01-21T12:13:30.248+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T12:13:30.248+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4bd31064
2023-01-21T12:13:30.249+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@20d7d6fb
2023-01-21T12:13:30.250+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ef782af
2023-01-21T12:13:30.250+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T12:13:30.250+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T12:13:30.250+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T12:13:30.251+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T12:13:30.251+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T12:13:30.251+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T12:13:30.264+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T12:13:30.276+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:13:30.277+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T12:13:30.277+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T12:13:30.285+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T12:13:30.285+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T12:13:31.147+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T12:13:31.148+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T12:13:31.148+0200 DEBUG JDBC version : 4.2
2023-01-21T12:13:31.164+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T12:13:31.243+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T12:13:31.245+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T12:13:31.301+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T12:13:31.301+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T12:13:31.302+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:13:31.303+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:13:31.303+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T12:13:31.304+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T12:13:31.305+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T12:13:31.307+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:13:31.308+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T12:13:31.309+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T12:13:31.310+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T12:13:31.311+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T12:13:31.311+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:13:31.312+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T12:13:31.350+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T12:13:31.403+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T12:13:31.462+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T12:13:31.471+0200 DEBUG Import with entity name Users
2023-01-21T12:13:31.476+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T12:13:31.512+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T12:13:31.519+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T12:13:31.522+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T12:13:31.524+0200 DEBUG building SimpleValue for id
2023-01-21T12:13:31.528+0200 DEBUG Building property id
2023-01-21T12:13:31.540+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T12:13:31.541+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T12:13:31.541+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T12:13:31.541+0200 DEBUG building SimpleValue for password
2023-01-21T12:13:31.542+0200 DEBUG Building property password
2023-01-21T12:13:31.542+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T12:13:31.543+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T12:13:31.543+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T12:13:31.543+0200 DEBUG building SimpleValue for userName
2023-01-21T12:13:31.543+0200 DEBUG Building property userName
2023-01-21T12:13:31.548+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T12:13:31.549+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T12:13:31.550+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T12:13:31.554+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T12:13:31.637+0200 DEBUG Building session factory
2023-01-21T12:13:31.641+0200 DEBUG SessionFactory name : null
2023-01-21T12:13:31.641+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T12:13:31.641+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T12:13:31.642+0200 DEBUG Statistics: disabled
2023-01-21T12:13:31.642+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T12:13:31.642+0200 DEBUG Default entity-mode: pojo
2023-01-21T12:13:31.642+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T12:13:31.643+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T12:13:31.643+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T12:13:31.643+0200 DEBUG Default batch fetch size: -1
2023-01-21T12:13:31.643+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T12:13:31.643+0200 DEBUG Default null ordering: NONE
2023-01-21T12:13:31.643+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T12:13:31.643+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T12:13:31.644+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T12:13:31.644+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T12:13:31.644+0200 DEBUG Query language substitutions: {}
2023-01-21T12:13:31.644+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T12:13:31.645+0200 DEBUG Named query checking : enabled
2023-01-21T12:13:31.645+0200 DEBUG Second-level cache: enabled
2023-01-21T12:13:31.645+0200 DEBUG Second-level query cache: disabled
2023-01-21T12:13:31.645+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6fca2a8f
2023-01-21T12:13:31.646+0200 DEBUG Second-level cache region prefix: null
2023-01-21T12:13:31.646+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T12:13:31.646+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T12:13:31.647+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T12:13:31.647+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T12:13:31.647+0200 DEBUG JDBC batch size: 15
2023-01-21T12:13:31.649+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T12:13:31.650+0200 DEBUG Scrollable result sets: enabled
2023-01-21T12:13:31.651+0200 DEBUG Wrap result sets: disabled
2023-01-21T12:13:31.651+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T12:13:31.651+0200 DEBUG JDBC result set fetch size: null
2023-01-21T12:13:31.651+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T12:13:31.652+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T12:13:31.745+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T12:13:31.745+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1ba05e38, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T12:13:31.768+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T12:13:31.770+0200 DEBUG Instantiated session factory
2023-01-21T12:13:31.878+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:13:31.879+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:13:31.905+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:13:31.905+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:13:31.964+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T12:13:31.964+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:13:31.971+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T12:18:25.404+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T12:18:25.435+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T12:18:25.440+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T12:18:25.449+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T12:18:25.577+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T12:18:25.581+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T12:18:25.676+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T12:18:25.677+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T12:18:25.686+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T12:18:26.205+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T12:18:26.235+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T12:18:26.246+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T12:18:26.272+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T12:18:26.273+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T12:18:26.273+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T12:18:26.274+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@433defed
2023-01-21T12:18:26.276+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@52f27fbd
2023-01-21T12:18:26.277+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@c430e6c
2023-01-21T12:18:26.280+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T12:18:26.281+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T12:18:26.281+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T12:18:26.282+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T12:18:26.282+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T12:18:26.283+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T12:18:26.284+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T12:18:26.284+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T12:18:26.284+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T12:18:26.286+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T12:18:26.286+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T12:18:26.287+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T12:18:26.289+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T12:18:26.289+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T12:18:26.290+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T12:18:26.291+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T12:18:26.291+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T12:18:26.292+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38467116
2023-01-21T12:18:26.293+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T12:18:26.293+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T12:18:26.294+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T12:18:26.295+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T12:18:26.296+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T12:18:26.297+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T12:18:26.297+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T12:18:26.299+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@97e93f1
2023-01-21T12:18:26.300+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@97e93f1
2023-01-21T12:18:26.301+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@782859e
2023-01-21T12:18:26.302+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@210ab13f
2023-01-21T12:18:26.303+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@446a1e84
2023-01-21T12:18:26.304+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@446a1e84
2023-01-21T12:18:26.305+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T12:18:26.305+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T12:18:26.310+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T12:18:26.311+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T12:18:26.312+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T12:18:26.312+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T12:18:26.314+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T12:18:26.314+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T12:18:26.316+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T12:18:26.316+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T12:18:26.318+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T12:18:26.319+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T12:18:26.321+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T12:18:26.321+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T12:18:26.323+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T12:18:26.324+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T12:18:26.326+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T12:18:26.326+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T12:18:26.327+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@642a7222
2023-01-21T12:18:26.328+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@642a7222
2023-01-21T12:18:26.329+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T12:18:26.329+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T12:18:26.329+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15d49048
2023-01-21T12:18:26.331+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2235eaab
2023-01-21T12:18:26.333+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T12:18:26.334+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T12:18:26.334+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T12:18:26.335+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7068e664
2023-01-21T12:18:26.337+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T12:18:26.339+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T12:18:26.342+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T12:18:26.342+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T12:18:26.344+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T12:18:26.344+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T12:18:26.345+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T12:18:26.346+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T12:18:26.348+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T12:18:26.348+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T12:18:26.349+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54e041a4
2023-01-21T12:18:26.351+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4149c063
2023-01-21T12:18:26.351+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4149c063
2023-01-21T12:18:26.351+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4149c063
2023-01-21T12:18:26.352+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T12:18:26.352+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T12:18:26.352+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T12:18:26.354+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4ef74c30
2023-01-21T12:18:26.356+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@776a6d9b
2023-01-21T12:18:26.358+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T12:18:26.358+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T12:18:26.358+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T12:18:26.360+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T12:18:26.360+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T12:18:26.361+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T12:18:26.362+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@1ebea008
2023-01-21T12:18:26.363+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
2023-01-21T12:18:26.369+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T12:18:26.370+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T12:18:26.370+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74f6c5d8
2023-01-21T12:18:26.375+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T12:18:26.376+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T12:18:26.383+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T12:18:26.383+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T12:18:26.384+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3116c353
2023-01-21T12:18:26.385+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3224a577
2023-01-21T12:18:26.388+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@7a3793c7
2023-01-21T12:18:26.392+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T12:18:26.392+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T12:18:26.393+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T12:18:26.393+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T12:18:26.394+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T12:18:26.394+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T12:18:26.394+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T12:18:26.395+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T12:18:26.396+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@12299890
2023-01-21T12:18:26.396+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fba3fc4
2023-01-21T12:18:26.411+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T12:18:26.427+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:18:26.428+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T12:18:26.433+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T12:18:26.459+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T12:18:26.460+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T12:18:27.285+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T12:18:27.285+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T12:18:27.285+0200 DEBUG JDBC version : 4.2
2023-01-21T12:18:27.300+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T12:18:27.381+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T12:18:27.384+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T12:18:27.440+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T12:18:27.441+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T12:18:27.442+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:18:27.442+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:18:27.443+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T12:18:27.444+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T12:18:27.445+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T12:18:27.447+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:18:27.449+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T12:18:27.450+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T12:18:27.450+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T12:18:27.451+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T12:18:27.451+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:18:27.453+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T12:18:27.494+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T12:18:27.549+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T12:18:27.613+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T12:18:27.624+0200 DEBUG Import with entity name Users
2023-01-21T12:18:27.630+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T12:18:27.684+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T12:18:27.690+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T12:18:27.692+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T12:18:27.694+0200 DEBUG building SimpleValue for id
2023-01-21T12:18:27.699+0200 DEBUG Building property id
2023-01-21T12:18:27.711+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T12:18:27.711+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T12:18:27.712+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T12:18:27.712+0200 DEBUG building SimpleValue for password
2023-01-21T12:18:27.713+0200 DEBUG Building property password
2023-01-21T12:18:27.714+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T12:18:27.715+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T12:18:27.715+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T12:18:27.715+0200 DEBUG building SimpleValue for userName
2023-01-21T12:18:27.716+0200 DEBUG Building property userName
2023-01-21T12:18:27.725+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T12:18:27.731+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T12:18:27.731+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T12:18:27.733+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T12:18:27.816+0200 DEBUG Building session factory
2023-01-21T12:18:27.818+0200 DEBUG SessionFactory name : null
2023-01-21T12:18:27.819+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T12:18:27.819+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T12:18:27.820+0200 DEBUG Statistics: disabled
2023-01-21T12:18:27.820+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T12:18:27.820+0200 DEBUG Default entity-mode: pojo
2023-01-21T12:18:27.820+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T12:18:27.820+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T12:18:27.820+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T12:18:27.820+0200 DEBUG Default batch fetch size: -1
2023-01-21T12:18:27.821+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T12:18:27.821+0200 DEBUG Default null ordering: NONE
2023-01-21T12:18:27.822+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T12:18:27.822+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T12:18:27.822+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T12:18:27.822+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T12:18:27.823+0200 DEBUG Query language substitutions: {}
2023-01-21T12:18:27.823+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T12:18:27.823+0200 DEBUG Named query checking : enabled
2023-01-21T12:18:27.823+0200 DEBUG Second-level cache: enabled
2023-01-21T12:18:27.823+0200 DEBUG Second-level query cache: disabled
2023-01-21T12:18:27.823+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@71391b3f
2023-01-21T12:18:27.823+0200 DEBUG Second-level cache region prefix: null
2023-01-21T12:18:27.823+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T12:18:27.824+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T12:18:27.824+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T12:18:27.824+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T12:18:27.824+0200 DEBUG JDBC batch size: 15
2023-01-21T12:18:27.824+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T12:18:27.824+0200 DEBUG Scrollable result sets: enabled
2023-01-21T12:18:27.824+0200 DEBUG Wrap result sets: disabled
2023-01-21T12:18:27.824+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T12:18:27.825+0200 DEBUG JDBC result set fetch size: null
2023-01-21T12:18:27.826+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T12:18:27.826+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T12:18:27.927+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T12:18:27.929+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3e7dfd44, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T12:18:27.973+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T12:18:27.975+0200 DEBUG Instantiated session factory
2023-01-21T12:18:28.050+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:18:28.050+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:18:28.074+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:18:28.074+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:18:28.144+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T12:18:28.145+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:18:28.150+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T12:19:30.204+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T12:19:30.228+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T12:19:30.232+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T12:19:30.241+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T12:19:30.376+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T12:19:30.382+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T12:19:30.494+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T12:19:30.495+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T12:19:30.503+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T12:19:30.990+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T12:19:31.022+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T12:19:31.035+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T12:19:31.063+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T12:19:31.063+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T12:19:31.064+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T12:19:31.065+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@433defed
2023-01-21T12:19:31.066+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@52f27fbd
2023-01-21T12:19:31.067+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@c430e6c
2023-01-21T12:19:31.069+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T12:19:31.070+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T12:19:31.070+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T12:19:31.071+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T12:19:31.072+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T12:19:31.072+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T12:19:31.073+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T12:19:31.074+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T12:19:31.074+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T12:19:31.076+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T12:19:31.076+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T12:19:31.076+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T12:19:31.079+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T12:19:31.079+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T12:19:31.079+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T12:19:31.081+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T12:19:31.081+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T12:19:31.081+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38467116
2023-01-21T12:19:31.083+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T12:19:31.083+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T12:19:31.083+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T12:19:31.085+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T12:19:31.085+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T12:19:31.087+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T12:19:31.087+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T12:19:31.089+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@97e93f1
2023-01-21T12:19:31.089+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@97e93f1
2023-01-21T12:19:31.090+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@782859e
2023-01-21T12:19:31.091+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@210ab13f
2023-01-21T12:19:31.092+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@446a1e84
2023-01-21T12:19:31.092+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@446a1e84
2023-01-21T12:19:31.093+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T12:19:31.094+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T12:19:31.099+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T12:19:31.100+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T12:19:31.101+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T12:19:31.101+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T12:19:31.102+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T12:19:31.103+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T12:19:31.104+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T12:19:31.104+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T12:19:31.106+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T12:19:31.107+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T12:19:31.108+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T12:19:31.108+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T12:19:31.111+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T12:19:31.111+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T12:19:31.113+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T12:19:31.113+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T12:19:31.115+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@642a7222
2023-01-21T12:19:31.115+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@642a7222
2023-01-21T12:19:31.117+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T12:19:31.117+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T12:19:31.117+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15d49048
2023-01-21T12:19:31.120+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2235eaab
2023-01-21T12:19:31.121+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T12:19:31.121+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T12:19:31.122+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T12:19:31.123+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7068e664
2023-01-21T12:19:31.124+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T12:19:31.124+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T12:19:31.125+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T12:19:31.126+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T12:19:31.127+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T12:19:31.127+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T12:19:31.128+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T12:19:31.128+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T12:19:31.130+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T12:19:31.130+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T12:19:31.131+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54e041a4
2023-01-21T12:19:31.132+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4149c063
2023-01-21T12:19:31.133+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4149c063
2023-01-21T12:19:31.133+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4149c063
2023-01-21T12:19:31.134+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T12:19:31.134+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T12:19:31.134+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T12:19:31.135+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4ef74c30
2023-01-21T12:19:31.136+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@776a6d9b
2023-01-21T12:19:31.139+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T12:19:31.139+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T12:19:31.139+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T12:19:31.140+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T12:19:31.141+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T12:19:31.141+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T12:19:31.142+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@1ebea008
2023-01-21T12:19:31.143+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
2023-01-21T12:19:31.148+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T12:19:31.149+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T12:19:31.149+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74f6c5d8
2023-01-21T12:19:31.154+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T12:19:31.154+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T12:19:31.158+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T12:19:31.159+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T12:19:31.160+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3116c353
2023-01-21T12:19:31.161+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3224a577
2023-01-21T12:19:31.163+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@7a3793c7
2023-01-21T12:19:31.166+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T12:19:31.167+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T12:19:31.168+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T12:19:31.168+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T12:19:31.168+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T12:19:31.168+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T12:19:31.168+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T12:19:31.169+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T12:19:31.169+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@12299890
2023-01-21T12:19:31.169+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fba3fc4
2023-01-21T12:19:31.181+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T12:19:31.191+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:19:31.191+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T12:19:31.191+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T12:19:31.201+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T12:19:31.201+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T12:19:31.895+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T12:19:31.896+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T12:19:31.896+0200 DEBUG JDBC version : 4.2
2023-01-21T12:19:31.906+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T12:19:31.962+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T12:19:31.963+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T12:19:32.003+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T12:19:32.004+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T12:19:32.005+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:19:32.005+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:19:32.006+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T12:19:32.007+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T12:19:32.007+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T12:19:32.010+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:19:32.012+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T12:19:32.013+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T12:19:32.014+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T12:19:32.015+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T12:19:32.015+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:19:32.017+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T12:19:32.063+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T12:19:32.108+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T12:19:32.169+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T12:19:32.184+0200 DEBUG Import with entity name Users
2023-01-21T12:19:32.190+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T12:19:32.232+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T12:19:32.237+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T12:19:32.239+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T12:19:32.242+0200 DEBUG building SimpleValue for id
2023-01-21T12:19:32.244+0200 DEBUG Building property id
2023-01-21T12:19:32.252+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T12:19:32.252+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T12:19:32.252+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T12:19:32.253+0200 DEBUG building SimpleValue for password
2023-01-21T12:19:32.253+0200 DEBUG Building property password
2023-01-21T12:19:32.253+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T12:19:32.253+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T12:19:32.253+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T12:19:32.254+0200 DEBUG building SimpleValue for userName
2023-01-21T12:19:32.254+0200 DEBUG Building property userName
2023-01-21T12:19:32.256+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T12:19:32.257+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T12:19:32.257+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T12:19:32.261+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T12:19:32.328+0200 DEBUG Building session factory
2023-01-21T12:19:32.329+0200 DEBUG SessionFactory name : null
2023-01-21T12:19:32.330+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T12:19:32.330+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T12:19:32.330+0200 DEBUG Statistics: disabled
2023-01-21T12:19:32.330+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T12:19:32.330+0200 DEBUG Default entity-mode: pojo
2023-01-21T12:19:32.330+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T12:19:32.330+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T12:19:32.331+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T12:19:32.331+0200 DEBUG Default batch fetch size: -1
2023-01-21T12:19:32.331+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T12:19:32.331+0200 DEBUG Default null ordering: NONE
2023-01-21T12:19:32.332+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T12:19:32.332+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T12:19:32.332+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T12:19:32.333+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T12:19:32.334+0200 DEBUG Query language substitutions: {}
2023-01-21T12:19:32.334+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T12:19:32.334+0200 DEBUG Named query checking : enabled
2023-01-21T12:19:32.335+0200 DEBUG Second-level cache: enabled
2023-01-21T12:19:32.335+0200 DEBUG Second-level query cache: disabled
2023-01-21T12:19:32.335+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@71391b3f
2023-01-21T12:19:32.336+0200 DEBUG Second-level cache region prefix: null
2023-01-21T12:19:32.336+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T12:19:32.336+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T12:19:32.337+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T12:19:32.337+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T12:19:32.337+0200 DEBUG JDBC batch size: 15
2023-01-21T12:19:32.337+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T12:19:32.337+0200 DEBUG Scrollable result sets: enabled
2023-01-21T12:19:32.340+0200 DEBUG Wrap result sets: disabled
2023-01-21T12:19:32.341+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T12:19:32.341+0200 DEBUG JDBC result set fetch size: null
2023-01-21T12:19:32.341+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T12:19:32.342+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T12:19:32.445+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T12:19:32.445+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3e7dfd44, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T12:19:32.465+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T12:19:32.467+0200 DEBUG Instantiated session factory
2023-01-21T12:19:32.524+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:19:32.524+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:19:32.556+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:19:32.556+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:19:32.652+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T12:19:32.652+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:19:32.661+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T12:24:09.901+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T12:24:09.931+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T12:24:09.935+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T12:24:09.944+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T12:24:10.093+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T12:24:10.095+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T12:24:10.192+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T12:24:10.192+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T12:24:10.201+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T12:24:10.633+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T12:24:10.672+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T12:24:10.690+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T12:24:10.728+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T12:24:10.729+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T12:24:10.729+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T12:24:10.730+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@433defed
2023-01-21T12:24:10.732+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@52f27fbd
2023-01-21T12:24:10.733+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@c430e6c
2023-01-21T12:24:10.736+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T12:24:10.736+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T12:24:10.737+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T12:24:10.739+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T12:24:10.740+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T12:24:10.740+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T12:24:10.742+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T12:24:10.742+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T12:24:10.742+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T12:24:10.744+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T12:24:10.745+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T12:24:10.745+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T12:24:10.747+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T12:24:10.748+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T12:24:10.748+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T12:24:10.750+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T12:24:10.751+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T12:24:10.751+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38467116
2023-01-21T12:24:10.753+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T12:24:10.754+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T12:24:10.754+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T12:24:10.757+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T12:24:10.759+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T12:24:10.761+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T12:24:10.762+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T12:24:10.764+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@97e93f1
2023-01-21T12:24:10.764+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@97e93f1
2023-01-21T12:24:10.766+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@782859e
2023-01-21T12:24:10.767+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@210ab13f
2023-01-21T12:24:10.768+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@446a1e84
2023-01-21T12:24:10.769+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@446a1e84
2023-01-21T12:24:10.770+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T12:24:10.771+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T12:24:10.777+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T12:24:10.778+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T12:24:10.781+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T12:24:10.782+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T12:24:10.784+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T12:24:10.784+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T12:24:10.786+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T12:24:10.787+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T12:24:10.791+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T12:24:10.792+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T12:24:10.794+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T12:24:10.794+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T12:24:10.796+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T12:24:10.797+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T12:24:10.800+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T12:24:10.800+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T12:24:10.802+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@642a7222
2023-01-21T12:24:10.802+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@642a7222
2023-01-21T12:24:10.804+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T12:24:10.804+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T12:24:10.804+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15d49048
2023-01-21T12:24:10.807+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2235eaab
2023-01-21T12:24:10.808+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T12:24:10.808+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T12:24:10.809+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T12:24:10.810+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7068e664
2023-01-21T12:24:10.811+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T12:24:10.812+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T12:24:10.813+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T12:24:10.814+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T12:24:10.815+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T12:24:10.815+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T12:24:10.817+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T12:24:10.817+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T12:24:10.820+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T12:24:10.820+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T12:24:10.821+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54e041a4
2023-01-21T12:24:10.822+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4149c063
2023-01-21T12:24:10.822+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4149c063
2023-01-21T12:24:10.823+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4149c063
2023-01-21T12:24:10.824+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T12:24:10.824+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T12:24:10.825+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T12:24:10.827+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4ef74c30
2023-01-21T12:24:10.828+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@776a6d9b
2023-01-21T12:24:10.830+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T12:24:10.830+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T12:24:10.830+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T12:24:10.832+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T12:24:10.833+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T12:24:10.833+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T12:24:10.834+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@1ebea008
2023-01-21T12:24:10.836+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
2023-01-21T12:24:10.843+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T12:24:10.844+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T12:24:10.844+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74f6c5d8
2023-01-21T12:24:10.850+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T12:24:10.850+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T12:24:10.859+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T12:24:10.860+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T12:24:10.862+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3116c353
2023-01-21T12:24:10.863+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3224a577
2023-01-21T12:24:10.866+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@7a3793c7
2023-01-21T12:24:10.874+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T12:24:10.876+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T12:24:10.877+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T12:24:10.877+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T12:24:10.879+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T12:24:10.880+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T12:24:10.880+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T12:24:10.881+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T12:24:10.881+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@12299890
2023-01-21T12:24:10.881+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fba3fc4
2023-01-21T12:24:10.896+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T12:24:10.913+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:24:10.914+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T12:24:10.916+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T12:24:10.929+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T12:24:10.929+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T12:24:11.705+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T12:24:11.706+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T12:24:11.706+0200 DEBUG JDBC version : 4.2
2023-01-21T12:24:11.724+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T12:24:11.807+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T12:24:11.810+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T12:24:11.869+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T12:24:11.870+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T12:24:11.871+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:24:11.872+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:24:11.872+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T12:24:11.874+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T12:24:11.875+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T12:24:11.876+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:24:11.879+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T12:24:11.880+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T12:24:11.881+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T12:24:11.882+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T12:24:11.882+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:24:11.883+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T12:24:11.928+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T12:24:11.994+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T12:24:12.052+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T12:24:12.063+0200 DEBUG Import with entity name Users
2023-01-21T12:24:12.067+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T12:24:12.104+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T12:24:12.109+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T12:24:12.113+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T12:24:12.116+0200 DEBUG building SimpleValue for id
2023-01-21T12:24:12.119+0200 DEBUG Building property id
2023-01-21T12:24:12.132+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T12:24:12.133+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T12:24:12.133+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T12:24:12.134+0200 DEBUG building SimpleValue for password
2023-01-21T12:24:12.135+0200 DEBUG Building property password
2023-01-21T12:24:12.137+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T12:24:12.137+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T12:24:12.137+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T12:24:12.137+0200 DEBUG building SimpleValue for userName
2023-01-21T12:24:12.138+0200 DEBUG Building property userName
2023-01-21T12:24:12.142+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T12:24:12.143+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T12:24:12.143+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T12:24:12.145+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T12:24:12.231+0200 DEBUG Building session factory
2023-01-21T12:24:12.232+0200 DEBUG SessionFactory name : null
2023-01-21T12:24:12.232+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T12:24:12.232+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T12:24:12.233+0200 DEBUG Statistics: disabled
2023-01-21T12:24:12.233+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T12:24:12.233+0200 DEBUG Default entity-mode: pojo
2023-01-21T12:24:12.233+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T12:24:12.233+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T12:24:12.234+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T12:24:12.234+0200 DEBUG Default batch fetch size: -1
2023-01-21T12:24:12.234+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T12:24:12.234+0200 DEBUG Default null ordering: NONE
2023-01-21T12:24:12.234+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T12:24:12.235+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T12:24:12.235+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T12:24:12.236+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T12:24:12.236+0200 DEBUG Query language substitutions: {}
2023-01-21T12:24:12.236+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T12:24:12.236+0200 DEBUG Named query checking : enabled
2023-01-21T12:24:12.237+0200 DEBUG Second-level cache: enabled
2023-01-21T12:24:12.237+0200 DEBUG Second-level query cache: disabled
2023-01-21T12:24:12.237+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@71391b3f
2023-01-21T12:24:12.237+0200 DEBUG Second-level cache region prefix: null
2023-01-21T12:24:12.237+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T12:24:12.237+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T12:24:12.238+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T12:24:12.238+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T12:24:12.238+0200 DEBUG JDBC batch size: 15
2023-01-21T12:24:12.238+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T12:24:12.238+0200 DEBUG Scrollable result sets: enabled
2023-01-21T12:24:12.238+0200 DEBUG Wrap result sets: disabled
2023-01-21T12:24:12.239+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T12:24:12.239+0200 DEBUG JDBC result set fetch size: null
2023-01-21T12:24:12.239+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T12:24:12.239+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T12:24:12.322+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T12:24:12.323+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3e7dfd44, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T12:24:12.342+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T12:24:12.344+0200 DEBUG Instantiated session factory
2023-01-21T12:24:12.425+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:24:12.426+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:24:12.451+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:24:12.452+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:24:12.506+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T12:24:12.506+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:24:12.512+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T12:24:48.212+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T12:24:48.236+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T12:24:48.240+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T12:24:48.246+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T12:24:48.359+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T12:24:48.362+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T12:24:48.428+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T12:24:48.428+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T12:24:48.439+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T12:24:48.796+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T12:24:48.823+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T12:24:48.832+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T12:24:48.874+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T12:24:48.874+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T12:24:48.875+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1972e513
2023-01-21T12:24:48.876+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@433defed
2023-01-21T12:24:48.879+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@52f27fbd
2023-01-21T12:24:48.880+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@c430e6c
2023-01-21T12:24:48.882+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T12:24:48.882+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T12:24:48.882+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4f32a3ad
2023-01-21T12:24:48.886+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T12:24:48.888+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T12:24:48.888+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4007f65e
2023-01-21T12:24:48.890+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T12:24:48.890+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T12:24:48.891+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2ab4bc72
2023-01-21T12:24:48.892+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T12:24:48.893+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T12:24:48.893+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2a8448fa
2023-01-21T12:24:48.896+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T12:24:48.897+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T12:24:48.899+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5b38c1ec
2023-01-21T12:24:48.901+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T12:24:48.901+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@38467116
2023-01-21T12:24:48.901+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@38467116
2023-01-21T12:24:48.902+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T12:24:48.903+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T12:24:48.903+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2dfaea86
2023-01-21T12:24:48.904+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T12:24:48.904+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d14b6c2
2023-01-21T12:24:48.905+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T12:24:48.906+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@50378a4
2023-01-21T12:24:48.907+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@97e93f1
2023-01-21T12:24:48.907+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@97e93f1
2023-01-21T12:24:48.908+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@782859e
2023-01-21T12:24:48.909+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@210ab13f
2023-01-21T12:24:48.910+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@446a1e84
2023-01-21T12:24:48.910+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@446a1e84
2023-01-21T12:24:48.911+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T12:24:48.911+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@387a8303
2023-01-21T12:24:48.915+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T12:24:48.915+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2584b82d
2023-01-21T12:24:48.916+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T12:24:48.916+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f9e9475
2023-01-21T12:24:48.919+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T12:24:48.919+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51891008
2023-01-21T12:24:48.920+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T12:24:48.921+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3e0e1046
2023-01-21T12:24:48.922+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T12:24:48.922+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@798162bc
2023-01-21T12:24:48.923+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T12:24:48.924+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f9f6368
2023-01-21T12:24:48.925+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T12:24:48.926+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6f36c2f0
2023-01-21T12:24:48.927+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T12:24:48.928+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@2f67a4d3
2023-01-21T12:24:48.929+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@642a7222
2023-01-21T12:24:48.929+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@642a7222
2023-01-21T12:24:48.931+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T12:24:48.931+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15d49048
2023-01-21T12:24:48.931+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15d49048
2023-01-21T12:24:48.932+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2235eaab
2023-01-21T12:24:48.933+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T12:24:48.933+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T12:24:48.933+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@10289886
2023-01-21T12:24:48.934+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7068e664
2023-01-21T12:24:48.935+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T12:24:48.935+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@24105dc5
2023-01-21T12:24:48.936+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T12:24:48.936+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@50f6ac94
2023-01-21T12:24:48.937+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T12:24:48.938+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ad48653
2023-01-21T12:24:48.939+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T12:24:48.939+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@383dc82c
2023-01-21T12:24:48.941+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T12:24:48.941+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7fd7a283
2023-01-21T12:24:48.941+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@54e041a4
2023-01-21T12:24:48.942+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@4149c063
2023-01-21T12:24:48.943+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@4149c063
2023-01-21T12:24:48.943+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@4149c063
2023-01-21T12:24:48.944+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T12:24:48.944+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T12:24:48.944+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@53f3bdbd
2023-01-21T12:24:48.945+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@4ef74c30
2023-01-21T12:24:48.945+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@776a6d9b
2023-01-21T12:24:48.946+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T12:24:48.947+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T12:24:48.947+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@4c5ae43b
2023-01-21T12:24:48.948+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T12:24:48.948+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T12:24:48.948+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@747f281
2023-01-21T12:24:48.949+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@1ebea008
2023-01-21T12:24:48.949+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@35a3d49f
2023-01-21T12:24:48.953+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T12:24:48.953+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5e17553a
2023-01-21T12:24:48.954+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@74f6c5d8
2023-01-21T12:24:48.957+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T12:24:48.958+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@44be0077
2023-01-21T12:24:48.962+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T12:24:48.962+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64e7619d
2023-01-21T12:24:48.963+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3116c353
2023-01-21T12:24:48.964+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3224a577
2023-01-21T12:24:48.966+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@7a3793c7
2023-01-21T12:24:48.969+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T12:24:48.970+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@329dbdbf
2023-01-21T12:24:48.971+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T12:24:48.971+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@479cbee5
2023-01-21T12:24:48.972+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@59e2d8e3
2023-01-21T12:24:48.972+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2b72cb8a
2023-01-21T12:24:48.973+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7f8a9499
2023-01-21T12:24:48.973+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d43661b
2023-01-21T12:24:48.973+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@12299890
2023-01-21T12:24:48.974+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2fba3fc4
2023-01-21T12:24:48.982+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T12:24:48.989+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:24:48.989+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T12:24:48.989+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T12:24:48.997+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T12:24:48.998+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T12:24:49.638+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T12:24:49.638+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T12:24:49.639+0200 DEBUG JDBC version : 4.2
2023-01-21T12:24:49.648+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T12:24:49.704+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T12:24:49.706+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T12:24:49.742+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T12:24:49.742+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T12:24:49.743+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:24:49.743+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:24:49.744+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T12:24:49.745+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T12:24:49.746+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T12:24:49.747+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:24:49.748+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T12:24:49.749+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T12:24:49.749+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T12:24:49.749+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T12:24:49.750+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:24:49.750+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T12:24:49.773+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T12:24:49.800+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Student
2023-01-21T12:24:49.846+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T12:24:49.856+0200 DEBUG Import with entity name Student
2023-01-21T12:24:49.870+0200 DEBUG Bind entity edu.itstep.sql.Student on table student
2023-01-21T12:24:49.923+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(student), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T12:24:49.931+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T12:24:49.934+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Student:id]
2023-01-21T12:24:49.942+0200 DEBUG building SimpleValue for id
2023-01-21T12:24:49.946+0200 DEBUG Building property id
2023-01-21T12:24:49.953+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(student), mappingColumn=email, insertable=true, updatable=true, unique=false}
2023-01-21T12:24:49.954+0200 DEBUG MetadataSourceProcessor property email with lazy=false
2023-01-21T12:24:49.954+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Student:email]
2023-01-21T12:24:49.954+0200 DEBUG building SimpleValue for email
2023-01-21T12:24:49.954+0200 DEBUG Building property email
2023-01-21T12:24:49.955+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(student), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2023-01-21T12:24:49.955+0200 DEBUG MetadataSourceProcessor property firstName with lazy=false
2023-01-21T12:24:49.956+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Student:firstName]
2023-01-21T12:24:49.956+0200 DEBUG building SimpleValue for firstName
2023-01-21T12:24:49.956+0200 DEBUG Building property firstName
2023-01-21T12:24:49.956+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(student), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2023-01-21T12:24:49.957+0200 DEBUG MetadataSourceProcessor property lastName with lazy=false
2023-01-21T12:24:49.957+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Student:lastName]
2023-01-21T12:24:49.957+0200 DEBUG building SimpleValue for lastName
2023-01-21T12:24:49.957+0200 DEBUG Building property lastName
2023-01-21T12:24:49.962+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T12:24:49.963+0200 DEBUG Starting fillSimpleValue for email
2023-01-21T12:24:49.963+0200 DEBUG Starting fillSimpleValue for firstName
2023-01-21T12:24:49.963+0200 DEBUG Starting fillSimpleValue for lastName
2023-01-21T12:24:49.969+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [student]
2023-01-21T12:24:50.014+0200 DEBUG Building session factory
2023-01-21T12:24:50.015+0200 DEBUG SessionFactory name : null
2023-01-21T12:24:50.015+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T12:24:50.016+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T12:24:50.016+0200 DEBUG Statistics: disabled
2023-01-21T12:24:50.016+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T12:24:50.016+0200 DEBUG Default entity-mode: pojo
2023-01-21T12:24:50.016+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T12:24:50.016+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T12:24:50.017+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T12:24:50.017+0200 DEBUG Default batch fetch size: -1
2023-01-21T12:24:50.017+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T12:24:50.017+0200 DEBUG Default null ordering: NONE
2023-01-21T12:24:50.017+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T12:24:50.019+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T12:24:50.019+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T12:24:50.020+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T12:24:50.020+0200 DEBUG Query language substitutions: {}
2023-01-21T12:24:50.020+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T12:24:50.020+0200 DEBUG Named query checking : enabled
2023-01-21T12:24:50.020+0200 DEBUG Second-level cache: enabled
2023-01-21T12:24:50.020+0200 DEBUG Second-level query cache: disabled
2023-01-21T12:24:50.021+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4e8e8621
2023-01-21T12:24:50.021+0200 DEBUG Second-level cache region prefix: null
2023-01-21T12:24:50.021+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T12:24:50.021+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T12:24:50.021+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T12:24:50.021+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T12:24:50.021+0200 DEBUG JDBC batch size: 15
2023-01-21T12:24:50.021+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T12:24:50.022+0200 DEBUG Scrollable result sets: enabled
2023-01-21T12:24:50.022+0200 DEBUG Wrap result sets: disabled
2023-01-21T12:24:50.022+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T12:24:50.022+0200 DEBUG JDBC result set fetch size: null
2023-01-21T12:24:50.022+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T12:24:50.022+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T12:24:50.131+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T12:24:50.132+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=16, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1251, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Europe/Kiev, java.vm.specification.version=16, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-16.0.1\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=C:\Program Files\Java\jdk-16.0.1, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=16.0.1+9-24, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=16.0.1, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5a6482a9, java.library.path=C:\Program Files\Java\jdk-16.0.1\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=16.0.1+9-24, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=60.0}
2023-01-21T12:24:50.159+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T12:24:50.162+0200 DEBUG Instantiated session factory
2023-01-21T12:24:50.207+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Student] is safe
2023-01-21T12:24:50.207+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Student
2023-01-21T12:24:50.229+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Student] is safe
2023-01-21T12:24:50.229+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Student
2023-01-21T12:24:50.283+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T12:24:50.284+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:24:50.290+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T12:27:48.580+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T12:27:48.711+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T12:27:48.720+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T12:27:48.745+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T12:27:49.145+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T12:27:49.181+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T12:27:49.506+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T12:27:49.507+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T12:27:49.528+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T12:27:50.735+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T12:27:50.819+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T12:27:50.872+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T12:27:50.927+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@792b749c
2023-01-21T12:27:50.928+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@792b749c
2023-01-21T12:27:50.928+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@792b749c
2023-01-21T12:27:50.933+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1972e513
2023-01-21T12:27:50.983+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@7fd50002
2023-01-21T12:27:50.984+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@25be7b63
2023-01-21T12:27:50.993+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@66982506
2023-01-21T12:27:50.994+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@66982506
2023-01-21T12:27:50.994+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66982506
2023-01-21T12:27:50.995+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4f32a3ad
2023-01-21T12:27:50.996+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4f32a3ad
2023-01-21T12:27:50.998+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4f32a3ad
2023-01-21T12:27:51.001+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@5965d37
2023-01-21T12:27:51.001+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@5965d37
2023-01-21T12:27:51.004+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5965d37
2023-01-21T12:27:51.010+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@2ab4bc72
2023-01-21T12:27:51.010+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@2ab4bc72
2023-01-21T12:27:51.011+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2ab4bc72
2023-01-21T12:27:51.014+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5f8e8a9d
2023-01-21T12:27:51.021+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5f8e8a9d
2023-01-21T12:27:51.033+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f8e8a9d
2023-01-21T12:27:51.066+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@480d3575
2023-01-21T12:27:51.068+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@480d3575
2023-01-21T12:27:51.069+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@480d3575
2023-01-21T12:27:51.072+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@5c7933ad
2023-01-21T12:27:51.072+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@5c7933ad
2023-01-21T12:27:51.073+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c7933ad
2023-01-21T12:27:51.076+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6a8658ff
2023-01-21T12:27:51.076+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6a8658ff
2023-01-21T12:27:51.078+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d14b6c2
2023-01-21T12:27:51.079+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d14b6c2
2023-01-21T12:27:51.081+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@50378a4
2023-01-21T12:27:51.081+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@50378a4
2023-01-21T12:27:51.082+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@97e93f1
2023-01-21T12:27:51.088+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@782859e
2023-01-21T12:27:51.114+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@210ab13f
2023-01-21T12:27:51.114+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@210ab13f
2023-01-21T12:27:51.131+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@446a1e84
2023-01-21T12:27:51.132+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@446a1e84
2023-01-21T12:27:51.142+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@71687585
2023-01-21T12:27:51.143+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@71687585
2023-01-21T12:27:51.146+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2584b82d
2023-01-21T12:27:51.146+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2584b82d
2023-01-21T12:27:51.150+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@46d59067
2023-01-21T12:27:51.150+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@46d59067
2023-01-21T12:27:51.250+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@d2de489
2023-01-21T12:27:51.254+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@d2de489
2023-01-21T12:27:51.261+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e0e1046
2023-01-21T12:27:51.261+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e0e1046
2023-01-21T12:27:51.320+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@798162bc
2023-01-21T12:27:51.321+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@798162bc
2023-01-21T12:27:51.331+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1f9f6368
2023-01-21T12:27:51.336+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1f9f6368
2023-01-21T12:27:51.345+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@700fb871
2023-01-21T12:27:51.345+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@700fb871
2023-01-21T12:27:51.353+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@5e3f861
2023-01-21T12:27:51.353+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e3f861
2023-01-21T12:27:51.355+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@7d322cad
2023-01-21T12:27:51.355+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7d322cad
2023-01-21T12:27:51.356+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7d322cad
2023-01-21T12:27:51.362+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@147e2ae7
2023-01-21T12:27:51.364+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@17503f6b
2023-01-21T12:27:51.365+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@17503f6b
2023-01-21T12:27:51.365+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@17503f6b
2023-01-21T12:27:51.370+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@730d2164
2023-01-21T12:27:51.373+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7068e664
2023-01-21T12:27:51.385+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7068e664
2023-01-21T12:27:51.393+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@24105dc5
2023-01-21T12:27:51.394+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@24105dc5
2023-01-21T12:27:51.399+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@50f6ac94
2023-01-21T12:27:51.400+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@50f6ac94
2023-01-21T12:27:51.413+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@2ad48653
2023-01-21T12:27:51.415+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2ad48653
2023-01-21T12:27:51.430+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@68746f22
2023-01-21T12:27:51.431+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@68746f22
2023-01-21T12:27:51.434+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a8ef162
2023-01-21T12:27:51.461+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2c78324b
2023-01-21T12:27:51.461+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2c78324b
2023-01-21T12:27:51.461+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2c78324b
2023-01-21T12:27:51.463+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4149c063
2023-01-21T12:27:51.463+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4149c063
2023-01-21T12:27:51.464+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4149c063
2023-01-21T12:27:51.466+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@53f3bdbd
2023-01-21T12:27:51.468+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@4ef74c30
2023-01-21T12:27:51.470+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@776a6d9b
2023-01-21T12:27:51.471+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@776a6d9b
2023-01-21T12:27:51.471+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@776a6d9b
2023-01-21T12:27:51.474+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4c5ae43b
2023-01-21T12:27:51.475+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4c5ae43b
2023-01-21T12:27:51.475+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4c5ae43b
2023-01-21T12:27:51.477+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@747f281
2023-01-21T12:27:51.479+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@1ebea008
2023-01-21T12:27:51.529+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@4b2c5e02
2023-01-21T12:27:51.529+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b2c5e02
2023-01-21T12:27:51.549+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2dc9b0f5
2023-01-21T12:27:51.556+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@6f3187b0
2023-01-21T12:27:51.558+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f3187b0
2023-01-21T12:27:51.565+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@4ea5b703
2023-01-21T12:27:51.565+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ea5b703
2023-01-21T12:27:51.566+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f4c4b1a
2023-01-21T12:27:51.568+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@495ee280
2023-01-21T12:27:51.571+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3e44f2a5
2023-01-21T12:27:51.579+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@50313382
2023-01-21T12:27:51.580+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@50313382
2023-01-21T12:27:51.580+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T12:27:51.580+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bd31064
2023-01-21T12:27:51.581+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e3c0e40
2023-01-21T12:27:51.581+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@329dbdbf
2023-01-21T12:27:51.581+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7354b8c5
2023-01-21T12:27:51.581+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@20d7d6fb
2023-01-21T12:27:51.581+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4ef782af
2023-01-21T12:27:51.582+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T12:27:51.595+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T12:27:51.684+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:27:51.685+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T12:27:51.694+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T12:27:51.749+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T12:27:51.750+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T12:27:54.937+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T12:27:54.938+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T12:27:54.938+0200 DEBUG JDBC version : 4.2
2023-01-21T12:27:54.954+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T12:27:55.082+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T12:27:55.084+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T12:27:55.215+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T12:27:55.230+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T12:27:55.231+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:27:55.232+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:27:55.233+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T12:27:55.235+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T12:27:55.235+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T12:27:55.238+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:27:55.242+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T12:27:55.244+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T12:27:55.245+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T12:27:55.249+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T12:27:55.250+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:27:55.252+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T12:27:55.354+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T12:27:55.488+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T12:27:55.582+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T12:27:55.626+0200 DEBUG Import with entity name Users
2023-01-21T12:27:55.633+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T12:27:55.700+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T12:27:55.706+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T12:27:55.769+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T12:27:55.800+0200 DEBUG building SimpleValue for id
2023-01-21T12:27:55.813+0200 DEBUG Building property id
2023-01-21T12:27:55.834+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T12:27:55.835+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T12:27:55.835+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T12:27:55.836+0200 DEBUG building SimpleValue for password
2023-01-21T12:27:55.840+0200 DEBUG Building property password
2023-01-21T12:27:55.842+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T12:27:55.843+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T12:27:55.844+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T12:27:55.844+0200 DEBUG building SimpleValue for userName
2023-01-21T12:27:55.845+0200 DEBUG Building property userName
2023-01-21T12:27:55.848+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T12:27:55.858+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T12:27:55.867+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T12:27:55.869+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T12:27:56.141+0200 DEBUG Building session factory
2023-01-21T12:27:56.143+0200 DEBUG SessionFactory name : null
2023-01-21T12:27:56.144+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T12:27:56.144+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T12:27:56.144+0200 DEBUG Statistics: disabled
2023-01-21T12:27:56.144+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T12:27:56.144+0200 DEBUG Default entity-mode: pojo
2023-01-21T12:27:56.144+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T12:27:56.144+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T12:27:56.145+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T12:27:56.145+0200 DEBUG Default batch fetch size: -1
2023-01-21T12:27:56.146+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T12:27:56.146+0200 DEBUG Default null ordering: NONE
2023-01-21T12:27:56.147+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T12:27:56.147+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T12:27:56.147+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T12:27:56.150+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T12:27:56.150+0200 DEBUG Query language substitutions: {}
2023-01-21T12:27:56.151+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T12:27:56.151+0200 DEBUG Named query checking : enabled
2023-01-21T12:27:56.151+0200 DEBUG Second-level cache: enabled
2023-01-21T12:27:56.151+0200 DEBUG Second-level query cache: disabled
2023-01-21T12:27:56.151+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@267517e4
2023-01-21T12:27:56.151+0200 DEBUG Second-level cache region prefix: null
2023-01-21T12:27:56.156+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T12:27:56.156+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T12:27:56.156+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T12:27:56.156+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T12:27:56.156+0200 DEBUG JDBC batch size: 15
2023-01-21T12:27:56.162+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T12:27:56.162+0200 DEBUG Scrollable result sets: enabled
2023-01-21T12:27:56.162+0200 DEBUG Wrap result sets: disabled
2023-01-21T12:27:56.163+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T12:27:56.163+0200 DEBUG JDBC result set fetch size: null
2023-01-21T12:27:56.163+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T12:27:56.163+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T12:27:56.508+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T12:27:56.508+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6136998b, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-21T12:27:56.611+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T12:27:56.615+0200 DEBUG Instantiated session factory
2023-01-21T12:27:56.936+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:27:56.940+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:27:56.969+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:27:56.972+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:27:57.260+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T12:27:57.260+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:27:57.263+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T12:30:54.145+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T12:30:54.183+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T12:30:54.187+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T12:30:54.194+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T12:30:54.315+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T12:30:54.320+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T12:30:54.411+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T12:30:54.411+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T12:30:54.420+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T12:30:54.854+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T12:30:54.890+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T12:30:54.902+0200 INFO HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2023-01-21T12:30:54.932+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@792b749c
2023-01-21T12:30:54.933+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@792b749c
2023-01-21T12:30:54.933+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@792b749c
2023-01-21T12:30:54.934+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1972e513
2023-01-21T12:30:54.936+0200 DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@7fd50002
2023-01-21T12:30:54.937+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@25be7b63
2023-01-21T12:30:54.939+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@66982506
2023-01-21T12:30:54.940+0200 DEBUG Adding type registration byte -> org.hibernate.type.ByteType@66982506
2023-01-21T12:30:54.940+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@66982506
2023-01-21T12:30:54.941+0200 DEBUG Adding type registration character -> org.hibernate.type.CharacterType@4f32a3ad
2023-01-21T12:30:54.942+0200 DEBUG Adding type registration char -> org.hibernate.type.CharacterType@4f32a3ad
2023-01-21T12:30:54.942+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4f32a3ad
2023-01-21T12:30:54.944+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@5965d37
2023-01-21T12:30:54.944+0200 DEBUG Adding type registration short -> org.hibernate.type.ShortType@5965d37
2023-01-21T12:30:54.945+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5965d37
2023-01-21T12:30:54.947+0200 DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@2ab4bc72
2023-01-21T12:30:54.947+0200 DEBUG Adding type registration int -> org.hibernate.type.IntegerType@2ab4bc72
2023-01-21T12:30:54.948+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2ab4bc72
2023-01-21T12:30:54.950+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5f8e8a9d
2023-01-21T12:30:54.950+0200 DEBUG Adding type registration long -> org.hibernate.type.LongType@5f8e8a9d
2023-01-21T12:30:54.950+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@5f8e8a9d
2023-01-21T12:30:54.952+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@480d3575
2023-01-21T12:30:54.952+0200 DEBUG Adding type registration float -> org.hibernate.type.FloatType@480d3575
2023-01-21T12:30:54.953+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@480d3575
2023-01-21T12:30:54.955+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@5c7933ad
2023-01-21T12:30:54.955+0200 DEBUG Adding type registration double -> org.hibernate.type.DoubleType@5c7933ad
2023-01-21T12:30:54.955+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c7933ad
2023-01-21T12:30:54.957+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6a8658ff
2023-01-21T12:30:54.958+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6a8658ff
2023-01-21T12:30:54.960+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4d14b6c2
2023-01-21T12:30:54.960+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4d14b6c2
2023-01-21T12:30:54.962+0200 DEBUG Adding type registration string -> org.hibernate.type.StringType@50378a4
2023-01-21T12:30:54.962+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@50378a4
2023-01-21T12:30:54.964+0200 DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@97e93f1
2023-01-21T12:30:54.965+0200 DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@782859e
2023-01-21T12:30:54.967+0200 DEBUG Adding type registration url -> org.hibernate.type.UrlType@210ab13f
2023-01-21T12:30:54.967+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@210ab13f
2023-01-21T12:30:54.968+0200 DEBUG Adding type registration Duration -> org.hibernate.type.DurationType@446a1e84
2023-01-21T12:30:54.969+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.DurationType@446a1e84
2023-01-21T12:30:54.974+0200 DEBUG Adding type registration Instant -> org.hibernate.type.InstantType@71687585
2023-01-21T12:30:54.975+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.InstantType@71687585
2023-01-21T12:30:54.977+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2584b82d
2023-01-21T12:30:54.977+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2584b82d
2023-01-21T12:30:54.980+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.LocalDateType@46d59067
2023-01-21T12:30:54.980+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@46d59067
2023-01-21T12:30:54.982+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@d2de489
2023-01-21T12:30:54.982+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@d2de489
2023-01-21T12:30:54.984+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e0e1046
2023-01-21T12:30:54.985+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e0e1046
2023-01-21T12:30:54.987+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@798162bc
2023-01-21T12:30:54.987+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@798162bc
2023-01-21T12:30:54.989+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1f9f6368
2023-01-21T12:30:54.990+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1f9f6368
2023-01-21T12:30:54.992+0200 DEBUG Adding type registration date -> org.hibernate.type.DateType@700fb871
2023-01-21T12:30:54.992+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@700fb871
2023-01-21T12:30:54.994+0200 DEBUG Adding type registration time -> org.hibernate.type.TimeType@5e3f861
2023-01-21T12:30:54.994+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e3f861
2023-01-21T12:30:54.996+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@7d322cad
2023-01-21T12:30:54.996+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7d322cad
2023-01-21T12:30:54.997+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7d322cad
2023-01-21T12:30:54.999+0200 DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@147e2ae7
2023-01-21T12:30:55.001+0200 DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@17503f6b
2023-01-21T12:30:55.001+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@17503f6b
2023-01-21T12:30:55.001+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@17503f6b
2023-01-21T12:30:55.002+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@730d2164
2023-01-21T12:30:55.004+0200 DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@7068e664
2023-01-21T12:30:55.004+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7068e664
2023-01-21T12:30:55.006+0200 DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@24105dc5
2023-01-21T12:30:55.006+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@24105dc5
2023-01-21T12:30:55.007+0200 DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@50f6ac94
2023-01-21T12:30:55.007+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@50f6ac94
2023-01-21T12:30:55.008+0200 DEBUG Adding type registration class -> org.hibernate.type.ClassType@2ad48653
2023-01-21T12:30:55.008+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2ad48653
2023-01-21T12:30:55.010+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@68746f22
2023-01-21T12:30:55.010+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@68746f22
2023-01-21T12:30:55.011+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a8ef162
2023-01-21T12:30:55.012+0200 DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@2c78324b
2023-01-21T12:30:55.013+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@2c78324b
2023-01-21T12:30:55.013+0200 DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@2c78324b
2023-01-21T12:30:55.014+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4149c063
2023-01-21T12:30:55.014+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4149c063
2023-01-21T12:30:55.015+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4149c063
2023-01-21T12:30:55.016+0200 DEBUG Adding type registration row_version -> org.hibernate.type.RowVersionType@53f3bdbd
2023-01-21T12:30:55.016+0200 DEBUG Adding type registration image -> org.hibernate.type.ImageType@4ef74c30
2023-01-21T12:30:55.019+0200 DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@776a6d9b
2023-01-21T12:30:55.019+0200 DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@776a6d9b
2023-01-21T12:30:55.019+0200 DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@776a6d9b
2023-01-21T12:30:55.021+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4c5ae43b
2023-01-21T12:30:55.021+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4c5ae43b
2023-01-21T12:30:55.021+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4c5ae43b
2023-01-21T12:30:55.022+0200 DEBUG Adding type registration text -> org.hibernate.type.TextType@747f281
2023-01-21T12:30:55.022+0200 DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@1ebea008
2023-01-21T12:30:55.026+0200 DEBUG Adding type registration blob -> org.hibernate.type.BlobType@4b2c5e02
2023-01-21T12:30:55.026+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4b2c5e02
2023-01-21T12:30:55.026+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2dc9b0f5
2023-01-21T12:30:55.029+0200 DEBUG Adding type registration clob -> org.hibernate.type.ClobType@6f3187b0
2023-01-21T12:30:55.030+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f3187b0
2023-01-21T12:30:55.034+0200 DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@4ea5b703
2023-01-21T12:30:55.034+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ea5b703
2023-01-21T12:30:55.035+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4f4c4b1a
2023-01-21T12:30:55.036+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@495ee280
2023-01-21T12:30:55.041+0200 DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@3e44f2a5
2023-01-21T12:30:55.044+0200 DEBUG Adding type registration object -> org.hibernate.type.ObjectType@50313382
2023-01-21T12:30:55.045+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@50313382
2023-01-21T12:30:55.047+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4d518b32
2023-01-21T12:30:55.047+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bd31064
2023-01-21T12:30:55.047+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e3c0e40
2023-01-21T12:30:55.047+0200 DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@329dbdbf
2023-01-21T12:30:55.047+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7354b8c5
2023-01-21T12:30:55.048+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@20d7d6fb
2023-01-21T12:30:55.048+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4ef782af
2023-01-21T12:30:55.048+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@11d8ae8b
2023-01-21T12:30:55.059+0200 WARN HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2023-01-21T12:30:55.070+0200 INFO HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:30:55.071+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T12:30:55.071+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T12:30:55.079+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T12:30:55.079+0200 INFO HHH000115: Hibernate connection pool size: 3 (min=1)
2023-01-21T12:30:55.891+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T12:30:55.891+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T12:30:55.892+0200 DEBUG JDBC version : 4.2
2023-01-21T12:30:55.908+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T12:30:55.987+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T12:30:55.989+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T12:30:56.043+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T12:30:56.044+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T12:30:56.045+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:30:56.045+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T12:30:56.046+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T12:30:56.047+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T12:30:56.048+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T12:30:56.050+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:30:56.051+0200 DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2023-01-21T12:30:56.052+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T12:30:56.053+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T12:30:56.053+0200 DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2023-01-21T12:30:56.053+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T12:30:56.054+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T12:30:56.091+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T12:30:56.134+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T12:30:56.189+0200 DEBUG Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2023-01-21T12:30:56.203+0200 DEBUG Import with entity name Users
2023-01-21T12:30:56.208+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T12:30:56.243+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=id, insertable=true, updatable=true, unique=false}
2023-01-21T12:30:56.253+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T12:30:56.255+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T12:30:56.259+0200 DEBUG building SimpleValue for id
2023-01-21T12:30:56.264+0200 DEBUG Building property id
2023-01-21T12:30:56.273+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2023-01-21T12:30:56.274+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T12:30:56.274+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T12:30:56.274+0200 DEBUG building SimpleValue for password
2023-01-21T12:30:56.274+0200 DEBUG Building property password
2023-01-21T12:30:56.275+0200 DEBUG Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_name, insertable=true, updatable=true, unique=false}
2023-01-21T12:30:56.275+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T12:30:56.275+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T12:30:56.275+0200 DEBUG building SimpleValue for userName
2023-01-21T12:30:56.276+0200 DEBUG Building property userName
2023-01-21T12:30:56.279+0200 DEBUG Starting fillSimpleValue for id
2023-01-21T12:30:56.279+0200 DEBUG Starting fillSimpleValue for password
2023-01-21T12:30:56.279+0200 DEBUG Starting fillSimpleValue for userName
2023-01-21T12:30:56.281+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T12:30:56.335+0200 DEBUG Building session factory
2023-01-21T12:30:56.337+0200 DEBUG SessionFactory name : null
2023-01-21T12:30:56.337+0200 DEBUG Automatic flush during beforeCompletion(): enabled
2023-01-21T12:30:56.338+0200 DEBUG Automatic session close at end of transaction: disabled
2023-01-21T12:30:56.338+0200 DEBUG Statistics: disabled
2023-01-21T12:30:56.338+0200 DEBUG Deleted entity synthetic identifier rollback: disabled
2023-01-21T12:30:56.338+0200 DEBUG Default entity-mode: pojo
2023-01-21T12:30:56.338+0200 DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2023-01-21T12:30:56.338+0200 DEBUG Allow initialization of lazy state outside session : disabled
2023-01-21T12:30:56.338+0200 DEBUG Using BatchFetchStyle : LEGACY
2023-01-21T12:30:56.338+0200 DEBUG Default batch fetch size: -1
2023-01-21T12:30:56.339+0200 DEBUG Maximum outer join fetch depth: 2
2023-01-21T12:30:56.339+0200 DEBUG Default null ordering: NONE
2023-01-21T12:30:56.339+0200 DEBUG Order SQL updates by primary key: disabled
2023-01-21T12:30:56.339+0200 DEBUG Order SQL inserts for batching: disabled
2023-01-21T12:30:56.339+0200 DEBUG multi-tenancy strategy : NONE
2023-01-21T12:30:56.339+0200 DEBUG JTA Track by Thread: enabled
2023-01-21T12:30:56.339+0200 DEBUG Query language substitutions: {}
2023-01-21T12:30:56.340+0200 DEBUG JPA query language strict compliance: disabled
2023-01-21T12:30:56.340+0200 DEBUG Named query checking : enabled
2023-01-21T12:30:56.340+0200 DEBUG Second-level cache: enabled
2023-01-21T12:30:56.340+0200 DEBUG Second-level query cache: disabled
2023-01-21T12:30:56.340+0200 DEBUG Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@267517e4
2023-01-21T12:30:56.340+0200 DEBUG Second-level cache region prefix: null
2023-01-21T12:30:56.340+0200 DEBUG Optimize second-level cache for minimal puts: disabled
2023-01-21T12:30:56.340+0200 DEBUG Structured second-level cache entries: disabled
2023-01-21T12:30:56.341+0200 DEBUG Second-level cache direct-reference entries: disabled
2023-01-21T12:30:56.341+0200 DEBUG Automatic eviction of collection cache: disabled
2023-01-21T12:30:56.341+0200 DEBUG JDBC batch size: 15
2023-01-21T12:30:56.341+0200 DEBUG JDBC batch updates for versioned data: enabled
2023-01-21T12:30:56.341+0200 DEBUG Scrollable result sets: enabled
2023-01-21T12:30:56.341+0200 DEBUG Wrap result sets: disabled
2023-01-21T12:30:56.341+0200 DEBUG JDBC3 getGeneratedKeys(): enabled
2023-01-21T12:30:56.341+0200 DEBUG JDBC result set fetch size: null
2023-01-21T12:30:56.341+0200 DEBUG Connection release mode: AFTER_TRANSACTION
2023-01-21T12:30:56.342+0200 DEBUG Generate SQL with comments: disabled
2023-01-21T12:30:56.452+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T12:30:56.453+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.2\jakarta.xml.bind-api-2.3.2.jar;C:\Users\User\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.1\jakarta.activation-api-1.2.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\2.3.2\txw2-2.3.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.8\istack-commons-runtime-3.0.8.jar;C:\Users\User\.m2\repository\org\jvnet\staxex\stax-ex\1.8.1\stax-ex-1.8.1.jar;C:\Users\User\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.16\FastInfoset-1.2.16.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\User\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\User\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\User\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\User\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\User\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\User\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6136998b, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-21T12:30:56.471+0200 DEBUG Skipping JACC integration as it was not enabled
2023-01-21T12:30:56.473+0200 DEBUG Instantiated session factory
2023-01-21T12:30:56.527+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:30:56.527+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:30:56.546+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T12:30:56.546+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T12:30:56.632+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T12:30:56.633+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T12:30:56.642+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-21T13:11:16.263+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T13:11:16.294+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T13:11:16.299+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T13:11:16.307+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T13:11:16.426+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T13:11:16.429+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T13:11:16.505+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T13:11:16.505+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T13:11:16.513+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T13:11:16.885+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T13:11:16.914+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T13:11:57.451+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T13:11:57.480+0200 DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2023-01-21T13:11:57.484+0200 DEBUG Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2023-01-21T13:11:57.492+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T13:11:57.616+0200 INFO HHH000412: Hibernate Core {5.2.12.Final}
2023-01-21T13:11:57.619+0200 INFO HHH000206: hibernate.properties not found
2023-01-21T13:11:57.682+0200 DEBUG Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2023-01-21T13:11:57.683+0200 DEBUG Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2023-01-21T13:11:57.690+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T13:11:58.067+0200 DEBUG Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2023-01-21T13:11:58.111+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T13:22:58.173+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T13:22:58.202+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-21T13:22:58.209+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T13:22:58.257+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-21T13:22:58.261+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-21T13:22:58.264+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-21T13:23:58.878+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T13:23:58.908+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-21T13:23:58.917+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T13:23:58.965+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-21T13:23:58.969+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-21T13:23:58.971+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-21T13:26:25.081+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T13:26:25.106+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-21T13:26:25.114+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T13:26:25.161+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-21T13:26:25.164+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-21T13:26:25.167+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-21T13:28:05.762+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T13:28:05.802+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-21T13:28:05.814+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T13:28:05.875+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-21T13:28:05.878+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-21T13:28:05.882+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-21T13:30:04.578+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T13:30:04.611+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-21T13:30:04.620+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T13:30:04.667+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-21T13:30:04.670+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-21T13:30:04.674+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-21T13:31:00.450+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T13:31:00.481+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-21T13:31:00.492+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T13:31:00.540+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-21T13:31:00.543+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-21T13:31:00.546+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-21T13:32:04.191+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T13:32:04.257+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-21T13:32:04.266+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T13:32:04.308+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-21T13:32:04.311+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-21T13:32:04.313+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-21T13:45:45.769+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T13:45:45.807+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-21T13:45:45.817+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T13:45:45.878+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-21T13:45:45.881+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-21T13:45:45.885+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-21T13:48:18.049+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T13:48:18.076+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-21T13:48:18.084+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T13:48:18.127+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-21T13:48:18.130+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-21T13:48:18.132+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-21T13:48:18.491+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-21T13:48:18.502+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T13:48:18.908+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-21T13:48:18.917+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T13:48:18.918+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T13:48:18.919+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T13:48:18.919+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T13:48:18.920+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T13:48:18.922+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T13:48:18.922+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T13:48:18.924+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T13:48:18.925+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T13:48:18.926+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T13:48:18.927+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T13:48:18.928+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T13:48:18.938+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-21T13:48:18.940+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T13:48:19.234+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-21T13:48:19.235+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-21T13:48:19.235+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-21T13:48:19.235+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-21T13:48:19.236+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-21T13:48:19.236+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-21T13:48:19.236+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-21T13:48:19.236+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-21T13:48:19.237+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-21T13:48:19.237+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-21T13:48:19.237+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-21T13:48:19.237+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-21T13:48:19.237+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-21T13:48:19.238+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-21T13:48:19.238+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-21T13:48:19.239+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-21T13:48:19.240+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-21T13:48:19.240+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-21T13:48:19.240+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-21T13:48:19.241+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-21T13:48:19.241+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-21T13:48:19.241+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-21T13:48:19.241+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-21T13:48:19.241+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-21T13:48:19.242+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-21T13:48:19.242+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-21T13:48:19.242+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-21T13:48:19.242+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-21T13:48:19.242+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-21T13:48:19.242+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-21T13:48:19.243+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-21T13:48:19.243+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-21T13:48:19.243+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-21T13:48:19.244+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-21T13:48:19.244+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-21T13:48:19.244+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-21T13:48:19.244+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-21T13:48:19.244+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-21T13:48:19.245+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-21T13:48:19.245+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-21T13:48:19.245+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-21T13:48:19.246+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-21T13:48:19.246+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-21T13:48:19.246+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-21T13:48:19.246+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-21T13:48:19.247+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-21T13:48:19.247+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-21T13:48:19.247+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-21T13:48:19.247+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-21T13:48:19.248+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-21T13:48:19.248+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-21T13:48:19.248+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-21T13:48:19.248+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-21T13:48:19.248+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-21T13:48:19.248+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-21T13:48:19.249+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-21T13:48:19.249+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-21T13:48:19.249+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-21T13:48:19.249+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-21T13:48:19.249+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-21T13:48:19.249+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-21T13:48:19.250+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-21T13:48:19.250+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-21T13:48:19.250+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-21T13:48:19.250+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-21T13:48:19.250+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-21T13:48:19.251+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-21T13:48:19.251+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-21T13:48:19.251+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-21T13:48:19.251+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-21T13:48:19.251+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-21T13:48:19.251+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-21T13:48:19.252+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-21T13:48:19.252+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-21T13:48:19.252+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-21T13:48:19.253+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-21T13:48:19.253+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-21T13:48:19.253+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-21T13:48:19.253+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-21T13:48:19.254+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-21T13:48:19.254+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-21T13:48:19.254+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-21T13:48:19.254+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-21T13:48:19.254+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-21T13:48:19.255+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-21T13:48:19.255+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-21T13:48:19.255+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-21T13:48:19.255+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-21T13:48:19.256+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-21T13:48:19.256+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-21T13:48:19.256+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-21T13:48:19.256+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-21T13:48:19.257+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-21T13:48:19.257+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-21T13:48:19.257+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-21T13:48:19.257+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-21T13:48:19.257+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-21T13:48:19.258+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-21T13:48:19.258+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-21T13:48:19.258+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-21T13:48:19.258+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-21T13:48:19.259+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-21T13:48:19.259+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-21T13:48:19.259+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-21T13:48:19.259+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-21T13:48:19.260+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-21T13:48:19.260+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-21T13:48:19.260+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-21T13:48:19.260+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-21T13:48:19.260+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-21T13:48:19.261+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-21T13:48:19.261+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-21T13:48:19.261+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-21T13:48:19.261+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-21T13:48:19.261+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-21T13:48:19.261+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-21T13:48:19.262+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-21T13:48:19.262+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-21T13:48:19.262+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-21T13:48:19.262+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-21T13:48:19.262+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-21T13:48:19.270+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-21T13:48:19.271+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-21T13:48:19.273+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-21T13:48:19.274+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-21T13:48:19.274+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-21T13:48:19.274+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-21T13:48:19.274+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-21T13:48:19.274+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-21T13:48:19.275+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-21T13:48:19.275+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-21T13:48:19.275+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-21T13:48:19.326+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-21T13:48:19.337+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-21T13:48:19.337+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T13:48:19.337+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T13:48:19.338+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T13:48:19.342+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T13:48:19.343+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-21T13:48:19.988+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T13:48:19.989+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T13:48:19.989+0200 DEBUG JDBC version : 4.2
2023-01-21T13:48:20.069+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T13:48:20.079+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T13:48:20.079+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T13:48:20.105+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-21T13:48:20.105+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-21T13:48:20.106+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-21T13:48:20.106+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-21T13:48:20.106+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-21T13:48:20.106+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-21T13:48:20.107+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-21T13:48:20.108+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-21T13:48:20.108+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-21T13:48:20.111+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-21T13:48:20.111+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-21T13:48:20.114+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-21T13:48:20.117+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-21T13:48:20.118+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-21T13:48:20.120+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-21T13:48:20.121+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-21T13:48:20.130+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-21T13:48:20.130+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-21T13:48:20.130+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-21T13:48:20.130+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-21T13:48:20.130+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-21T13:48:20.130+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-21T13:48:20.133+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-21T13:48:20.179+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T13:48:20.234+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T13:48:20.257+0200 DEBUG Import with entity name Users
2023-01-21T13:48:20.276+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T13:48:20.291+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-21T13:48:20.314+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-21T13:48:20.319+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T13:48:20.319+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T13:48:20.321+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T13:48:20.327+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T13:48:20.336+0200 DEBUG building BasicValue for id
2023-01-21T13:48:20.343+0200 DEBUG Skipping column re-registration: users.id
2023-01-21T13:48:20.344+0200 DEBUG Building property id
2023-01-21T13:48:20.348+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2023-01-21T13:48:20.350+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-21T13:48:20.350+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T13:48:20.350+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T13:48:20.351+0200 DEBUG building BasicValue for password
2023-01-21T13:48:20.351+0200 DEBUG Skipping column re-registration: users.password
2023-01-21T13:48:20.351+0200 DEBUG Building property password
2023-01-21T13:48:20.351+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-21T13:48:20.351+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T13:48:20.351+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T13:48:20.352+0200 DEBUG building BasicValue for userName
2023-01-21T13:48:20.352+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-21T13:48:20.352+0200 DEBUG Building property userName
2023-01-21T13:48:20.362+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-21T13:48:20.363+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-21T13:48:20.365+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-21T13:48:20.369+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T13:48:20.460+0200 DEBUG Building session factory
2023-01-21T13:48:20.559+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-21T13:48:20.566+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T13:48:20.566+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1dd7796b, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-21T13:48:20.574+0200 DEBUG Instantiated session factory
2023-01-21T13:48:20.597+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-21T13:48:20.768+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-21T13:48:20.768+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-21T13:48:20.770+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-21T13:48:20.772+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-21T13:48:20.775+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5b9396d3] under count; prior registration was null
2023-01-21T13:48:20.777+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5ef6fd7f] under every; prior registration was null
2023-01-21T13:48:20.777+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5633ed82] under any; prior registration was null
2023-01-21T13:48:20.778+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-21T13:48:20.778+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-21T13:48:20.779+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-21T13:48:20.779+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-21T13:48:20.779+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-21T13:48:20.779+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-21T13:48:20.779+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-21T13:48:20.779+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-21T13:48:20.780+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-21T13:48:20.780+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-21T13:48:20.781+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-21T13:48:20.781+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-21T13:48:20.781+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-21T13:48:20.781+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-21T13:48:20.781+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-21T13:48:20.781+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-21T13:48:20.782+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-21T13:48:20.784+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3374b5bc] under sinh; prior registration was null
2023-01-21T13:48:20.784+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2af69643] under cosh; prior registration was null
2023-01-21T13:48:20.785+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@587a1cfb] under tanh; prior registration was null
2023-01-21T13:48:20.785+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@48528634] under pi; prior registration was null
2023-01-21T13:48:20.785+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e1d03d7] under log; prior registration was null
2023-01-21T13:48:20.786+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-21T13:48:20.786+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-21T13:48:20.787+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-21T13:48:20.787+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-21T13:48:20.787+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-21T13:48:20.788+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-21T13:48:20.788+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-21T13:48:20.788+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-21T13:48:20.788+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-21T13:48:20.789+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-21T13:48:20.789+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-21T13:48:20.789+0200 DEBUG Registering alternate key : length -> character_length
2023-01-21T13:48:20.791+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4a734c04] under position; prior registration was null
2023-01-21T13:48:20.792+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@658255aa] under overlay; prior registration was null
2023-01-21T13:48:20.794+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3d904e9c] under trim; prior registration was null
2023-01-21T13:48:20.796+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7f353d99] under cast; prior registration was null
2023-01-21T13:48:20.796+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4649d70a] under collate; prior registration was null
2023-01-21T13:48:20.797+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@66273da0] under extract; prior registration was null
2023-01-21T13:48:20.798+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-21T13:48:20.798+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-21T13:48:20.799+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@51c959a4] under ifnull; prior registration was null
2023-01-21T13:48:20.799+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-21T13:48:20.799+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-21T13:48:20.800+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@60f70249] under pad; prior registration was null
2023-01-21T13:48:20.801+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@46c269e0] under str; prior registration was null
2023-01-21T13:48:20.803+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6d1dcdff] under format; prior registration was null
2023-01-21T13:48:20.804+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@252dc8c4] under timestampadd; prior registration was null
2023-01-21T13:48:20.807+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@d109c4f] under timestampdiff; prior registration was null
2023-01-21T13:48:20.807+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-21T13:48:20.807+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-21T13:48:20.808+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@9596ce8] under current_date; prior registration was null
2023-01-21T13:48:20.808+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@75ae4a1f] under current_time; prior registration was null
2023-01-21T13:48:20.808+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@70228253] under current_timestamp; prior registration was null
2023-01-21T13:48:20.808+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-21T13:48:20.808+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-21T13:48:20.808+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-21T13:48:20.809+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@63c12e52] under local_date; prior registration was null
2023-01-21T13:48:20.809+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@21bd20ee] under local_time; prior registration was null
2023-01-21T13:48:20.809+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26c47874] under local_datetime; prior registration was null
2023-01-21T13:48:20.809+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@421056e5] under offset_datetime; prior registration was null
2023-01-21T13:48:20.809+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-21T13:48:20.809+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-21T13:48:20.809+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-21T13:48:20.809+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-21T13:48:20.809+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2849434b] under instant; prior registration was null
2023-01-21T13:48:20.809+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-21T13:48:20.810+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@476fe690] under sql; prior registration was null
2023-01-21T13:48:20.810+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-21T13:48:20.811+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-21T13:48:20.811+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-21T13:48:20.811+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-21T13:48:20.811+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e1d03d7
2023-01-21T13:48:20.811+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-21T13:48:20.812+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-21T13:48:20.812+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-21T13:48:20.813+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-21T13:48:20.813+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-21T13:48:20.814+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-21T13:48:20.814+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-21T13:48:20.814+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-21T13:48:20.815+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3c5dbdf8] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-21T13:48:20.816+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@352c44a8] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-21T13:48:20.816+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-21T13:48:20.816+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-21T13:48:20.816+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-21T13:48:20.817+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-21T13:48:20.817+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-21T13:48:20.817+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-21T13:48:20.817+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-21T13:48:20.817+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-21T13:48:20.818+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-21T13:48:20.818+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-21T13:48:20.818+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-21T13:48:20.818+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-21T13:48:20.818+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-21T13:48:20.819+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-21T13:48:20.819+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-21T13:48:20.819+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-21T13:48:20.819+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-21T13:48:20.819+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-21T13:48:20.819+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-21T13:48:20.820+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-21T13:48:20.820+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-21T13:48:20.820+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-21T13:48:20.820+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-21T13:48:20.820+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-21T13:48:20.820+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-21T13:48:20.820+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-21T13:48:20.820+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-21T13:48:20.820+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-21T13:48:20.820+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-21T13:48:20.820+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-21T13:48:20.821+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-21T13:48:20.821+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-21T13:48:20.821+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-21T13:48:20.821+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4a734c04
2023-01-21T13:48:20.821+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-21T13:48:20.821+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-21T13:48:20.822+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-21T13:48:20.822+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@a66e580] under trunc; prior registration was null
2023-01-21T13:48:20.822+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-21T13:48:20.822+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-21T13:48:20.822+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b852b49] under bitand; prior registration was null
2023-01-21T13:48:20.823+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cdb2d95] under bitor; prior registration was null
2023-01-21T13:48:20.823+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@122d6c22] under bitxor; prior registration was null
2023-01-21T13:48:20.824+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f5ac102] under bitnot; prior registration was null
2023-01-21T13:48:20.824+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-21T13:48:20.824+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-21T13:48:20.824+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-21T13:48:20.824+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-21T13:48:20.824+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-21T13:48:20.825+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-21T13:48:20.825+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-21T13:48:20.825+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-21T13:48:20.825+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-21T13:48:20.825+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-21T13:48:20.825+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-21T13:48:20.825+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-21T13:48:20.825+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-21T13:48:20.825+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5df778c3] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6d1dcdff
2023-01-21T13:48:20.825+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-21T13:48:20.826+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-21T13:48:20.826+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-21T13:48:20.826+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-21T13:48:20.826+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@21bd20ee
2023-01-21T13:48:20.826+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@26c47874
2023-01-21T13:48:20.826+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-21T13:48:20.826+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@895416d] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@48528634
2023-01-21T13:48:20.826+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71a06021] under chr; prior registration was null
2023-01-21T13:48:20.827+0200 DEBUG Registering alternate key : char -> chr
2023-01-21T13:48:20.827+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@80bfdc6] under sysdate; prior registration was null
2023-01-21T13:48:20.827+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-21T13:48:20.828+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-21T13:48:20.828+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-21T13:48:20.829+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-21T13:48:20.829+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-21T13:48:20.829+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-21T13:48:20.831+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5f7989fa] under rank; prior registration was null
2023-01-21T13:48:20.831+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5bc28f40] under dense_rank; prior registration was null
2023-01-21T13:48:20.832+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@46963479] under percent_rank; prior registration was null
2023-01-21T13:48:20.832+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7e74a380] under cume_dist; prior registration was null
2023-01-21T13:48:20.833+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@e57e5d6] under listagg; prior registration was null
2023-01-21T13:48:20.846+0200 DEBUG abs(NUMERIC arg)
2023-01-21T13:48:20.847+0200 DEBUG Double acos(NUMERIC arg)
2023-01-21T13:48:20.847+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-21T13:48:20.847+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-21T13:48:20.847+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-21T13:48:20.848+0200 DEBUG Integer ascii(STRING arg)
2023-01-21T13:48:20.848+0200 DEBUG Double asin(NUMERIC arg)
2023-01-21T13:48:20.848+0200 DEBUG Double atan(NUMERIC arg)
2023-01-21T13:48:20.857+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-21T13:48:20.857+0200 DEBUG Double avg(NUMERIC arg)
2023-01-21T13:48:20.857+0200 DEBUG bit_and(arg)
2023-01-21T13:48:20.857+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-21T13:48:20.858+0200 DEBUG bit_or(arg)
2023-01-21T13:48:20.858+0200 DEBUG bitand(arg0, arg1)
2023-01-21T13:48:20.858+0200 DEBUG bitnot(arg)
2023-01-21T13:48:20.858+0200 DEBUG bitor(arg0, arg1)
2023-01-21T13:48:20.858+0200 DEBUG bitxor(arg0, arg1)
2023-01-21T13:48:20.858+0200 DEBUG cast(arg as Type)
2023-01-21T13:48:20.858+0200 DEBUG ceiling(NUMERIC arg)
2023-01-21T13:48:20.858+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-21T13:48:20.859+0200 DEBUG Character chr(INTEGER arg)
2023-01-21T13:48:20.859+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-21T13:48:20.859+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-21T13:48:20.859+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-21T13:48:20.859+0200 DEBUG Double cos(NUMERIC arg)
2023-01-21T13:48:20.859+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-21T13:48:20.859+0200 DEBUG Double cot(NUMERIC arg)
2023-01-21T13:48:20.860+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-21T13:48:20.860+0200 DEBUG Integer crc32(arg)
2023-01-21T13:48:20.860+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-21T13:48:20.860+0200 DEBUG Date curdate()
2023-01-21T13:48:20.861+0200 DEBUG Date current_date
2023-01-21T13:48:20.861+0200 DEBUG Time current_time
2023-01-21T13:48:20.862+0200 DEBUG Timestamp current_timestamp
2023-01-21T13:48:20.862+0200 DEBUG Time curtime()
2023-01-21T13:48:20.862+0200 DEBUG Date date(arg)
2023-01-21T13:48:20.862+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-21T13:48:20.862+0200 DEBUG Integer day(DATE arg)
2023-01-21T13:48:20.862+0200 DEBUG String dayname(DATE arg)
2023-01-21T13:48:20.862+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-21T13:48:20.862+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-21T13:48:20.862+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-21T13:48:20.862+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-21T13:48:20.863+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-21T13:48:20.863+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-21T13:48:20.863+0200 DEBUG Double exp(NUMERIC arg)
2023-01-21T13:48:20.863+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-21T13:48:20.863+0200 DEBUG first_valueANY value
2023-01-21T13:48:20.863+0200 DEBUG floor(NUMERIC arg)
2023-01-21T13:48:20.864+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-21T13:48:20.864+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-21T13:48:20.864+0200 DEBUG Integer hour(TIME arg)
2023-01-21T13:48:20.864+0200 DEBUG ifnull(arg0, arg1)
2023-01-21T13:48:20.864+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-21T13:48:20.864+0200 DEBUG Instant instant
2023-01-21T13:48:20.865+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-21T13:48:20.865+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-21T13:48:20.865+0200 DEBUG Date last_day(DATE arg)
2023-01-21T13:48:20.865+0200 DEBUG last_valueANY value
2023-01-21T13:48:20.865+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-21T13:48:20.865+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-21T13:48:20.866+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-21T13:48:20.866+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-21T13:48:20.866+0200 DEBUG Double ln(NUMERIC arg)
2023-01-21T13:48:20.866+0200 DEBUG LocalDate local_date
2023-01-21T13:48:20.866+0200 DEBUG LocalDateTime local_datetime
2023-01-21T13:48:20.866+0200 DEBUG LocalTime local_time
2023-01-21T13:48:20.866+0200 DEBUG Timestamp localtime
2023-01-21T13:48:20.866+0200 DEBUG Timestamp localtimestamp
2023-01-21T13:48:20.866+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-21T13:48:20.866+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-21T13:48:20.867+0200 DEBUG Double log10(NUMERIC arg)
2023-01-21T13:48:20.867+0200 DEBUG Double log2(NUMERIC arg)
2023-01-21T13:48:20.867+0200 DEBUG String lower(STRING string)
2023-01-21T13:48:20.867+0200 DEBUG String lpad(string, length[, padding])
2023-01-21T13:48:20.867+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-21T13:48:20.867+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-21T13:48:20.867+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-21T13:48:20.867+0200 DEBUG max(COMPARABLE arg)
2023-01-21T13:48:20.867+0200 DEBUG String md5(arg)
2023-01-21T13:48:20.867+0200 DEBUG Integer microsecond(TIME arg)
2023-01-21T13:48:20.867+0200 DEBUG min(COMPARABLE arg)
2023-01-21T13:48:20.867+0200 DEBUG Integer minute(TIME arg)
2023-01-21T13:48:20.868+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-21T13:48:20.868+0200 DEBUG Integer month(DATE arg)
2023-01-21T13:48:20.868+0200 DEBUG String monthname(DATE arg)
2023-01-21T13:48:20.868+0200 DEBUG Timestamp now()
2023-01-21T13:48:20.868+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-21T13:48:20.868+0200 DEBUG nullif(arg0, arg1)
2023-01-21T13:48:20.868+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-21T13:48:20.868+0200 DEBUG OffsetDateTime offset_datetime
2023-01-21T13:48:20.868+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-21T13:48:20.868+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-21T13:48:20.868+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-21T13:48:20.868+0200 DEBUG Double pi
2023-01-21T13:48:20.868+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-21T13:48:20.868+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-21T13:48:20.868+0200 DEBUG Integer quarter(DATE arg)
2023-01-21T13:48:20.868+0200 DEBUG Double radians(NUMERIC arg)
2023-01-21T13:48:20.869+0200 DEBUG Double rand([INTEGER seed])
2023-01-21T13:48:20.869+0200 DEBUG Long rank([arg0[, ...]])
2023-01-21T13:48:20.869+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-21T13:48:20.869+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-21T13:48:20.869+0200 DEBUG String reverse(STRING arg)
2023-01-21T13:48:20.869+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-21T13:48:20.869+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-21T13:48:20.869+0200 DEBUG Long row_number()
2023-01-21T13:48:20.869+0200 DEBUG String rpad(string, length[, padding])
2023-01-21T13:48:20.869+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-21T13:48:20.869+0200 DEBUG Integer second(TIME arg)
2023-01-21T13:48:20.869+0200 DEBUG String sha(arg)
2023-01-21T13:48:20.869+0200 DEBUG String sha1(arg)
2023-01-21T13:48:20.869+0200 DEBUG String sha2(arg0, arg1)
2023-01-21T13:48:20.870+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-21T13:48:20.870+0200 DEBUG Double sin(NUMERIC arg)
2023-01-21T13:48:20.870+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-21T13:48:20.870+0200 DEBUG String soundex(arg)
2023-01-21T13:48:20.870+0200 DEBUG String space(INTEGER arg)
2023-01-21T13:48:20.870+0200 DEBUG Object sql
2023-01-21T13:48:20.870+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-21T13:48:20.870+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-21T13:48:20.871+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-21T13:48:20.871+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-21T13:48:20.871+0200 DEBUG String str(arg)
2023-01-21T13:48:20.871+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-21T13:48:20.871+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-21T13:48:20.871+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-21T13:48:20.871+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-21T13:48:20.871+0200 DEBUG sum(arg)
2023-01-21T13:48:20.871+0200 DEBUG Timestamp sysdate()
2023-01-21T13:48:20.872+0200 DEBUG Double tan(NUMERIC arg)
2023-01-21T13:48:20.872+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-21T13:48:20.872+0200 DEBUG String time(arg)
2023-01-21T13:48:20.872+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-21T13:48:20.872+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-21T13:48:20.872+0200 DEBUG basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-21T13:48:20.873+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-21T13:48:20.873+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-21T13:48:20.874+0200 DEBUG String upper(STRING string)
2023-01-21T13:48:20.874+0200 DEBUG Date utc_date
2023-01-21T13:48:20.874+0200 DEBUG Time utc_time
2023-01-21T13:48:20.874+0200 DEBUG Timestamp utc_timestamp
2023-01-21T13:48:20.874+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-21T13:48:20.874+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-21T13:48:20.874+0200 DEBUG Double variance(NUMERIC arg)
2023-01-21T13:48:20.874+0200 DEBUG Integer week(DATE arg)
2023-01-21T13:48:20.874+0200 DEBUG Integer year(DATE arg)
2023-01-21T13:48:20.875+0200 DEBUG Character char(INTEGER arg)
2023-01-21T13:48:20.876+0200 DEBUG Date current date
2023-01-21T13:48:20.876+0200 DEBUG Time current time
2023-01-21T13:48:20.876+0200 DEBUG Timestamp current timestamp
2023-01-21T13:48:20.876+0200 DEBUG Instant current_instant
2023-01-21T13:48:20.876+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-21T13:48:20.876+0200 DEBUG Integer day(DATE arg)
2023-01-21T13:48:20.876+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-21T13:48:20.877+0200 DEBUG LocalDate local date
2023-01-21T13:48:20.877+0200 DEBUG LocalDateTime local datetime
2023-01-21T13:48:20.877+0200 DEBUG LocalTime local time
2023-01-21T13:48:20.877+0200 DEBUG OffsetDateTime offset datetime
2023-01-21T13:48:20.877+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-21T13:48:20.879+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@49faf066]
2023-01-21T13:48:21.169+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T13:48:21.169+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T13:48:21.496+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:17)
2023-01-21T13:48:21.553+0200 DEBUG Starting post-init callbacks
2023-01-21T13:48:21.553+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-21T13:48:21.628+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-21T13:48:21.628+0200 DEBUG  Version select: select id from users where id =?
2023-01-21T13:48:21.629+0200 DEBUG  Insert (0): insert into users (password,user_name) values (?,?)
2023-01-21T13:48:21.629+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-21T13:48:21.629+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-21T13:48:21.644+0200 DEBUG Created new SQL alias : u1_0
2023-01-21T13:48:21.649+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users]
2023-01-21T13:48:21.675+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-21T13:48:21.680+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-21T13:48:21.753+0200 DEBUG Checking 0 named HQL queries
2023-01-21T13:48:21.753+0200 DEBUG Checking 0 named SQL queries
2023-01-21T13:48:21.859+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4f116ca2] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-21T13:48:21.950+0200 DEBUG 
    alter table users 
       modify column password  varchar(255)
2023-01-21T13:48:26.369+0200 DEBUG 
    alter table users 
       modify column user_name  varchar(255)
2023-01-21T13:48:30.650+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-21T13:48:30.650+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-21T13:48:30.663+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@35650279
2023-01-21T13:48:30.665+0200 DEBUG Registering SessionFactory: b60395e3-70dd-4dd0-bbfa-1fde11bc7eb5 (<unnamed>)
2023-01-21T13:48:30.665+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-21T13:48:30.728+0200 DEBUG Statistics initialized [enabled=false]
2023-01-21T13:48:30.734+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-21T13:48:30.734+0200 DEBUG begin
2023-01-21T13:48:30.758+0200 DEBUG Executing identity-insert immediately
2023-01-21T13:48:30.773+0200 DEBUG 
    insert 
    into
        users
        (password,user_name) 
    values
        (?,?)
2023-01-21T13:48:30.796+0200 DEBUG Unable to release JDBC result set [Cannot invoke "java.sql.ResultSet.close()" because "resultSet" is null]
2023-01-21T13:48:30.796+0200 DEBUG HHH000387: ResultSet's statement was not registered
2023-01-21T13:48:30.802+0200 DEBUG Exception clearing maxRows/queryTimeout [No operations allowed after statement closed.]
2023-01-21T13:52:37.948+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T13:52:37.982+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-21T13:52:37.998+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T13:52:38.047+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-21T13:52:38.052+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-21T13:52:38.054+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-21T13:52:38.448+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-21T13:52:38.461+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T13:52:38.888+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-21T13:52:38.896+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T13:52:38.897+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T13:52:38.899+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T13:52:38.899+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T13:52:38.900+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T13:52:38.902+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T13:52:38.903+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T13:52:38.906+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T13:52:38.907+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T13:52:38.908+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T13:52:38.909+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T13:52:38.911+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T13:52:38.921+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-21T13:52:38.923+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T13:52:39.197+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-21T13:52:39.197+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-21T13:52:39.197+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-21T13:52:39.198+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-21T13:52:39.198+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-21T13:52:39.198+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-21T13:52:39.198+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-21T13:52:39.199+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-21T13:52:39.199+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-21T13:52:39.199+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-21T13:52:39.199+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-21T13:52:39.199+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-21T13:52:39.200+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-21T13:52:39.200+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-21T13:52:39.200+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-21T13:52:39.200+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-21T13:52:39.200+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-21T13:52:39.201+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-21T13:52:39.201+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-21T13:52:39.201+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-21T13:52:39.201+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-21T13:52:39.201+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-21T13:52:39.202+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-21T13:52:39.202+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-21T13:52:39.202+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-21T13:52:39.203+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-21T13:52:39.203+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-21T13:52:39.203+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-21T13:52:39.203+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-21T13:52:39.204+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-21T13:52:39.204+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-21T13:52:39.204+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-21T13:52:39.204+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-21T13:52:39.205+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-21T13:52:39.205+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-21T13:52:39.205+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-21T13:52:39.205+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-21T13:52:39.205+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-21T13:52:39.205+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-21T13:52:39.206+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-21T13:52:39.206+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-21T13:52:39.206+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-21T13:52:39.206+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-21T13:52:39.206+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-21T13:52:39.207+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-21T13:52:39.207+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-21T13:52:39.207+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-21T13:52:39.207+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-21T13:52:39.207+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-21T13:52:39.207+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-21T13:52:39.208+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-21T13:52:39.208+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-21T13:52:39.208+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-21T13:52:39.208+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-21T13:52:39.208+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-21T13:52:39.208+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-21T13:52:39.209+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-21T13:52:39.209+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-21T13:52:39.209+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-21T13:52:39.209+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-21T13:52:39.209+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-21T13:52:39.209+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-21T13:52:39.209+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-21T13:52:39.210+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-21T13:52:39.210+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-21T13:52:39.210+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-21T13:52:39.210+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-21T13:52:39.210+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-21T13:52:39.210+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-21T13:52:39.211+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-21T13:52:39.211+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-21T13:52:39.211+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-21T13:52:39.211+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-21T13:52:39.211+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-21T13:52:39.212+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-21T13:52:39.212+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-21T13:52:39.212+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-21T13:52:39.212+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-21T13:52:39.212+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-21T13:52:39.212+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-21T13:52:39.212+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-21T13:52:39.213+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-21T13:52:39.213+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-21T13:52:39.213+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-21T13:52:39.213+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-21T13:52:39.213+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-21T13:52:39.213+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-21T13:52:39.214+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-21T13:52:39.214+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-21T13:52:39.214+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-21T13:52:39.214+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-21T13:52:39.214+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-21T13:52:39.214+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-21T13:52:39.215+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-21T13:52:39.215+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-21T13:52:39.215+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-21T13:52:39.215+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-21T13:52:39.215+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-21T13:52:39.216+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-21T13:52:39.216+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-21T13:52:39.216+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-21T13:52:39.216+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-21T13:52:39.216+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-21T13:52:39.216+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-21T13:52:39.216+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-21T13:52:39.217+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-21T13:52:39.217+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-21T13:52:39.217+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-21T13:52:39.217+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-21T13:52:39.217+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-21T13:52:39.218+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-21T13:52:39.218+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-21T13:52:39.218+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-21T13:52:39.218+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-21T13:52:39.218+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-21T13:52:39.218+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-21T13:52:39.219+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-21T13:52:39.219+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-21T13:52:39.219+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-21T13:52:39.219+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-21T13:52:39.219+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-21T13:52:39.227+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-21T13:52:39.228+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-21T13:52:39.229+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-21T13:52:39.230+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-21T13:52:39.230+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-21T13:52:39.230+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-21T13:52:39.230+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-21T13:52:39.231+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-21T13:52:39.231+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-21T13:52:39.231+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-21T13:52:39.231+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-21T13:52:39.278+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-21T13:52:39.287+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-21T13:52:39.287+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T13:52:39.287+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T13:52:39.287+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T13:52:39.291+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T13:52:39.292+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-21T13:52:39.885+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T13:52:39.886+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T13:52:39.886+0200 DEBUG JDBC version : 4.2
2023-01-21T13:52:39.952+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T13:52:39.961+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T13:52:39.961+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T13:52:39.985+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-21T13:52:39.985+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-21T13:52:39.985+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-21T13:52:39.985+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-21T13:52:39.985+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-21T13:52:39.985+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-21T13:52:39.986+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-21T13:52:39.986+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-21T13:52:39.986+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-21T13:52:39.988+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-21T13:52:39.988+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-21T13:52:39.989+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-21T13:52:39.992+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-21T13:52:39.992+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-21T13:52:39.996+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-21T13:52:39.996+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-21T13:52:40.006+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-21T13:52:40.006+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-21T13:52:40.006+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-21T13:52:40.006+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-21T13:52:40.007+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-21T13:52:40.007+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-21T13:52:40.009+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-21T13:52:40.065+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T13:52:40.115+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T13:52:40.140+0200 DEBUG Import with entity name Users
2023-01-21T13:52:40.157+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T13:52:40.177+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-21T13:52:40.216+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-21T13:52:40.221+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T13:52:40.221+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T13:52:40.223+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T13:52:40.227+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T13:52:40.235+0200 DEBUG building BasicValue for id
2023-01-21T13:52:40.241+0200 DEBUG Skipping column re-registration: users.id
2023-01-21T13:52:40.241+0200 DEBUG Building property id
2023-01-21T13:52:40.245+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
2023-01-21T13:52:40.246+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-21T13:52:40.246+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T13:52:40.247+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T13:52:40.247+0200 DEBUG building BasicValue for password
2023-01-21T13:52:40.247+0200 DEBUG Skipping column re-registration: users.password
2023-01-21T13:52:40.247+0200 DEBUG Building property password
2023-01-21T13:52:40.247+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-21T13:52:40.248+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T13:52:40.248+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T13:52:40.248+0200 DEBUG building BasicValue for userName
2023-01-21T13:52:40.248+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-21T13:52:40.248+0200 DEBUG Building property userName
2023-01-21T13:52:40.257+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-21T13:52:40.258+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-21T13:52:40.260+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-21T13:52:40.263+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T13:52:40.354+0200 DEBUG Building session factory
2023-01-21T13:52:40.467+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-21T13:52:40.479+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T13:52:40.480+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1dd7796b, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-21T13:52:40.487+0200 DEBUG Instantiated session factory
2023-01-21T13:52:40.507+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-21T13:52:40.676+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-21T13:52:40.677+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-21T13:52:40.679+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-21T13:52:40.680+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-21T13:52:40.682+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5b9396d3] under count; prior registration was null
2023-01-21T13:52:40.683+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5ef6fd7f] under every; prior registration was null
2023-01-21T13:52:40.684+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5633ed82] under any; prior registration was null
2023-01-21T13:52:40.685+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-21T13:52:40.685+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-21T13:52:40.685+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-21T13:52:40.685+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-21T13:52:40.686+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-21T13:52:40.686+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-21T13:52:40.686+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-21T13:52:40.686+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-21T13:52:40.686+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-21T13:52:40.687+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-21T13:52:40.687+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-21T13:52:40.688+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-21T13:52:40.688+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-21T13:52:40.688+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-21T13:52:40.688+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-21T13:52:40.688+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-21T13:52:40.688+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-21T13:52:40.691+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3374b5bc] under sinh; prior registration was null
2023-01-21T13:52:40.692+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2af69643] under cosh; prior registration was null
2023-01-21T13:52:40.692+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@587a1cfb] under tanh; prior registration was null
2023-01-21T13:52:40.692+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@48528634] under pi; prior registration was null
2023-01-21T13:52:40.692+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e1d03d7] under log; prior registration was null
2023-01-21T13:52:40.693+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-21T13:52:40.694+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-21T13:52:40.694+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-21T13:52:40.694+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-21T13:52:40.694+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-21T13:52:40.695+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-21T13:52:40.696+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-21T13:52:40.696+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-21T13:52:40.696+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-21T13:52:40.696+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-21T13:52:40.697+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-21T13:52:40.697+0200 DEBUG Registering alternate key : length -> character_length
2023-01-21T13:52:40.698+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4a734c04] under position; prior registration was null
2023-01-21T13:52:40.699+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@658255aa] under overlay; prior registration was null
2023-01-21T13:52:40.701+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3d904e9c] under trim; prior registration was null
2023-01-21T13:52:40.702+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7f353d99] under cast; prior registration was null
2023-01-21T13:52:40.702+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4649d70a] under collate; prior registration was null
2023-01-21T13:52:40.704+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@66273da0] under extract; prior registration was null
2023-01-21T13:52:40.704+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-21T13:52:40.704+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-21T13:52:40.705+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@51c959a4] under ifnull; prior registration was null
2023-01-21T13:52:40.705+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-21T13:52:40.705+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-21T13:52:40.706+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@60f70249] under pad; prior registration was null
2023-01-21T13:52:40.707+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@46c269e0] under str; prior registration was null
2023-01-21T13:52:40.709+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6d1dcdff] under format; prior registration was null
2023-01-21T13:52:40.710+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@252dc8c4] under timestampadd; prior registration was null
2023-01-21T13:52:40.711+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@d109c4f] under timestampdiff; prior registration was null
2023-01-21T13:52:40.713+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-21T13:52:40.714+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-21T13:52:40.715+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@9596ce8] under current_date; prior registration was null
2023-01-21T13:52:40.716+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@75ae4a1f] under current_time; prior registration was null
2023-01-21T13:52:40.716+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@70228253] under current_timestamp; prior registration was null
2023-01-21T13:52:40.716+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-21T13:52:40.716+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-21T13:52:40.716+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-21T13:52:40.717+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@63c12e52] under local_date; prior registration was null
2023-01-21T13:52:40.717+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@21bd20ee] under local_time; prior registration was null
2023-01-21T13:52:40.717+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@26c47874] under local_datetime; prior registration was null
2023-01-21T13:52:40.717+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@421056e5] under offset_datetime; prior registration was null
2023-01-21T13:52:40.717+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-21T13:52:40.717+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-21T13:52:40.717+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-21T13:52:40.718+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-21T13:52:40.718+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2849434b] under instant; prior registration was null
2023-01-21T13:52:40.718+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-21T13:52:40.719+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@476fe690] under sql; prior registration was null
2023-01-21T13:52:40.719+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-21T13:52:40.719+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-21T13:52:40.719+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-21T13:52:40.719+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-21T13:52:40.720+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e1d03d7
2023-01-21T13:52:40.720+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-21T13:52:40.720+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-21T13:52:40.720+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-21T13:52:40.720+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-21T13:52:40.720+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-21T13:52:40.721+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-21T13:52:40.721+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-21T13:52:40.722+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-21T13:52:40.723+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@3c5dbdf8] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-21T13:52:40.723+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@352c44a8] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-21T13:52:40.723+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-21T13:52:40.723+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-21T13:52:40.724+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-21T13:52:40.724+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-21T13:52:40.724+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-21T13:52:40.724+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-21T13:52:40.724+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-21T13:52:40.724+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-21T13:52:40.724+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-21T13:52:40.725+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-21T13:52:40.725+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-21T13:52:40.725+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-21T13:52:40.725+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-21T13:52:40.725+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-21T13:52:40.725+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-21T13:52:40.725+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-21T13:52:40.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-21T13:52:40.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-21T13:52:40.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-21T13:52:40.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-21T13:52:40.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-21T13:52:40.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-21T13:52:40.727+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-21T13:52:40.727+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-21T13:52:40.727+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-21T13:52:40.727+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-21T13:52:40.727+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-21T13:52:40.727+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-21T13:52:40.727+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-21T13:52:40.728+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-21T13:52:40.728+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-21T13:52:40.728+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-21T13:52:40.728+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-21T13:52:40.728+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4a734c04
2023-01-21T13:52:40.728+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-21T13:52:40.728+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-21T13:52:40.728+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-21T13:52:40.728+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@a66e580] under trunc; prior registration was null
2023-01-21T13:52:40.729+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-21T13:52:40.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-21T13:52:40.729+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b852b49] under bitand; prior registration was null
2023-01-21T13:52:40.729+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cdb2d95] under bitor; prior registration was null
2023-01-21T13:52:40.729+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@122d6c22] under bitxor; prior registration was null
2023-01-21T13:52:40.729+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f5ac102] under bitnot; prior registration was null
2023-01-21T13:52:40.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-21T13:52:40.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-21T13:52:40.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-21T13:52:40.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-21T13:52:40.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-21T13:52:40.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-21T13:52:40.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-21T13:52:40.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-21T13:52:40.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-21T13:52:40.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-21T13:52:40.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-21T13:52:40.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-21T13:52:40.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-21T13:52:40.730+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5df778c3] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6d1dcdff
2023-01-21T13:52:40.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-21T13:52:40.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-21T13:52:40.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-21T13:52:40.731+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-21T13:52:40.731+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@21bd20ee
2023-01-21T13:52:40.731+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@26c47874
2023-01-21T13:52:40.731+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-21T13:52:40.731+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@895416d] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@48528634
2023-01-21T13:52:40.731+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71a06021] under chr; prior registration was null
2023-01-21T13:52:40.731+0200 DEBUG Registering alternate key : char -> chr
2023-01-21T13:52:40.732+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@80bfdc6] under sysdate; prior registration was null
2023-01-21T13:52:40.732+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-21T13:52:40.737+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-21T13:52:40.737+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-21T13:52:40.737+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-21T13:52:40.738+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-21T13:52:40.738+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-21T13:52:40.742+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5f7989fa] under rank; prior registration was null
2023-01-21T13:52:40.747+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5bc28f40] under dense_rank; prior registration was null
2023-01-21T13:52:40.747+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@46963479] under percent_rank; prior registration was null
2023-01-21T13:52:40.747+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7e74a380] under cume_dist; prior registration was null
2023-01-21T13:52:40.748+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@e57e5d6] under listagg; prior registration was null
2023-01-21T13:52:40.757+0200 DEBUG abs(NUMERIC arg)
2023-01-21T13:52:40.758+0200 DEBUG Double acos(NUMERIC arg)
2023-01-21T13:52:40.758+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-21T13:52:40.758+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-21T13:52:40.758+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-21T13:52:40.759+0200 DEBUG Integer ascii(STRING arg)
2023-01-21T13:52:40.759+0200 DEBUG Double asin(NUMERIC arg)
2023-01-21T13:52:40.759+0200 DEBUG Double atan(NUMERIC arg)
2023-01-21T13:52:40.762+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-21T13:52:40.763+0200 DEBUG Double avg(NUMERIC arg)
2023-01-21T13:52:40.763+0200 DEBUG bit_and(arg)
2023-01-21T13:52:40.763+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-21T13:52:40.763+0200 DEBUG bit_or(arg)
2023-01-21T13:52:40.763+0200 DEBUG bitand(arg0, arg1)
2023-01-21T13:52:40.763+0200 DEBUG bitnot(arg)
2023-01-21T13:52:40.763+0200 DEBUG bitor(arg0, arg1)
2023-01-21T13:52:40.763+0200 DEBUG bitxor(arg0, arg1)
2023-01-21T13:52:40.763+0200 DEBUG cast(arg as Type)
2023-01-21T13:52:40.763+0200 DEBUG ceiling(NUMERIC arg)
2023-01-21T13:52:40.763+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-21T13:52:40.763+0200 DEBUG Character chr(INTEGER arg)
2023-01-21T13:52:40.763+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-21T13:52:40.763+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-21T13:52:40.763+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-21T13:52:40.763+0200 DEBUG Double cos(NUMERIC arg)
2023-01-21T13:52:40.763+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-21T13:52:40.764+0200 DEBUG Double cot(NUMERIC arg)
2023-01-21T13:52:40.764+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-21T13:52:40.764+0200 DEBUG Integer crc32(arg)
2023-01-21T13:52:40.764+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-21T13:52:40.764+0200 DEBUG Date curdate()
2023-01-21T13:52:40.764+0200 DEBUG Date current_date
2023-01-21T13:52:40.764+0200 DEBUG Time current_time
2023-01-21T13:52:40.764+0200 DEBUG Timestamp current_timestamp
2023-01-21T13:52:40.764+0200 DEBUG Time curtime()
2023-01-21T13:52:40.764+0200 DEBUG Date date(arg)
2023-01-21T13:52:40.764+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-21T13:52:40.765+0200 DEBUG Integer day(DATE arg)
2023-01-21T13:52:40.765+0200 DEBUG String dayname(DATE arg)
2023-01-21T13:52:40.765+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-21T13:52:40.765+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-21T13:52:40.765+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-21T13:52:40.765+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-21T13:52:40.765+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-21T13:52:40.765+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-21T13:52:40.765+0200 DEBUG Double exp(NUMERIC arg)
2023-01-21T13:52:40.765+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-21T13:52:40.766+0200 DEBUG first_valueANY value
2023-01-21T13:52:40.766+0200 DEBUG floor(NUMERIC arg)
2023-01-21T13:52:40.766+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-21T13:52:40.766+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-21T13:52:40.766+0200 DEBUG Integer hour(TIME arg)
2023-01-21T13:52:40.766+0200 DEBUG ifnull(arg0, arg1)
2023-01-21T13:52:40.766+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-21T13:52:40.766+0200 DEBUG Instant instant
2023-01-21T13:52:40.766+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-21T13:52:40.766+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-21T13:52:40.766+0200 DEBUG Date last_day(DATE arg)
2023-01-21T13:52:40.766+0200 DEBUG last_valueANY value
2023-01-21T13:52:40.767+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-21T13:52:40.767+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-21T13:52:40.767+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-21T13:52:40.767+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-21T13:52:40.767+0200 DEBUG Double ln(NUMERIC arg)
2023-01-21T13:52:40.767+0200 DEBUG LocalDate local_date
2023-01-21T13:52:40.767+0200 DEBUG LocalDateTime local_datetime
2023-01-21T13:52:40.767+0200 DEBUG LocalTime local_time
2023-01-21T13:52:40.767+0200 DEBUG Timestamp localtime
2023-01-21T13:52:40.767+0200 DEBUG Timestamp localtimestamp
2023-01-21T13:52:40.767+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-21T13:52:40.767+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-21T13:52:40.768+0200 DEBUG Double log10(NUMERIC arg)
2023-01-21T13:52:40.768+0200 DEBUG Double log2(NUMERIC arg)
2023-01-21T13:52:40.768+0200 DEBUG String lower(STRING string)
2023-01-21T13:52:40.768+0200 DEBUG String lpad(string, length[, padding])
2023-01-21T13:52:40.768+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-21T13:52:40.768+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-21T13:52:40.768+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-21T13:52:40.768+0200 DEBUG max(COMPARABLE arg)
2023-01-21T13:52:40.768+0200 DEBUG String md5(arg)
2023-01-21T13:52:40.768+0200 DEBUG Integer microsecond(TIME arg)
2023-01-21T13:52:40.769+0200 DEBUG min(COMPARABLE arg)
2023-01-21T13:52:40.769+0200 DEBUG Integer minute(TIME arg)
2023-01-21T13:52:40.769+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-21T13:52:40.769+0200 DEBUG Integer month(DATE arg)
2023-01-21T13:52:40.769+0200 DEBUG String monthname(DATE arg)
2023-01-21T13:52:40.769+0200 DEBUG Timestamp now()
2023-01-21T13:52:40.769+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-21T13:52:40.769+0200 DEBUG nullif(arg0, arg1)
2023-01-21T13:52:40.769+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-21T13:52:40.770+0200 DEBUG OffsetDateTime offset_datetime
2023-01-21T13:52:40.770+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-21T13:52:40.770+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-21T13:52:40.770+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-21T13:52:40.770+0200 DEBUG Double pi
2023-01-21T13:52:40.770+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-21T13:52:40.771+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-21T13:52:40.771+0200 DEBUG Integer quarter(DATE arg)
2023-01-21T13:52:40.771+0200 DEBUG Double radians(NUMERIC arg)
2023-01-21T13:52:40.771+0200 DEBUG Double rand([INTEGER seed])
2023-01-21T13:52:40.771+0200 DEBUG Long rank([arg0[, ...]])
2023-01-21T13:52:40.771+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-21T13:52:40.771+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-21T13:52:40.771+0200 DEBUG String reverse(STRING arg)
2023-01-21T13:52:40.771+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-21T13:52:40.771+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-21T13:52:40.772+0200 DEBUG Long row_number()
2023-01-21T13:52:40.772+0200 DEBUG String rpad(string, length[, padding])
2023-01-21T13:52:40.772+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-21T13:52:40.772+0200 DEBUG Integer second(TIME arg)
2023-01-21T13:52:40.772+0200 DEBUG String sha(arg)
2023-01-21T13:52:40.772+0200 DEBUG String sha1(arg)
2023-01-21T13:52:40.772+0200 DEBUG String sha2(arg0, arg1)
2023-01-21T13:52:40.772+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-21T13:52:40.772+0200 DEBUG Double sin(NUMERIC arg)
2023-01-21T13:52:40.773+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-21T13:52:40.773+0200 DEBUG String soundex(arg)
2023-01-21T13:52:40.773+0200 DEBUG String space(INTEGER arg)
2023-01-21T13:52:40.773+0200 DEBUG Object sql
2023-01-21T13:52:40.773+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-21T13:52:40.773+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-21T13:52:40.773+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-21T13:52:40.773+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-21T13:52:40.774+0200 DEBUG String str(arg)
2023-01-21T13:52:40.774+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-21T13:52:40.774+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-21T13:52:40.774+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-21T13:52:40.774+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-21T13:52:40.774+0200 DEBUG sum(arg)
2023-01-21T13:52:40.774+0200 DEBUG Timestamp sysdate()
2023-01-21T13:52:40.774+0200 DEBUG Double tan(NUMERIC arg)
2023-01-21T13:52:40.774+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-21T13:52:40.775+0200 DEBUG String time(arg)
2023-01-21T13:52:40.775+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-21T13:52:40.775+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-21T13:52:40.775+0200 DEBUG basicType@12(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-21T13:52:40.775+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-21T13:52:40.775+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-21T13:52:40.776+0200 DEBUG String upper(STRING string)
2023-01-21T13:52:40.776+0200 DEBUG Date utc_date
2023-01-21T13:52:40.776+0200 DEBUG Time utc_time
2023-01-21T13:52:40.776+0200 DEBUG Timestamp utc_timestamp
2023-01-21T13:52:40.776+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-21T13:52:40.776+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-21T13:52:40.776+0200 DEBUG Double variance(NUMERIC arg)
2023-01-21T13:52:40.776+0200 DEBUG Integer week(DATE arg)
2023-01-21T13:52:40.777+0200 DEBUG Integer year(DATE arg)
2023-01-21T13:52:40.778+0200 DEBUG Character char(INTEGER arg)
2023-01-21T13:52:40.778+0200 DEBUG Date current date
2023-01-21T13:52:40.778+0200 DEBUG Time current time
2023-01-21T13:52:40.778+0200 DEBUG Timestamp current timestamp
2023-01-21T13:52:40.778+0200 DEBUG Instant current_instant
2023-01-21T13:52:40.778+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-21T13:52:40.778+0200 DEBUG Integer day(DATE arg)
2023-01-21T13:52:40.779+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-21T13:52:40.779+0200 DEBUG LocalDate local date
2023-01-21T13:52:40.779+0200 DEBUG LocalDateTime local datetime
2023-01-21T13:52:40.779+0200 DEBUG LocalTime local time
2023-01-21T13:52:40.779+0200 DEBUG OffsetDateTime offset datetime
2023-01-21T13:52:40.779+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-21T13:52:40.786+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@49faf066]
2023-01-21T13:52:41.010+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T13:52:41.011+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T13:52:41.299+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:17)
2023-01-21T13:52:41.345+0200 DEBUG Starting post-init callbacks
2023-01-21T13:52:41.345+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-21T13:52:41.407+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-21T13:52:41.407+0200 DEBUG  Version select: select id from users where id =?
2023-01-21T13:52:41.408+0200 DEBUG  Insert (0): insert into users (password,user_name) values (?,?)
2023-01-21T13:52:41.408+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-21T13:52:41.408+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-21T13:52:41.420+0200 DEBUG Created new SQL alias : u1_0
2023-01-21T13:52:41.423+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users]
2023-01-21T13:52:41.439+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-21T13:52:41.442+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-21T13:52:41.478+0200 DEBUG Checking 0 named HQL queries
2023-01-21T13:52:41.479+0200 DEBUG Checking 0 named SQL queries
2023-01-21T13:52:41.507+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4f116ca2] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-21T13:52:41.692+0200 DEBUG No alter strings for table : users
2023-01-21T13:52:41.712+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-21T13:52:41.713+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-21T13:52:41.736+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7da635c0
2023-01-21T13:52:41.738+0200 DEBUG Registering SessionFactory: 8ef0814f-a54f-4fa8-97ae-d2536028a56e (<unnamed>)
2023-01-21T13:52:41.738+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-21T13:52:41.804+0200 DEBUG Statistics initialized [enabled=false]
2023-01-21T13:52:41.812+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-21T13:52:41.812+0200 DEBUG begin
2023-01-21T13:52:41.832+0200 DEBUG Executing identity-insert immediately
2023-01-21T13:52:41.851+0200 DEBUG 
    insert 
    into
        users
        (password,user_name) 
    values
        (?,?)
2023-01-21T13:52:41.867+0200 DEBUG Unable to release JDBC result set [Cannot invoke "java.sql.ResultSet.close()" because "resultSet" is null]
2023-01-21T13:52:41.867+0200 DEBUG HHH000387: ResultSet's statement was not registered
2023-01-21T13:52:41.871+0200 DEBUG Exception clearing maxRows/queryTimeout [No operations allowed after statement closed.]
2023-01-21T13:52:41.874+0200 DEBUG JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:323)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:434)
	at org.hibernate.internal.ExceptionConverterImpl.rollbackIfNecessary(ExceptionConverterImpl.java:259)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:162)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:168)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:755)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:733)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:25)
2023-01-21T13:54:09.067+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-21T13:54:09.097+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-21T13:54:09.108+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-21T13:54:09.154+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-21T13:54:09.158+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-21T13:54:09.161+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-21T13:54:09.538+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-21T13:54:09.555+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-21T13:54:10.000+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-21T13:54:10.008+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-21T13:54:10.009+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-21T13:54:10.010+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T13:54:10.011+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-21T13:54:10.011+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-21T13:54:10.013+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-21T13:54:10.014+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-21T13:54:10.016+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T13:54:10.017+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-21T13:54:10.018+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-21T13:54:10.018+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-21T13:54:10.020+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-21T13:54:10.029+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-21T13:54:10.032+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-21T13:54:10.337+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-21T13:54:10.337+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-21T13:54:10.338+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-21T13:54:10.338+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-21T13:54:10.338+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-21T13:54:10.338+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-21T13:54:10.339+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-21T13:54:10.339+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-21T13:54:10.339+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-21T13:54:10.339+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-21T13:54:10.339+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-21T13:54:10.340+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-21T13:54:10.340+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-21T13:54:10.340+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-21T13:54:10.340+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-21T13:54:10.340+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-21T13:54:10.341+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-21T13:54:10.341+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-21T13:54:10.341+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-21T13:54:10.341+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-21T13:54:10.341+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-21T13:54:10.341+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-21T13:54:10.342+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-21T13:54:10.342+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-21T13:54:10.342+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-21T13:54:10.342+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-21T13:54:10.342+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-21T13:54:10.342+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-21T13:54:10.343+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-21T13:54:10.343+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-21T13:54:10.343+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-21T13:54:10.343+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-21T13:54:10.343+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-21T13:54:10.344+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-21T13:54:10.344+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-21T13:54:10.344+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-21T13:54:10.344+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-21T13:54:10.344+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-21T13:54:10.344+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-21T13:54:10.345+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-21T13:54:10.345+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-21T13:54:10.345+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-21T13:54:10.345+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-21T13:54:10.345+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-21T13:54:10.346+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-21T13:54:10.346+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-21T13:54:10.346+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-21T13:54:10.346+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-21T13:54:10.346+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-21T13:54:10.346+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-21T13:54:10.347+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-21T13:54:10.347+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-21T13:54:10.347+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-21T13:54:10.347+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-21T13:54:10.347+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-21T13:54:10.347+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-21T13:54:10.348+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-21T13:54:10.348+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-21T13:54:10.348+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-21T13:54:10.348+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-21T13:54:10.348+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-21T13:54:10.348+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-21T13:54:10.349+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-21T13:54:10.349+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-21T13:54:10.349+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-21T13:54:10.349+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-21T13:54:10.349+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-21T13:54:10.350+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-21T13:54:10.350+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-21T13:54:10.350+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-21T13:54:10.350+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-21T13:54:10.350+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-21T13:54:10.350+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-21T13:54:10.351+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-21T13:54:10.351+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-21T13:54:10.351+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-21T13:54:10.351+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-21T13:54:10.351+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-21T13:54:10.352+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-21T13:54:10.352+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-21T13:54:10.352+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-21T13:54:10.352+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-21T13:54:10.352+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-21T13:54:10.352+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-21T13:54:10.353+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-21T13:54:10.353+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-21T13:54:10.353+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-21T13:54:10.353+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-21T13:54:10.353+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-21T13:54:10.353+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-21T13:54:10.353+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-21T13:54:10.354+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-21T13:54:10.354+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-21T13:54:10.354+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-21T13:54:10.354+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-21T13:54:10.354+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-21T13:54:10.354+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-21T13:54:10.355+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-21T13:54:10.355+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-21T13:54:10.355+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-21T13:54:10.355+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-21T13:54:10.355+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-21T13:54:10.355+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-21T13:54:10.356+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-21T13:54:10.356+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-21T13:54:10.356+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-21T13:54:10.356+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-21T13:54:10.357+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-21T13:54:10.357+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-21T13:54:10.357+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-21T13:54:10.357+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-21T13:54:10.357+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-21T13:54:10.357+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-21T13:54:10.358+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-21T13:54:10.358+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-21T13:54:10.358+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-21T13:54:10.358+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-21T13:54:10.358+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-21T13:54:10.358+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-21T13:54:10.358+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-21T13:54:10.359+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-21T13:54:10.366+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-21T13:54:10.367+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-21T13:54:10.368+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-21T13:54:10.369+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-21T13:54:10.369+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-21T13:54:10.369+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-21T13:54:10.369+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-21T13:54:10.370+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-21T13:54:10.370+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-21T13:54:10.370+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-21T13:54:10.370+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-21T13:54:10.415+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-21T13:54:10.425+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-21T13:54:10.425+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T13:54:10.425+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-21T13:54:10.426+0200 INFO HHH10001003: Autocommit mode: false
2023-01-21T13:54:10.430+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-21T13:54:10.430+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-21T13:54:11.177+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-21T13:54:11.178+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-21T13:54:11.178+0200 DEBUG JDBC version : 4.2
2023-01-21T13:54:11.250+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-21T13:54:11.261+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-21T13:54:11.262+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-21T13:54:11.288+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-21T13:54:11.288+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-21T13:54:11.288+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-21T13:54:11.288+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-21T13:54:11.288+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-21T13:54:11.289+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-21T13:54:11.289+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-21T13:54:11.289+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-21T13:54:11.289+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-21T13:54:11.291+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-21T13:54:11.291+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-21T13:54:11.292+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-21T13:54:11.296+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-21T13:54:11.296+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-21T13:54:11.300+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-21T13:54:11.300+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-21T13:54:11.308+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-21T13:54:11.309+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-21T13:54:11.309+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-21T13:54:11.309+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-21T13:54:11.309+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-21T13:54:11.309+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-21T13:54:11.312+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-21T13:54:11.374+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-21T13:54:11.429+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-21T13:54:11.454+0200 DEBUG Import with entity name Users
2023-01-21T13:54:11.465+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-21T13:54:11.481+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-21T13:54:11.508+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-21T13:54:11.513+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T13:54:11.513+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T13:54:11.515+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-21T13:54:11.523+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-21T13:54:11.532+0200 DEBUG building BasicValue for id
2023-01-21T13:54:11.538+0200 DEBUG Skipping column re-registration: users.id
2023-01-21T13:54:11.539+0200 DEBUG Building property id
2023-01-21T13:54:11.544+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-21T13:54:11.545+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-21T13:54:11.546+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-21T13:54:11.546+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-21T13:54:11.546+0200 DEBUG building BasicValue for password
2023-01-21T13:54:11.546+0200 DEBUG Skipping column re-registration: users.password
2023-01-21T13:54:11.546+0200 DEBUG Building property password
2023-01-21T13:54:11.547+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-21T13:54:11.547+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-21T13:54:11.547+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-21T13:54:11.547+0200 DEBUG building BasicValue for userName
2023-01-21T13:54:11.548+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-21T13:54:11.548+0200 DEBUG Building property userName
2023-01-21T13:54:11.557+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-21T13:54:11.558+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-21T13:54:11.560+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-21T13:54:11.564+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-21T13:54:11.654+0200 DEBUG Building session factory
2023-01-21T13:54:11.824+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-21T13:54:11.833+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-21T13:54:11.834+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-21T13:54:11.851+0200 DEBUG Instantiated session factory
2023-01-21T13:54:11.887+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-21T13:54:12.017+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-21T13:54:12.018+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-21T13:54:12.020+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-21T13:54:12.020+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-21T13:54:12.022+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-21T13:54:12.024+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-21T13:54:12.025+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-21T13:54:12.025+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-21T13:54:12.026+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-21T13:54:12.026+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-21T13:54:12.026+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-21T13:54:12.026+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-21T13:54:12.026+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-21T13:54:12.026+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-21T13:54:12.026+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-21T13:54:12.027+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-21T13:54:12.027+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-21T13:54:12.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-21T13:54:12.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-21T13:54:12.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-21T13:54:12.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-21T13:54:12.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-21T13:54:12.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-21T13:54:12.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-21T13:54:12.031+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-21T13:54:12.031+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-21T13:54:12.031+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-21T13:54:12.032+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-21T13:54:12.032+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-21T13:54:12.033+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-21T13:54:12.033+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-21T13:54:12.033+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-21T13:54:12.033+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-21T13:54:12.034+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-21T13:54:12.034+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-21T13:54:12.035+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-21T13:54:12.035+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-21T13:54:12.035+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-21T13:54:12.035+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-21T13:54:12.035+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-21T13:54:12.036+0200 DEBUG Registering alternate key : length -> character_length
2023-01-21T13:54:12.037+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-21T13:54:12.038+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-21T13:54:12.039+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-21T13:54:12.040+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-21T13:54:12.040+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-21T13:54:12.042+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-21T13:54:12.042+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-21T13:54:12.042+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-21T13:54:12.043+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-21T13:54:12.043+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-21T13:54:12.043+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-21T13:54:12.044+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-21T13:54:12.045+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-21T13:54:12.047+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-21T13:54:12.048+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-21T13:54:12.050+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-21T13:54:12.050+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-21T13:54:12.051+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-21T13:54:12.051+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-21T13:54:12.052+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-21T13:54:12.052+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-21T13:54:12.052+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-21T13:54:12.052+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-21T13:54:12.052+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-21T13:54:12.053+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-21T13:54:12.054+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-21T13:54:12.055+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-21T13:54:12.055+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-21T13:54:12.055+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-21T13:54:12.055+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-21T13:54:12.055+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-21T13:54:12.056+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-21T13:54:12.056+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-21T13:54:12.056+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-21T13:54:12.057+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-21T13:54:12.057+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-21T13:54:12.057+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-21T13:54:12.057+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-21T13:54:12.058+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-21T13:54:12.058+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-21T13:54:12.058+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-21T13:54:12.058+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-21T13:54:12.058+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-21T13:54:12.058+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-21T13:54:12.059+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-21T13:54:12.059+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-21T13:54:12.059+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-21T13:54:12.059+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-21T13:54:12.060+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-21T13:54:12.060+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-21T13:54:12.061+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-21T13:54:12.061+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-21T13:54:12.061+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-21T13:54:12.061+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-21T13:54:12.061+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-21T13:54:12.062+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-21T13:54:12.062+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-21T13:54:12.063+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-21T13:54:12.063+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-21T13:54:12.063+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-21T13:54:12.063+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-21T13:54:12.063+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-21T13:54:12.063+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-21T13:54:12.064+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-21T13:54:12.064+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-21T13:54:12.064+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-21T13:54:12.064+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-21T13:54:12.065+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-21T13:54:12.066+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-21T13:54:12.066+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-21T13:54:12.066+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-21T13:54:12.066+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-21T13:54:12.067+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-21T13:54:12.067+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-21T13:54:12.067+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-21T13:54:12.067+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-21T13:54:12.067+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-21T13:54:12.068+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-21T13:54:12.068+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-21T13:54:12.068+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-21T13:54:12.068+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-21T13:54:12.068+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-21T13:54:12.068+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-21T13:54:12.069+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-21T13:54:12.069+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-21T13:54:12.069+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-21T13:54:12.070+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-21T13:54:12.070+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-21T13:54:12.070+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-21T13:54:12.070+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-21T13:54:12.070+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-21T13:54:12.071+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-21T13:54:12.071+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-21T13:54:12.071+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-21T13:54:12.071+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-21T13:54:12.071+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-21T13:54:12.071+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-21T13:54:12.072+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-21T13:54:12.072+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-21T13:54:12.072+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-21T13:54:12.072+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-21T13:54:12.072+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-21T13:54:12.073+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-21T13:54:12.073+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-21T13:54:12.073+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-21T13:54:12.073+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-21T13:54:12.073+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-21T13:54:12.073+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-21T13:54:12.073+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-21T13:54:12.074+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-21T13:54:12.074+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-21T13:54:12.074+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-21T13:54:12.074+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-21T13:54:12.074+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-21T13:54:12.074+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-21T13:54:12.076+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-21T13:54:12.078+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-21T13:54:12.079+0200 DEBUG Registering alternate key : char -> chr
2023-01-21T13:54:12.079+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-21T13:54:12.079+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-21T13:54:12.082+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-21T13:54:12.083+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-21T13:54:12.083+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-21T13:54:12.083+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-21T13:54:12.084+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-21T13:54:12.087+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-21T13:54:12.087+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-21T13:54:12.087+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-21T13:54:12.087+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-21T13:54:12.088+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-21T13:54:12.109+0200 DEBUG abs(NUMERIC arg)
2023-01-21T13:54:12.109+0200 DEBUG Double acos(NUMERIC arg)
2023-01-21T13:54:12.109+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-21T13:54:12.109+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-21T13:54:12.109+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-21T13:54:12.110+0200 DEBUG Integer ascii(STRING arg)
2023-01-21T13:54:12.110+0200 DEBUG Double asin(NUMERIC arg)
2023-01-21T13:54:12.110+0200 DEBUG Double atan(NUMERIC arg)
2023-01-21T13:54:12.182+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-21T13:54:12.183+0200 DEBUG Double avg(NUMERIC arg)
2023-01-21T13:54:12.183+0200 DEBUG bit_and(arg)
2023-01-21T13:54:12.183+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-21T13:54:12.185+0200 DEBUG bit_or(arg)
2023-01-21T13:54:12.185+0200 DEBUG bitand(arg0, arg1)
2023-01-21T13:54:12.185+0200 DEBUG bitnot(arg)
2023-01-21T13:54:12.185+0200 DEBUG bitor(arg0, arg1)
2023-01-21T13:54:12.185+0200 DEBUG bitxor(arg0, arg1)
2023-01-21T13:54:12.186+0200 DEBUG cast(arg as Type)
2023-01-21T13:54:12.186+0200 DEBUG ceiling(NUMERIC arg)
2023-01-21T13:54:12.186+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-21T13:54:12.186+0200 DEBUG Character chr(INTEGER arg)
2023-01-21T13:54:12.186+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-21T13:54:12.187+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-21T13:54:12.187+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-21T13:54:12.187+0200 DEBUG Double cos(NUMERIC arg)
2023-01-21T13:54:12.187+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-21T13:54:12.187+0200 DEBUG Double cot(NUMERIC arg)
2023-01-21T13:54:12.187+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-21T13:54:12.187+0200 DEBUG Integer crc32(arg)
2023-01-21T13:54:12.189+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-21T13:54:12.189+0200 DEBUG Date curdate()
2023-01-21T13:54:12.189+0200 DEBUG Date current_date
2023-01-21T13:54:12.190+0200 DEBUG Time current_time
2023-01-21T13:54:12.190+0200 DEBUG Timestamp current_timestamp
2023-01-21T13:54:12.190+0200 DEBUG Time curtime()
2023-01-21T13:54:12.190+0200 DEBUG Date date(arg)
2023-01-21T13:54:12.190+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-21T13:54:12.190+0200 DEBUG Integer day(DATE arg)
2023-01-21T13:54:12.190+0200 DEBUG String dayname(DATE arg)
2023-01-21T13:54:12.191+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-21T13:54:12.191+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-21T13:54:12.192+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-21T13:54:12.192+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-21T13:54:12.192+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-21T13:54:12.192+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-21T13:54:12.193+0200 DEBUG Double exp(NUMERIC arg)
2023-01-21T13:54:12.193+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-21T13:54:12.193+0200 DEBUG first_valueANY value
2023-01-21T13:54:12.193+0200 DEBUG floor(NUMERIC arg)
2023-01-21T13:54:12.194+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-21T13:54:12.194+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-21T13:54:12.194+0200 DEBUG Integer hour(TIME arg)
2023-01-21T13:54:12.194+0200 DEBUG ifnull(arg0, arg1)
2023-01-21T13:54:12.194+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-21T13:54:12.194+0200 DEBUG Instant instant
2023-01-21T13:54:12.195+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-21T13:54:12.195+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-21T13:54:12.202+0200 DEBUG Date last_day(DATE arg)
2023-01-21T13:54:12.202+0200 DEBUG last_valueANY value
2023-01-21T13:54:12.202+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-21T13:54:12.203+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-21T13:54:12.203+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-21T13:54:12.203+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-21T13:54:12.203+0200 DEBUG Double ln(NUMERIC arg)
2023-01-21T13:54:12.203+0200 DEBUG LocalDate local_date
2023-01-21T13:54:12.203+0200 DEBUG LocalDateTime local_datetime
2023-01-21T13:54:12.204+0200 DEBUG LocalTime local_time
2023-01-21T13:54:12.204+0200 DEBUG Timestamp localtime
2023-01-21T13:54:12.204+0200 DEBUG Timestamp localtimestamp
2023-01-21T13:54:12.204+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-21T13:54:12.204+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-21T13:54:12.204+0200 DEBUG Double log10(NUMERIC arg)
2023-01-21T13:54:12.205+0200 DEBUG Double log2(NUMERIC arg)
2023-01-21T13:54:12.205+0200 DEBUG String lower(STRING string)
2023-01-21T13:54:12.205+0200 DEBUG String lpad(string, length[, padding])
2023-01-21T13:54:12.205+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-21T13:54:12.206+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-21T13:54:12.206+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-21T13:54:12.206+0200 DEBUG max(COMPARABLE arg)
2023-01-21T13:54:12.206+0200 DEBUG String md5(arg)
2023-01-21T13:54:12.206+0200 DEBUG Integer microsecond(TIME arg)
2023-01-21T13:54:12.206+0200 DEBUG min(COMPARABLE arg)
2023-01-21T13:54:12.206+0200 DEBUG Integer minute(TIME arg)
2023-01-21T13:54:12.206+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-21T13:54:12.206+0200 DEBUG Integer month(DATE arg)
2023-01-21T13:54:12.206+0200 DEBUG String monthname(DATE arg)
2023-01-21T13:54:12.206+0200 DEBUG Timestamp now()
2023-01-21T13:54:12.207+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-21T13:54:12.207+0200 DEBUG nullif(arg0, arg1)
2023-01-21T13:54:12.207+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-21T13:54:12.207+0200 DEBUG OffsetDateTime offset_datetime
2023-01-21T13:54:12.207+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-21T13:54:12.207+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-21T13:54:12.207+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-21T13:54:12.207+0200 DEBUG Double pi
2023-01-21T13:54:12.207+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-21T13:54:12.207+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-21T13:54:12.207+0200 DEBUG Integer quarter(DATE arg)
2023-01-21T13:54:12.207+0200 DEBUG Double radians(NUMERIC arg)
2023-01-21T13:54:12.207+0200 DEBUG Double rand([INTEGER seed])
2023-01-21T13:54:12.207+0200 DEBUG Long rank([arg0[, ...]])
2023-01-21T13:54:12.207+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-21T13:54:12.208+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-21T13:54:12.208+0200 DEBUG String reverse(STRING arg)
2023-01-21T13:54:12.208+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-21T13:54:12.208+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-21T13:54:12.208+0200 DEBUG Long row_number()
2023-01-21T13:54:12.208+0200 DEBUG String rpad(string, length[, padding])
2023-01-21T13:54:12.208+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-21T13:54:12.208+0200 DEBUG Integer second(TIME arg)
2023-01-21T13:54:12.209+0200 DEBUG String sha(arg)
2023-01-21T13:54:12.209+0200 DEBUG String sha1(arg)
2023-01-21T13:54:12.209+0200 DEBUG String sha2(arg0, arg1)
2023-01-21T13:54:12.209+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-21T13:54:12.209+0200 DEBUG Double sin(NUMERIC arg)
2023-01-21T13:54:12.209+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-21T13:54:12.209+0200 DEBUG String soundex(arg)
2023-01-21T13:54:12.209+0200 DEBUG String space(INTEGER arg)
2023-01-21T13:54:12.210+0200 DEBUG Object sql
2023-01-21T13:54:12.210+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-21T13:54:12.210+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-21T13:54:12.210+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-21T13:54:12.210+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-21T13:54:12.210+0200 DEBUG String str(arg)
2023-01-21T13:54:12.210+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-21T13:54:12.210+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-21T13:54:12.210+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-21T13:54:12.210+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-21T13:54:12.210+0200 DEBUG sum(arg)
2023-01-21T13:54:12.210+0200 DEBUG Timestamp sysdate()
2023-01-21T13:54:12.210+0200 DEBUG Double tan(NUMERIC arg)
2023-01-21T13:54:12.211+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-21T13:54:12.211+0200 DEBUG String time(arg)
2023-01-21T13:54:12.211+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-21T13:54:12.211+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-21T13:54:12.211+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-21T13:54:12.211+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-21T13:54:12.211+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-21T13:54:12.211+0200 DEBUG String upper(STRING string)
2023-01-21T13:54:12.211+0200 DEBUG Date utc_date
2023-01-21T13:54:12.211+0200 DEBUG Time utc_time
2023-01-21T13:54:12.212+0200 DEBUG Timestamp utc_timestamp
2023-01-21T13:54:12.212+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-21T13:54:12.212+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-21T13:54:12.212+0200 DEBUG Double variance(NUMERIC arg)
2023-01-21T13:54:12.212+0200 DEBUG Integer week(DATE arg)
2023-01-21T13:54:12.212+0200 DEBUG Integer year(DATE arg)
2023-01-21T13:54:12.213+0200 DEBUG Character char(INTEGER arg)
2023-01-21T13:54:12.213+0200 DEBUG Date current date
2023-01-21T13:54:12.213+0200 DEBUG Time current time
2023-01-21T13:54:12.213+0200 DEBUG Timestamp current timestamp
2023-01-21T13:54:12.213+0200 DEBUG Instant current_instant
2023-01-21T13:54:12.213+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-21T13:54:12.214+0200 DEBUG Integer day(DATE arg)
2023-01-21T13:54:12.214+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-21T13:54:12.214+0200 DEBUG LocalDate local date
2023-01-21T13:54:12.214+0200 DEBUG LocalDateTime local datetime
2023-01-21T13:54:12.214+0200 DEBUG LocalTime local time
2023-01-21T13:54:12.214+0200 DEBUG OffsetDateTime offset datetime
2023-01-21T13:54:12.214+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-21T13:54:12.216+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-21T13:54:12.455+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-21T13:54:12.455+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-21T13:54:12.771+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:17)
2023-01-21T13:54:12.841+0200 DEBUG Starting post-init callbacks
2023-01-21T13:54:12.841+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-21T13:54:12.842+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-21T13:54:12.941+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-21T13:54:12.942+0200 DEBUG  Version select: select id from users where id =?
2023-01-21T13:54:12.942+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-21T13:54:12.942+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-21T13:54:12.943+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-21T13:54:12.954+0200 DEBUG Created new SQL alias : u1_0
2023-01-21T13:54:12.957+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users]
2023-01-21T13:54:12.972+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-21T13:54:12.975+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-21T13:54:13.143+0200 DEBUG Checking 0 named HQL queries
2023-01-21T13:54:13.143+0200 DEBUG Checking 0 named SQL queries
2023-01-21T13:54:13.190+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-21T13:54:13.238+0200 DEBUG No alter strings for table : users
2023-01-21T13:54:13.241+0200 DEBUG 
    create table users_SEQ (
        next_val bigint
    ) engine=InnoDB
2023-01-21T13:54:15.735+0200 DEBUG 
    insert into users_SEQ values ( 1 )
2023-01-21T13:54:15.951+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-21T13:54:15.951+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-21T13:54:15.970+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@50085d9c
2023-01-21T13:54:15.972+0200 DEBUG Registering SessionFactory: 68c9cdcc-9840-4a6d-b34b-3dcd0e68b7c1 (<unnamed>)
2023-01-21T13:54:15.973+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-21T13:54:16.021+0200 DEBUG Statistics initialized [enabled=false]
2023-01-21T13:54:16.027+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-21T13:54:16.027+0200 DEBUG begin
2023-01-21T13:54:16.087+0200 DEBUG 
    select
        next_val as id_val 
    from
        users_SEQ for update
2023-01-21T13:54:16.090+0200 DEBUG 
    update
        users_SEQ 
    set
        next_val= ? 
    where
        next_val=?
2023-01-21T13:54:16.331+0200 DEBUG Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2023-01-21T13:54:16.354+0200 DEBUG committing
2023-01-21T13:54:16.355+0200 DEBUG Processing flush-time cascades
2023-01-21T13:54:16.356+0200 DEBUG Dirty checking collections
2023-01-21T13:54:16.365+0200 DEBUG Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-01-21T13:54:16.365+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-21T13:54:16.366+0200 DEBUG Listing entities:
2023-01-21T13:54:16.366+0200 DEBUG edu.itstep.sql.Users{password=test, id=1, userName=user102}
2023-01-21T13:54:16.378+0200 DEBUG 
    insert 
    into
        users
        (password,user_name,id) 
    values
        (?,?,?)
2023-01-21T13:54:16.387+0200 DEBUG Unable to release JDBC result set [Cannot invoke "java.sql.ResultSet.close()" because "resultSet" is null]
2023-01-21T13:54:16.583+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-21T13:54:16.594+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-21T13:54:16.598+0200 DEBUG HHH000031: Closing
2023-01-21T13:54:16.602+0200 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1a531422] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-21T13:54:16.604+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-21T13:54:16.605+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-21T13:54:16.619+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-27T19:22:20.807+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-27T19:22:20.945+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-27T19:22:20.987+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-27T19:22:21.129+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-27T19:22:21.182+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-27T19:22:21.189+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-27T19:22:22.174+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-27T19:22:22.192+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-27T19:22:23.311+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-27T19:22:23.325+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-27T19:22:23.326+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-27T19:22:23.328+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T19:22:23.328+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T19:22:23.329+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-27T19:22:23.330+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-27T19:22:23.331+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-27T19:22:23.333+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T19:22:23.334+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-27T19:22:23.334+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-27T19:22:23.335+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T19:22:23.336+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-27T19:22:23.352+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-27T19:22:23.354+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-27T19:22:23.756+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3e14c16d
2023-01-27T19:22:23.757+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3e14c16d
2023-01-27T19:22:23.757+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3e14c16d
2023-01-27T19:22:23.757+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3c989952
2023-01-27T19:22:23.757+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3c989952
2023-01-27T19:22:23.757+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@784b990c
2023-01-27T19:22:23.758+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@784b990c
2023-01-27T19:22:23.758+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@3d3ba765
2023-01-27T19:22:23.758+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@3d3ba765
2023-01-27T19:22:23.758+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@25bc0606
2023-01-27T19:22:23.758+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@25bc0606
2023-01-27T19:22:23.759+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@25bc0606
2023-01-27T19:22:23.759+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@5d1659ea
2023-01-27T19:22:23.759+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@5d1659ea
2023-01-27T19:22:23.759+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@5d1659ea
2023-01-27T19:22:23.759+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@793138bd
2023-01-27T19:22:23.759+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@793138bd
2023-01-27T19:22:23.759+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@793138bd
2023-01-27T19:22:23.759+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@793138bd
2023-01-27T19:22:23.760+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@1951b871
2023-01-27T19:22:23.760+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@5c18016b
2023-01-27T19:22:23.760+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@5c18016b
2023-01-27T19:22:23.760+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@33aeca0b
2023-01-27T19:22:23.761+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@43aaf813
2023-01-27T19:22:23.761+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@57ac5227
2023-01-27T19:22:23.761+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@57ac5227
2023-01-27T19:22:23.761+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@57ac5227
2023-01-27T19:22:23.761+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4ba302e0
2023-01-27T19:22:23.761+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4ba302e0
2023-01-27T19:22:23.762+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4ba302e0
2023-01-27T19:22:23.762+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:22:23.762+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:22:23.762+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:22:23.763+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T19:22:23.763+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T19:22:23.763+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T19:22:23.763+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T19:22:23.763+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T19:22:23.764+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T19:22:23.764+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T19:22:23.764+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T19:22:23.764+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:22:23.764+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:22:23.765+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T19:22:23.765+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T19:22:23.765+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T19:22:23.765+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:22:23.765+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-27T19:22:23.765+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-27T19:22:23.766+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T19:22:23.766+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T19:22:23.766+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T19:22:23.767+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T19:22:23.767+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T19:22:23.767+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T19:22:23.767+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T19:22:23.767+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T19:22:23.767+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T19:22:23.768+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:22:23.768+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:22:23.768+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T19:22:23.768+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T19:22:23.768+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T19:22:23.768+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T19:22:23.768+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T19:22:23.769+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T19:22:23.769+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-27T19:22:23.769+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T19:22:23.769+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T19:22:23.770+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T19:22:23.770+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T19:22:23.770+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T19:22:23.770+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T19:22:23.772+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T19:22:23.772+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T19:22:23.773+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T19:22:23.773+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T19:22:23.773+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T19:22:23.773+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T19:22:23.773+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T19:22:23.773+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-27T19:22:23.774+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-27T19:22:23.774+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-27T19:22:23.774+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-27T19:22:23.774+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-27T19:22:23.774+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-27T19:22:23.774+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T19:22:23.775+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T19:22:23.776+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T19:22:23.776+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T19:22:23.776+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T19:22:23.776+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T19:22:23.777+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T19:22:23.777+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T19:22:23.778+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T19:22:23.778+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T19:22:23.778+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T19:22:23.779+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T19:22:23.779+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T19:22:23.779+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T19:22:23.779+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T19:22:23.779+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T19:22:23.779+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T19:22:23.780+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-27T19:22:23.780+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T19:22:23.780+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T19:22:23.780+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T19:22:23.780+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T19:22:23.780+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T19:22:23.781+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T19:22:23.781+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T19:22:23.781+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T19:22:23.781+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T19:22:23.781+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T19:22:23.781+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T19:22:23.781+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T19:22:23.782+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T19:22:23.782+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T19:22:23.782+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T19:22:23.782+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T19:22:23.782+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-27T19:22:23.790+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@62e6b5c8
2023-01-27T19:22:23.791+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@62e6b5c8
2023-01-27T19:22:23.794+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@fb9c7aa
2023-01-27T19:22:23.794+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4c398c80
2023-01-27T19:22:23.794+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7fc6de5b
2023-01-27T19:22:23.794+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@21baa903
2023-01-27T19:22:23.794+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@607fbe09
2023-01-27T19:22:23.794+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@60a2630a
2023-01-27T19:22:23.795+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@29df4d43
2023-01-27T19:22:23.795+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5dd91bca
2023-01-27T19:22:23.795+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@40cb698e
2023-01-27T19:22:23.880+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-27T19:22:23.907+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-27T19:22:23.907+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T19:22:23.907+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-27T19:22:23.907+0200 INFO HHH10001003: Autocommit mode: false
2023-01-27T19:22:23.912+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-27T19:22:23.912+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-27T19:22:25.380+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-27T19:22:25.380+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-27T19:22:25.381+0200 DEBUG JDBC version : 4.2
2023-01-27T19:22:25.712+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-27T19:22:25.727+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-27T19:22:25.728+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-27T19:22:25.785+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3adbe50f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a627c80)
2023-01-27T19:22:25.785+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@49aa766b) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@963176)
2023-01-27T19:22:25.786+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@65004ff6) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4cafa9aa)
2023-01-27T19:22:25.786+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@562c877a) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@67001148)
2023-01-27T19:22:25.786+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@989da1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31cb96e1)
2023-01-27T19:22:25.786+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3eed0f5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@64030b91)
2023-01-27T19:22:25.786+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@4d23015c)
2023-01-27T19:22:25.787+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@441cc260)
2023-01-27T19:22:25.787+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@26dcd8c0)
2023-01-27T19:22:25.791+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-27T19:22:25.791+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-27T19:22:25.793+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-27T19:22:25.796+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T19:22:25.797+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T19:22:25.800+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4abf3f0
2023-01-27T19:22:25.800+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@fb9c7aa`
2023-01-27T19:22:25.809+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:22:25.810+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:22:25.810+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:22:25.810+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:22:25.810+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:22:25.810+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:22:25.814+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40d10481] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@60dd3c23]
2023-01-27T19:22:25.941+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-27T19:22:26.062+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-27T19:22:26.085+0200 DEBUG Import with entity name Users
2023-01-27T19:22:26.099+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-27T19:22:26.128+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-27T19:22:26.161+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-27T19:22:26.167+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T19:22:26.167+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T19:22:26.178+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-27T19:22:26.194+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-27T19:22:26.234+0200 DEBUG building BasicValue for id
2023-01-27T19:22:26.241+0200 DEBUG Skipping column re-registration: users.id
2023-01-27T19:22:26.243+0200 DEBUG Building property id
2023-01-27T19:22:26.248+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-27T19:22:26.249+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-27T19:22:26.254+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-27T19:22:26.254+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-27T19:22:26.255+0200 DEBUG building BasicValue for password
2023-01-27T19:22:26.255+0200 DEBUG Skipping column re-registration: users.password
2023-01-27T19:22:26.255+0200 DEBUG Building property password
2023-01-27T19:22:26.256+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-27T19:22:26.257+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-27T19:22:26.257+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-27T19:22:26.258+0200 DEBUG building BasicValue for userName
2023-01-27T19:22:26.258+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-27T19:22:26.258+0200 DEBUG Building property userName
2023-01-27T19:22:26.270+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-27T19:22:26.272+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-27T19:22:26.274+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-27T19:22:26.283+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-27T19:22:26.430+0200 DEBUG Building session factory
2023-01-27T19:22:26.594+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T19:22:26.603+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-27T19:22:26.604+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@36061cf3, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-27T19:22:26.615+0200 DEBUG Instantiated session factory
2023-01-27T19:22:26.715+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-27T19:22:26.831+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-27T19:22:26.831+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-27T19:22:26.834+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-27T19:22:26.834+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-27T19:22:26.837+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@262816a8] under count; prior registration was null
2023-01-27T19:22:26.839+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6d1dcdff] under every; prior registration was null
2023-01-27T19:22:26.839+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@102ecc22] under any; prior registration was null
2023-01-27T19:22:26.841+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-27T19:22:26.841+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-27T19:22:26.841+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-27T19:22:26.841+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-27T19:22:26.841+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-27T19:22:26.842+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-27T19:22:26.842+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-27T19:22:26.842+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-27T19:22:26.842+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-27T19:22:26.843+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-27T19:22:26.843+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-27T19:22:26.843+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-27T19:22:26.843+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-27T19:22:26.844+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-27T19:22:26.844+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-27T19:22:26.844+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-27T19:22:26.844+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-27T19:22:26.847+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@70228253] under sinh; prior registration was null
2023-01-27T19:22:26.847+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63c12e52] under cosh; prior registration was null
2023-01-27T19:22:26.848+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@21bd20ee] under tanh; prior registration was null
2023-01-27T19:22:26.848+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26c47874] under pi; prior registration was null
2023-01-27T19:22:26.848+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@421056e5] under log; prior registration was null
2023-01-27T19:22:26.849+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-27T19:22:26.849+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-27T19:22:26.849+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-27T19:22:26.849+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-27T19:22:26.849+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-27T19:22:26.850+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-27T19:22:26.852+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-27T19:22:26.852+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-27T19:22:26.852+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-27T19:22:26.853+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-27T19:22:26.853+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-27T19:22:26.853+0200 DEBUG Registering alternate key : length -> character_length
2023-01-27T19:22:26.855+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@352c44a8] under position; prior registration was null
2023-01-27T19:22:26.857+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@cdb2d95] under overlay; prior registration was null
2023-01-27T19:22:26.858+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@895416d] under trim; prior registration was null
2023-01-27T19:22:26.860+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@623dcf2a] under cast; prior registration was null
2023-01-27T19:22:26.860+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eae4349] under collate; prior registration was null
2023-01-27T19:22:26.862+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3804a9a8] under extract; prior registration was null
2023-01-27T19:22:26.862+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-27T19:22:26.862+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-27T19:22:26.863+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@46963479] under ifnull; prior registration was null
2023-01-27T19:22:26.863+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-27T19:22:26.863+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-27T19:22:26.864+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@55e42449] under pad; prior registration was null
2023-01-27T19:22:26.865+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@cb7fa71] under str; prior registration was null
2023-01-27T19:22:26.868+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@15400fff] under format; prior registration was null
2023-01-27T19:22:26.869+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@77774571] under timestampadd; prior registration was null
2023-01-27T19:22:26.871+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@c27a3a2] under timestampdiff; prior registration was null
2023-01-27T19:22:26.872+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-27T19:22:26.872+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-27T19:22:26.873+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@59dc36d4] under current_date; prior registration was null
2023-01-27T19:22:26.873+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@12fcc71f] under current_time; prior registration was null
2023-01-27T19:22:26.873+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5679e96b] under current_timestamp; prior registration was null
2023-01-27T19:22:26.873+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-27T19:22:26.873+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-27T19:22:26.873+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-27T19:22:26.874+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ed7821] under local_date; prior registration was null
2023-01-27T19:22:26.874+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3bbf841e] under local_time; prior registration was null
2023-01-27T19:22:26.874+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4f0f7849] under local_datetime; prior registration was null
2023-01-27T19:22:26.874+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56a4f272] under offset_datetime; prior registration was null
2023-01-27T19:22:26.874+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-27T19:22:26.874+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-27T19:22:26.874+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-27T19:22:26.874+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-27T19:22:26.874+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ee0b4f7] under instant; prior registration was null
2023-01-27T19:22:26.874+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-27T19:22:26.876+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@77bbadc] under sql; prior registration was null
2023-01-27T19:22:26.876+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-27T19:22:26.876+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-27T19:22:26.876+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-27T19:22:26.876+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-27T19:22:26.876+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@421056e5
2023-01-27T19:22:26.876+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-27T19:22:26.877+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-27T19:22:26.877+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-27T19:22:26.877+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-27T19:22:26.877+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-27T19:22:26.877+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-27T19:22:26.877+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-27T19:22:26.877+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-27T19:22:26.878+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@25ad4f71] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-27T19:22:26.878+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@49faf066] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-27T19:22:26.878+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-27T19:22:26.878+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-27T19:22:26.878+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-27T19:22:26.878+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-27T19:22:26.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-27T19:22:26.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-27T19:22:26.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-27T19:22:26.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-27T19:22:26.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-27T19:22:26.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-27T19:22:26.879+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-27T19:22:26.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-27T19:22:26.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-27T19:22:26.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-27T19:22:26.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-27T19:22:26.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-27T19:22:26.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-27T19:22:26.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-27T19:22:26.880+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-27T19:22:26.880+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-27T19:22:26.880+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-27T19:22:26.880+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-27T19:22:26.880+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-27T19:22:26.880+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-27T19:22:26.880+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-27T19:22:26.880+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-27T19:22:26.881+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-27T19:22:26.881+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-27T19:22:26.881+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-27T19:22:26.881+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-27T19:22:26.881+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-27T19:22:26.881+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-27T19:22:26.881+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-27T19:22:26.881+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6f94a5a5] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@352c44a8
2023-01-27T19:22:26.881+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-27T19:22:26.882+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-27T19:22:26.882+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-27T19:22:26.882+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@455c1d8c] under trunc; prior registration was null
2023-01-27T19:22:26.882+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-27T19:22:26.882+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-27T19:22:26.882+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a451491] under bitand; prior registration was null
2023-01-27T19:22:26.882+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1422ac7f] under bitor; prior registration was null
2023-01-27T19:22:26.882+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e519ad3] under bitxor; prior registration was null
2023-01-27T19:22:26.882+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7bc44ce8] under bitnot; prior registration was null
2023-01-27T19:22:26.883+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-27T19:22:26.883+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-27T19:22:26.883+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-27T19:22:26.883+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-27T19:22:26.883+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-27T19:22:26.883+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-27T19:22:26.883+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-27T19:22:26.883+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-27T19:22:26.883+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-27T19:22:26.883+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-27T19:22:26.883+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-27T19:22:26.884+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-27T19:22:26.884+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-27T19:22:26.884+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@59072e9d] under format; prior registration was org.hibernate.dialect.function.FormatFunction@15400fff
2023-01-27T19:22:26.884+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-27T19:22:26.884+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-27T19:22:26.884+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-27T19:22:26.884+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-27T19:22:26.885+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3bbf841e
2023-01-27T19:22:26.885+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@4f0f7849
2023-01-27T19:22:26.885+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-27T19:22:26.885+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@58472096] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26c47874
2023-01-27T19:22:26.885+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a92be4f] under chr; prior registration was null
2023-01-27T19:22:26.885+0200 DEBUG Registering alternate key : char -> chr
2023-01-27T19:22:26.885+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53e800f9] under sysdate; prior registration was null
2023-01-27T19:22:26.886+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-27T19:22:26.887+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-27T19:22:26.888+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-27T19:22:26.889+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-27T19:22:26.890+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-27T19:22:26.891+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-27T19:22:26.894+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@467b684d] under rank; prior registration was null
2023-01-27T19:22:26.894+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@7baf1f5a] under dense_rank; prior registration was null
2023-01-27T19:22:26.894+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@6cc86152] under percent_rank; prior registration was null
2023-01-27T19:22:26.895+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@611a990b] under cume_dist; prior registration was null
2023-01-27T19:22:26.895+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@65e21ce3] under listagg; prior registration was null
2023-01-27T19:22:26.903+0200 DEBUG abs(NUMERIC arg)
2023-01-27T19:22:26.903+0200 DEBUG Double acos(NUMERIC arg)
2023-01-27T19:22:26.903+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-27T19:22:26.903+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-27T19:22:26.904+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-27T19:22:26.904+0200 DEBUG Integer ascii(STRING arg)
2023-01-27T19:22:26.904+0200 DEBUG Double asin(NUMERIC arg)
2023-01-27T19:22:26.904+0200 DEBUG Double atan(NUMERIC arg)
2023-01-27T19:22:26.907+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-27T19:22:26.908+0200 DEBUG Double avg(NUMERIC arg)
2023-01-27T19:22:26.908+0200 DEBUG bit_and(arg)
2023-01-27T19:22:26.908+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-27T19:22:26.908+0200 DEBUG bit_or(arg)
2023-01-27T19:22:26.908+0200 DEBUG bitand(arg0, arg1)
2023-01-27T19:22:26.908+0200 DEBUG bitnot(arg)
2023-01-27T19:22:26.908+0200 DEBUG bitor(arg0, arg1)
2023-01-27T19:22:26.908+0200 DEBUG bitxor(arg0, arg1)
2023-01-27T19:22:26.908+0200 DEBUG cast(arg as Type)
2023-01-27T19:22:26.908+0200 DEBUG ceiling(NUMERIC arg)
2023-01-27T19:22:26.908+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-27T19:22:26.909+0200 DEBUG Character chr(INTEGER arg)
2023-01-27T19:22:26.909+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-27T19:22:26.909+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-27T19:22:26.909+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-27T19:22:26.909+0200 DEBUG Double cos(NUMERIC arg)
2023-01-27T19:22:26.909+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-27T19:22:26.909+0200 DEBUG Double cot(NUMERIC arg)
2023-01-27T19:22:26.909+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-27T19:22:26.909+0200 DEBUG Integer crc32(arg)
2023-01-27T19:22:26.909+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-27T19:22:26.909+0200 DEBUG Date curdate()
2023-01-27T19:22:26.909+0200 DEBUG Date current_date
2023-01-27T19:22:26.909+0200 DEBUG Time current_time
2023-01-27T19:22:26.910+0200 DEBUG Timestamp current_timestamp
2023-01-27T19:22:26.910+0200 DEBUG Time curtime()
2023-01-27T19:22:26.910+0200 DEBUG Date date(arg)
2023-01-27T19:22:26.910+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-27T19:22:26.910+0200 DEBUG Integer day(DATE arg)
2023-01-27T19:22:26.910+0200 DEBUG String dayname(DATE arg)
2023-01-27T19:22:26.910+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-27T19:22:26.910+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-27T19:22:26.910+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-27T19:22:26.910+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-27T19:22:26.910+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-27T19:22:26.910+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-27T19:22:26.910+0200 DEBUG Double exp(NUMERIC arg)
2023-01-27T19:22:26.911+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-27T19:22:26.911+0200 DEBUG first_valueANY value
2023-01-27T19:22:26.911+0200 DEBUG floor(NUMERIC arg)
2023-01-27T19:22:26.911+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-27T19:22:26.911+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T19:22:26.911+0200 DEBUG Integer hour(TIME arg)
2023-01-27T19:22:26.911+0200 DEBUG ifnull(arg0, arg1)
2023-01-27T19:22:26.911+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-27T19:22:26.911+0200 DEBUG Instant instant
2023-01-27T19:22:26.911+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-27T19:22:26.912+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-27T19:22:26.912+0200 DEBUG Date last_day(DATE arg)
2023-01-27T19:22:26.912+0200 DEBUG last_valueANY value
2023-01-27T19:22:26.912+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-27T19:22:26.912+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T19:22:26.913+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-27T19:22:26.913+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-27T19:22:26.913+0200 DEBUG Double ln(NUMERIC arg)
2023-01-27T19:22:26.913+0200 DEBUG LocalDate local_date
2023-01-27T19:22:26.913+0200 DEBUG LocalDateTime local_datetime
2023-01-27T19:22:26.913+0200 DEBUG LocalTime local_time
2023-01-27T19:22:26.913+0200 DEBUG Timestamp localtime
2023-01-27T19:22:26.914+0200 DEBUG Timestamp localtimestamp
2023-01-27T19:22:26.914+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-27T19:22:26.914+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-27T19:22:26.914+0200 DEBUG Double log10(NUMERIC arg)
2023-01-27T19:22:26.914+0200 DEBUG Double log2(NUMERIC arg)
2023-01-27T19:22:26.914+0200 DEBUG String lower(STRING string)
2023-01-27T19:22:26.914+0200 DEBUG String lpad(string, length[, padding])
2023-01-27T19:22:26.914+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-27T19:22:26.914+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-27T19:22:26.914+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-27T19:22:26.914+0200 DEBUG max(COMPARABLE arg)
2023-01-27T19:22:26.914+0200 DEBUG String md5(arg)
2023-01-27T19:22:26.915+0200 DEBUG Integer microsecond(TIME arg)
2023-01-27T19:22:26.915+0200 DEBUG min(COMPARABLE arg)
2023-01-27T19:22:26.915+0200 DEBUG Integer minute(TIME arg)
2023-01-27T19:22:26.915+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-27T19:22:26.915+0200 DEBUG Integer month(DATE arg)
2023-01-27T19:22:26.915+0200 DEBUG String monthname(DATE arg)
2023-01-27T19:22:26.915+0200 DEBUG Timestamp now()
2023-01-27T19:22:26.915+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-27T19:22:26.915+0200 DEBUG nullif(arg0, arg1)
2023-01-27T19:22:26.915+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-27T19:22:26.915+0200 DEBUG OffsetDateTime offset_datetime
2023-01-27T19:22:26.915+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-27T19:22:26.915+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-27T19:22:26.916+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-27T19:22:26.916+0200 DEBUG Double pi
2023-01-27T19:22:26.916+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-27T19:22:26.916+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-27T19:22:26.916+0200 DEBUG Integer quarter(DATE arg)
2023-01-27T19:22:26.916+0200 DEBUG Double radians(NUMERIC arg)
2023-01-27T19:22:26.916+0200 DEBUG Double rand([INTEGER seed])
2023-01-27T19:22:26.916+0200 DEBUG Long rank([arg0[, ...]])
2023-01-27T19:22:26.916+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-27T19:22:26.917+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-27T19:22:26.917+0200 DEBUG String reverse(STRING arg)
2023-01-27T19:22:26.918+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-27T19:22:26.918+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-27T19:22:26.918+0200 DEBUG Long row_number()
2023-01-27T19:22:26.919+0200 DEBUG String rpad(string, length[, padding])
2023-01-27T19:22:26.919+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-27T19:22:26.919+0200 DEBUG Integer second(TIME arg)
2023-01-27T19:22:26.919+0200 DEBUG String sha(arg)
2023-01-27T19:22:26.920+0200 DEBUG String sha1(arg)
2023-01-27T19:22:26.920+0200 DEBUG String sha2(arg0, arg1)
2023-01-27T19:22:26.921+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-27T19:22:26.923+0200 DEBUG Double sin(NUMERIC arg)
2023-01-27T19:22:26.924+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-27T19:22:26.924+0200 DEBUG String soundex(arg)
2023-01-27T19:22:26.925+0200 DEBUG String space(INTEGER arg)
2023-01-27T19:22:26.925+0200 DEBUG Object sql
2023-01-27T19:22:26.925+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-27T19:22:26.925+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-27T19:22:26.925+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-27T19:22:26.925+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-27T19:22:26.925+0200 DEBUG String str(arg)
2023-01-27T19:22:26.926+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-27T19:22:26.926+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-27T19:22:26.926+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-27T19:22:26.927+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-27T19:22:26.928+0200 DEBUG sum(arg)
2023-01-27T19:22:26.928+0200 DEBUG Timestamp sysdate()
2023-01-27T19:22:26.928+0200 DEBUG Double tan(NUMERIC arg)
2023-01-27T19:22:26.928+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-27T19:22:26.928+0200 DEBUG String time(arg)
2023-01-27T19:22:26.929+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-27T19:22:26.929+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T19:22:26.974+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-27T19:22:26.974+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-27T19:22:26.974+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-27T19:22:26.974+0200 DEBUG String upper(STRING string)
2023-01-27T19:22:26.974+0200 DEBUG Date utc_date
2023-01-27T19:22:26.974+0200 DEBUG Time utc_time
2023-01-27T19:22:26.974+0200 DEBUG Timestamp utc_timestamp
2023-01-27T19:22:26.974+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-27T19:22:26.975+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-27T19:22:26.975+0200 DEBUG Double variance(NUMERIC arg)
2023-01-27T19:22:26.975+0200 DEBUG Integer week(DATE arg)
2023-01-27T19:22:26.975+0200 DEBUG Integer year(DATE arg)
2023-01-27T19:22:26.977+0200 DEBUG Character char(INTEGER arg)
2023-01-27T19:22:26.977+0200 DEBUG Date current date
2023-01-27T19:22:26.977+0200 DEBUG Time current time
2023-01-27T19:22:26.977+0200 DEBUG Timestamp current timestamp
2023-01-27T19:22:26.978+0200 DEBUG Instant current_instant
2023-01-27T19:22:26.978+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T19:22:26.978+0200 DEBUG Integer day(DATE arg)
2023-01-27T19:22:26.978+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-27T19:22:26.978+0200 DEBUG LocalDate local date
2023-01-27T19:22:26.978+0200 DEBUG LocalDateTime local datetime
2023-01-27T19:22:26.979+0200 DEBUG LocalTime local time
2023-01-27T19:22:26.979+0200 DEBUG OffsetDateTime offset datetime
2023-01-27T19:22:26.979+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-27T19:22:27.007+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@40d10481] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@10f7c76]
2023-01-27T19:22:27.392+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T19:22:27.393+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T19:22:27.798+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:17)
2023-01-27T19:22:27.931+0200 DEBUG Starting post-init callbacks
2023-01-27T19:22:27.931+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-27T19:22:27.932+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-27T19:22:28.108+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-27T19:22:28.108+0200 DEBUG  Version select: select id from users where id =?
2023-01-27T19:22:28.109+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-27T19:22:28.110+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-27T19:22:28.111+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-27T19:22:28.150+0200 DEBUG Created new SQL alias : u1_0
2023-01-27T19:22:28.155+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users]
2023-01-27T19:22:28.180+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-27T19:22:28.188+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-27T19:22:28.327+0200 DEBUG Checking 0 named HQL queries
2023-01-27T19:22:28.327+0200 DEBUG Checking 0 named SQL queries
2023-01-27T19:22:28.443+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5c6a5192] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-27T19:22:28.536+0200 DEBUG No alter strings for table : users
2023-01-27T19:22:28.537+0200 DEBUG No alter strings for table : users_SEQ
2023-01-27T19:22:28.582+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T19:22:28.582+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-27T19:22:28.633+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2e1eb85f
2023-01-27T19:22:28.643+0200 DEBUG Registering SessionFactory: 94784fde-5cc4-4b01-ab97-292635bd79d3 (<unnamed>)
2023-01-27T19:22:28.643+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-27T19:22:28.738+0200 DEBUG Statistics initialized [enabled=false]
2023-01-27T19:22:28.757+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-27T19:22:28.757+0200 DEBUG begin
2023-01-27T19:22:28.906+0200 DEBUG 
    select
        next_val as id_val 
    from
        users_SEQ for update
2023-01-27T19:22:28.922+0200 DEBUG 
    update
        users_SEQ 
    set
        next_val= ? 
    where
        next_val=?
2023-01-27T19:22:29.149+0200 DEBUG Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2023-01-27T19:22:29.160+0200 DEBUG committing
2023-01-27T19:22:29.160+0200 DEBUG Processing flush-time cascades
2023-01-27T19:22:29.161+0200 DEBUG Dirty checking collections
2023-01-27T19:22:29.198+0200 DEBUG Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-01-27T19:22:29.198+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-27T19:22:29.200+0200 DEBUG Listing entities:
2023-01-27T19:22:29.200+0200 DEBUG edu.itstep.sql.Users{password=test, id=2, userName=user102}
2023-01-27T19:22:29.217+0200 DEBUG 
    insert 
    into
        users
        (password,user_name,id) 
    values
        (?,?,?)
2023-01-27T19:22:29.228+0200 DEBUG Unable to release JDBC result set [Cannot invoke "java.sql.ResultSet.close()" because "resultSet" is null]
2023-01-27T19:22:29.456+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T19:22:29.460+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T19:22:29.461+0200 DEBUG HHH000031: Closing
2023-01-27T19:22:29.462+0200 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@73893ec1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@10f7c76]
2023-01-27T19:22:29.463+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-27T19:22:29.463+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T19:22:29.548+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-27T19:24:25.709+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-27T19:24:25.756+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-27T19:24:25.771+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-27T19:24:25.829+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-27T19:24:25.834+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-27T19:24:25.837+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-27T19:24:26.305+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-27T19:24:26.319+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-27T19:24:26.831+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-27T19:24:26.839+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-27T19:24:26.840+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-27T19:24:26.841+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T19:24:26.842+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T19:24:26.843+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-27T19:24:26.846+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-27T19:24:26.847+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-27T19:24:26.849+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T19:24:26.853+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-27T19:24:26.854+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-27T19:24:26.854+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T19:24:26.856+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-27T19:24:26.867+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-27T19:24:26.869+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-27T19:24:27.280+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:24:27.280+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:24:27.280+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:24:27.281+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T19:24:27.281+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T19:24:27.282+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T19:24:27.282+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T19:24:27.282+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T19:24:27.283+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T19:24:27.283+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:24:27.284+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:24:27.284+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:24:27.285+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T19:24:27.285+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T19:24:27.286+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T19:24:27.286+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:24:27.286+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:24:27.286+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:24:27.286+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:24:27.287+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-27T19:24:27.287+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T19:24:27.287+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T19:24:27.287+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T19:24:27.288+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T19:24:27.288+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T19:24:27.288+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T19:24:27.288+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T19:24:27.288+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T19:24:27.289+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T19:24:27.289+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T19:24:27.291+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:24:27.291+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:24:27.292+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:24:27.292+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T19:24:27.293+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T19:24:27.293+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T19:24:27.293+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T19:24:27.294+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T19:24:27.294+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T19:24:27.294+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T19:24:27.295+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T19:24:27.296+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T19:24:27.296+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T19:24:27.296+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T19:24:27.296+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T19:24:27.296+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T19:24:27.297+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-27T19:24:27.297+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T19:24:27.297+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T19:24:27.298+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T19:24:27.298+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T19:24:27.298+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T19:24:27.298+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T19:24:27.299+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T19:24:27.299+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T19:24:27.299+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T19:24:27.299+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T19:24:27.299+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T19:24:27.299+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T19:24:27.299+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T19:24:27.300+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T19:24:27.300+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T19:24:27.300+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-27T19:24:27.300+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-27T19:24:27.300+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-27T19:24:27.301+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-27T19:24:27.301+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T19:24:27.301+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T19:24:27.301+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T19:24:27.302+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T19:24:27.302+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T19:24:27.302+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T19:24:27.302+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T19:24:27.303+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T19:24:27.304+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T19:24:27.304+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T19:24:27.304+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T19:24:27.304+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T19:24:27.304+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T19:24:27.304+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-27T19:24:27.305+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T19:24:27.305+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T19:24:27.306+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T19:24:27.306+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T19:24:27.306+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T19:24:27.306+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T19:24:27.307+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T19:24:27.307+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T19:24:27.307+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T19:24:27.307+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T19:24:27.308+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T19:24:27.308+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T19:24:27.308+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T19:24:27.309+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T19:24:27.309+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T19:24:27.312+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T19:24:27.312+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-27T19:24:27.313+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T19:24:27.314+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T19:24:27.314+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T19:24:27.315+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T19:24:27.315+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T19:24:27.315+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T19:24:27.316+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-27T19:24:27.316+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T19:24:27.316+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T19:24:27.316+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T19:24:27.316+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T19:24:27.317+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T19:24:27.317+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T19:24:27.317+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T19:24:27.317+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T19:24:27.317+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T19:24:27.317+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T19:24:27.318+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T19:24:27.318+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T19:24:27.318+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T19:24:27.318+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T19:24:27.318+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-27T19:24:27.319+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-27T19:24:27.319+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-27T19:24:27.326+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-27T19:24:27.327+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-27T19:24:27.329+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-27T19:24:27.330+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-27T19:24:27.330+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-27T19:24:27.330+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-27T19:24:27.331+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-27T19:24:27.331+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-27T19:24:27.331+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-27T19:24:27.331+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-27T19:24:27.332+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-27T19:24:27.388+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-27T19:24:27.399+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-27T19:24:27.399+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T19:24:27.400+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-27T19:24:27.400+0200 INFO HHH10001003: Autocommit mode: false
2023-01-27T19:24:27.405+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-27T19:24:27.405+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-27T19:24:28.089+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-27T19:24:28.089+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-27T19:24:28.089+0200 DEBUG JDBC version : 4.2
2023-01-27T19:24:28.158+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-27T19:24:28.167+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-27T19:24:28.167+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-27T19:24:28.193+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-27T19:24:28.193+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-27T19:24:28.193+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-27T19:24:28.194+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-27T19:24:28.194+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-27T19:24:28.194+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-27T19:24:28.194+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-27T19:24:28.194+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-27T19:24:28.194+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-27T19:24:28.197+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-27T19:24:28.197+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-27T19:24:28.198+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-27T19:24:28.201+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T19:24:28.201+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T19:24:28.205+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-27T19:24:28.206+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-27T19:24:28.221+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:24:28.221+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:24:28.221+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:24:28.221+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:24:28.221+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:24:28.221+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:24:28.224+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-27T19:24:28.276+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-27T19:24:28.328+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-27T19:24:28.367+0200 DEBUG Import with entity name Users
2023-01-27T19:24:28.398+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-27T19:24:28.416+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-27T19:24:28.441+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-27T19:24:28.447+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T19:24:28.447+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T19:24:28.451+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-27T19:24:28.460+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-27T19:24:28.475+0200 DEBUG building BasicValue for id
2023-01-27T19:24:28.484+0200 DEBUG Skipping column re-registration: users.id
2023-01-27T19:24:28.485+0200 DEBUG Building property id
2023-01-27T19:24:28.495+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-27T19:24:28.498+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-27T19:24:28.498+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-27T19:24:28.498+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-27T19:24:28.499+0200 DEBUG building BasicValue for password
2023-01-27T19:24:28.499+0200 DEBUG Skipping column re-registration: users.password
2023-01-27T19:24:28.499+0200 DEBUG Building property password
2023-01-27T19:24:28.500+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-27T19:24:28.500+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-27T19:24:28.500+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-27T19:24:28.500+0200 DEBUG building BasicValue for userName
2023-01-27T19:24:28.500+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-27T19:24:28.501+0200 DEBUG Building property userName
2023-01-27T19:24:28.512+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-27T19:24:28.513+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-27T19:24:28.515+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-27T19:24:28.519+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-27T19:24:28.698+0200 DEBUG Building session factory
2023-01-27T19:24:28.828+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T19:24:28.843+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-27T19:24:28.846+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-27T19:24:28.862+0200 DEBUG Instantiated session factory
2023-01-27T19:24:28.925+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-27T19:24:29.117+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-27T19:24:29.118+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-27T19:24:29.120+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-27T19:24:29.121+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-27T19:24:29.122+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-27T19:24:29.124+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-27T19:24:29.124+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-27T19:24:29.125+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-27T19:24:29.125+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-27T19:24:29.126+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-27T19:24:29.126+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-27T19:24:29.126+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-27T19:24:29.126+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-27T19:24:29.126+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-27T19:24:29.126+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-27T19:24:29.126+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-27T19:24:29.127+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-27T19:24:29.127+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-27T19:24:29.127+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-27T19:24:29.127+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-27T19:24:29.128+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-27T19:24:29.128+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-27T19:24:29.128+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-27T19:24:29.128+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-27T19:24:29.133+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-27T19:24:29.133+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-27T19:24:29.133+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-27T19:24:29.134+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-27T19:24:29.134+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-27T19:24:29.135+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-27T19:24:29.135+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-27T19:24:29.136+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-27T19:24:29.136+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-27T19:24:29.136+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-27T19:24:29.137+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-27T19:24:29.139+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-27T19:24:29.139+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-27T19:24:29.139+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-27T19:24:29.139+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-27T19:24:29.139+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-27T19:24:29.139+0200 DEBUG Registering alternate key : length -> character_length
2023-01-27T19:24:29.141+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-27T19:24:29.143+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-27T19:24:29.144+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-27T19:24:29.149+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-27T19:24:29.149+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-27T19:24:29.153+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-27T19:24:29.153+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-27T19:24:29.153+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-27T19:24:29.154+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-27T19:24:29.155+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-27T19:24:29.155+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-27T19:24:29.156+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-27T19:24:29.157+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-27T19:24:29.159+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-27T19:24:29.160+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-27T19:24:29.163+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-27T19:24:29.164+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-27T19:24:29.164+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-27T19:24:29.166+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-27T19:24:29.166+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-27T19:24:29.166+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-27T19:24:29.167+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-27T19:24:29.167+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-27T19:24:29.167+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-27T19:24:29.167+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-27T19:24:29.167+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-27T19:24:29.168+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-27T19:24:29.168+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-27T19:24:29.168+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-27T19:24:29.168+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-27T19:24:29.168+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-27T19:24:29.168+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-27T19:24:29.168+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-27T19:24:29.168+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-27T19:24:29.169+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-27T19:24:29.169+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-27T19:24:29.169+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-27T19:24:29.169+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-27T19:24:29.170+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-27T19:24:29.170+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-27T19:24:29.170+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-27T19:24:29.170+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-27T19:24:29.170+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-27T19:24:29.173+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-27T19:24:29.173+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-27T19:24:29.174+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-27T19:24:29.174+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-27T19:24:29.175+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-27T19:24:29.176+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-27T19:24:29.176+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-27T19:24:29.176+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-27T19:24:29.177+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-27T19:24:29.177+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-27T19:24:29.177+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-27T19:24:29.177+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-27T19:24:29.178+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-27T19:24:29.178+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-27T19:24:29.178+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-27T19:24:29.178+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-27T19:24:29.178+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-27T19:24:29.181+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-27T19:24:29.181+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-27T19:24:29.181+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-27T19:24:29.182+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-27T19:24:29.182+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-27T19:24:29.182+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-27T19:24:29.182+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-27T19:24:29.182+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-27T19:24:29.182+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-27T19:24:29.182+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-27T19:24:29.183+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-27T19:24:29.183+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-27T19:24:29.183+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-27T19:24:29.183+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-27T19:24:29.183+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-27T19:24:29.183+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-27T19:24:29.184+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-27T19:24:29.184+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-27T19:24:29.184+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-27T19:24:29.184+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-27T19:24:29.184+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-27T19:24:29.184+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-27T19:24:29.185+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-27T19:24:29.186+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-27T19:24:29.186+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-27T19:24:29.186+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-27T19:24:29.186+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-27T19:24:29.187+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-27T19:24:29.187+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-27T19:24:29.187+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-27T19:24:29.187+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-27T19:24:29.188+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-27T19:24:29.188+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-27T19:24:29.188+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-27T19:24:29.188+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-27T19:24:29.188+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-27T19:24:29.189+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-27T19:24:29.189+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-27T19:24:29.189+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-27T19:24:29.189+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-27T19:24:29.189+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-27T19:24:29.190+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-27T19:24:29.190+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-27T19:24:29.190+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-27T19:24:29.190+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-27T19:24:29.190+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-27T19:24:29.190+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-27T19:24:29.190+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-27T19:24:29.191+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-27T19:24:29.192+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-27T19:24:29.192+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-27T19:24:29.192+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-27T19:24:29.193+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-27T19:24:29.193+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-27T19:24:29.193+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-27T19:24:29.194+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-27T19:24:29.200+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-27T19:24:29.201+0200 DEBUG Registering alternate key : char -> chr
2023-01-27T19:24:29.202+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-27T19:24:29.202+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-27T19:24:29.203+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-27T19:24:29.204+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-27T19:24:29.204+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-27T19:24:29.204+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-27T19:24:29.204+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-27T19:24:29.208+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-27T19:24:29.208+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-27T19:24:29.208+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-27T19:24:29.208+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-27T19:24:29.209+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-27T19:24:29.223+0200 DEBUG abs(NUMERIC arg)
2023-01-27T19:24:29.224+0200 DEBUG Double acos(NUMERIC arg)
2023-01-27T19:24:29.224+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-27T19:24:29.224+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-27T19:24:29.224+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-27T19:24:29.224+0200 DEBUG Integer ascii(STRING arg)
2023-01-27T19:24:29.224+0200 DEBUG Double asin(NUMERIC arg)
2023-01-27T19:24:29.225+0200 DEBUG Double atan(NUMERIC arg)
2023-01-27T19:24:29.234+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-27T19:24:29.234+0200 DEBUG Double avg(NUMERIC arg)
2023-01-27T19:24:29.234+0200 DEBUG bit_and(arg)
2023-01-27T19:24:29.234+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-27T19:24:29.234+0200 DEBUG bit_or(arg)
2023-01-27T19:24:29.235+0200 DEBUG bitand(arg0, arg1)
2023-01-27T19:24:29.235+0200 DEBUG bitnot(arg)
2023-01-27T19:24:29.235+0200 DEBUG bitor(arg0, arg1)
2023-01-27T19:24:29.235+0200 DEBUG bitxor(arg0, arg1)
2023-01-27T19:24:29.235+0200 DEBUG cast(arg as Type)
2023-01-27T19:24:29.235+0200 DEBUG ceiling(NUMERIC arg)
2023-01-27T19:24:29.235+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-27T19:24:29.236+0200 DEBUG Character chr(INTEGER arg)
2023-01-27T19:24:29.236+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-27T19:24:29.236+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-27T19:24:29.236+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-27T19:24:29.236+0200 DEBUG Double cos(NUMERIC arg)
2023-01-27T19:24:29.236+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-27T19:24:29.237+0200 DEBUG Double cot(NUMERIC arg)
2023-01-27T19:24:29.237+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-27T19:24:29.237+0200 DEBUG Integer crc32(arg)
2023-01-27T19:24:29.237+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-27T19:24:29.237+0200 DEBUG Date curdate()
2023-01-27T19:24:29.237+0200 DEBUG Date current_date
2023-01-27T19:24:29.237+0200 DEBUG Time current_time
2023-01-27T19:24:29.237+0200 DEBUG Timestamp current_timestamp
2023-01-27T19:24:29.237+0200 DEBUG Time curtime()
2023-01-27T19:24:29.237+0200 DEBUG Date date(arg)
2023-01-27T19:24:29.237+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-27T19:24:29.238+0200 DEBUG Integer day(DATE arg)
2023-01-27T19:24:29.238+0200 DEBUG String dayname(DATE arg)
2023-01-27T19:24:29.238+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-27T19:24:29.238+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-27T19:24:29.238+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-27T19:24:29.238+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-27T19:24:29.238+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-27T19:24:29.238+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-27T19:24:29.238+0200 DEBUG Double exp(NUMERIC arg)
2023-01-27T19:24:29.239+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-27T19:24:29.239+0200 DEBUG first_valueANY value
2023-01-27T19:24:29.239+0200 DEBUG floor(NUMERIC arg)
2023-01-27T19:24:29.239+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-27T19:24:29.239+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T19:24:29.239+0200 DEBUG Integer hour(TIME arg)
2023-01-27T19:24:29.239+0200 DEBUG ifnull(arg0, arg1)
2023-01-27T19:24:29.239+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-27T19:24:29.239+0200 DEBUG Instant instant
2023-01-27T19:24:29.239+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-27T19:24:29.239+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-27T19:24:29.240+0200 DEBUG Date last_day(DATE arg)
2023-01-27T19:24:29.240+0200 DEBUG last_valueANY value
2023-01-27T19:24:29.240+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-27T19:24:29.240+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T19:24:29.240+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-27T19:24:29.240+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-27T19:24:29.240+0200 DEBUG Double ln(NUMERIC arg)
2023-01-27T19:24:29.240+0200 DEBUG LocalDate local_date
2023-01-27T19:24:29.241+0200 DEBUG LocalDateTime local_datetime
2023-01-27T19:24:29.241+0200 DEBUG LocalTime local_time
2023-01-27T19:24:29.241+0200 DEBUG Timestamp localtime
2023-01-27T19:24:29.241+0200 DEBUG Timestamp localtimestamp
2023-01-27T19:24:29.241+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-27T19:24:29.241+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-27T19:24:29.241+0200 DEBUG Double log10(NUMERIC arg)
2023-01-27T19:24:29.241+0200 DEBUG Double log2(NUMERIC arg)
2023-01-27T19:24:29.241+0200 DEBUG String lower(STRING string)
2023-01-27T19:24:29.241+0200 DEBUG String lpad(string, length[, padding])
2023-01-27T19:24:29.241+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-27T19:24:29.242+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-27T19:24:29.242+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-27T19:24:29.242+0200 DEBUG max(COMPARABLE arg)
2023-01-27T19:24:29.242+0200 DEBUG String md5(arg)
2023-01-27T19:24:29.242+0200 DEBUG Integer microsecond(TIME arg)
2023-01-27T19:24:29.243+0200 DEBUG min(COMPARABLE arg)
2023-01-27T19:24:29.243+0200 DEBUG Integer minute(TIME arg)
2023-01-27T19:24:29.243+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-27T19:24:29.243+0200 DEBUG Integer month(DATE arg)
2023-01-27T19:24:29.243+0200 DEBUG String monthname(DATE arg)
2023-01-27T19:24:29.243+0200 DEBUG Timestamp now()
2023-01-27T19:24:29.243+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-27T19:24:29.243+0200 DEBUG nullif(arg0, arg1)
2023-01-27T19:24:29.243+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-27T19:24:29.243+0200 DEBUG OffsetDateTime offset_datetime
2023-01-27T19:24:29.243+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-27T19:24:29.243+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-27T19:24:29.243+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-27T19:24:29.243+0200 DEBUG Double pi
2023-01-27T19:24:29.243+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-27T19:24:29.243+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-27T19:24:29.244+0200 DEBUG Integer quarter(DATE arg)
2023-01-27T19:24:29.244+0200 DEBUG Double radians(NUMERIC arg)
2023-01-27T19:24:29.244+0200 DEBUG Double rand([INTEGER seed])
2023-01-27T19:24:29.244+0200 DEBUG Long rank([arg0[, ...]])
2023-01-27T19:24:29.244+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-27T19:24:29.244+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-27T19:24:29.244+0200 DEBUG String reverse(STRING arg)
2023-01-27T19:24:29.244+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-27T19:24:29.244+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-27T19:24:29.244+0200 DEBUG Long row_number()
2023-01-27T19:24:29.244+0200 DEBUG String rpad(string, length[, padding])
2023-01-27T19:24:29.244+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-27T19:24:29.245+0200 DEBUG Integer second(TIME arg)
2023-01-27T19:24:29.246+0200 DEBUG String sha(arg)
2023-01-27T19:24:29.247+0200 DEBUG String sha1(arg)
2023-01-27T19:24:29.248+0200 DEBUG String sha2(arg0, arg1)
2023-01-27T19:24:29.248+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-27T19:24:29.248+0200 DEBUG Double sin(NUMERIC arg)
2023-01-27T19:24:29.248+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-27T19:24:29.248+0200 DEBUG String soundex(arg)
2023-01-27T19:24:29.248+0200 DEBUG String space(INTEGER arg)
2023-01-27T19:24:29.248+0200 DEBUG Object sql
2023-01-27T19:24:29.249+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-27T19:24:29.249+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-27T19:24:29.249+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-27T19:24:29.249+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-27T19:24:29.249+0200 DEBUG String str(arg)
2023-01-27T19:24:29.249+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-27T19:24:29.249+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-27T19:24:29.249+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-27T19:24:29.249+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-27T19:24:29.249+0200 DEBUG sum(arg)
2023-01-27T19:24:29.249+0200 DEBUG Timestamp sysdate()
2023-01-27T19:24:29.249+0200 DEBUG Double tan(NUMERIC arg)
2023-01-27T19:24:29.250+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-27T19:24:29.250+0200 DEBUG String time(arg)
2023-01-27T19:24:29.250+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-27T19:24:29.250+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T19:24:29.250+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-27T19:24:29.250+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-27T19:24:29.251+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-27T19:24:29.252+0200 DEBUG String upper(STRING string)
2023-01-27T19:24:29.252+0200 DEBUG Date utc_date
2023-01-27T19:24:29.252+0200 DEBUG Time utc_time
2023-01-27T19:24:29.252+0200 DEBUG Timestamp utc_timestamp
2023-01-27T19:24:29.252+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-27T19:24:29.252+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-27T19:24:29.253+0200 DEBUG Double variance(NUMERIC arg)
2023-01-27T19:24:29.253+0200 DEBUG Integer week(DATE arg)
2023-01-27T19:24:29.253+0200 DEBUG Integer year(DATE arg)
2023-01-27T19:24:29.254+0200 DEBUG Character char(INTEGER arg)
2023-01-27T19:24:29.254+0200 DEBUG Date current date
2023-01-27T19:24:29.254+0200 DEBUG Time current time
2023-01-27T19:24:29.254+0200 DEBUG Timestamp current timestamp
2023-01-27T19:24:29.254+0200 DEBUG Instant current_instant
2023-01-27T19:24:29.254+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T19:24:29.254+0200 DEBUG Integer day(DATE arg)
2023-01-27T19:24:29.255+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-27T19:24:29.255+0200 DEBUG LocalDate local date
2023-01-27T19:24:29.255+0200 DEBUG LocalDateTime local datetime
2023-01-27T19:24:29.255+0200 DEBUG LocalTime local time
2023-01-27T19:24:29.255+0200 DEBUG OffsetDateTime offset datetime
2023-01-27T19:24:29.255+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-27T19:24:29.257+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-27T19:24:29.530+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T19:24:29.532+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T19:24:29.900+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:17)
2023-01-27T19:24:29.963+0200 DEBUG Starting post-init callbacks
2023-01-27T19:24:29.963+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-27T19:24:29.964+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-27T19:24:30.059+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-27T19:24:30.059+0200 DEBUG  Version select: select id from users where id =?
2023-01-27T19:24:30.059+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-27T19:24:30.060+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-27T19:24:30.060+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-27T19:24:30.077+0200 DEBUG Created new SQL alias : u1_0
2023-01-27T19:24:30.082+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users]
2023-01-27T19:24:30.107+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-27T19:24:30.154+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-27T19:24:30.239+0200 DEBUG Checking 0 named HQL queries
2023-01-27T19:24:30.239+0200 DEBUG Checking 0 named SQL queries
2023-01-27T19:24:30.294+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-27T19:24:30.341+0200 DEBUG No alter strings for table : users
2023-01-27T19:24:30.342+0200 DEBUG No alter strings for table : users_SEQ
2023-01-27T19:24:30.382+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T19:24:30.382+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-27T19:24:30.409+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-27T19:24:30.416+0200 DEBUG Registering SessionFactory: 6bf34670-0712-4792-844d-ebde2fc69b4f (<unnamed>)
2023-01-27T19:24:30.416+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-27T19:24:30.495+0200 DEBUG Statistics initialized [enabled=false]
2023-01-27T19:24:30.501+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-27T19:24:30.501+0200 DEBUG begin
2023-01-27T19:24:30.600+0200 DEBUG 
    select
        next_val as id_val 
    from
        users_SEQ for update
2023-01-27T19:24:30.603+0200 DEBUG 
    update
        users_SEQ 
    set
        next_val= ? 
    where
        next_val=?
2023-01-27T19:24:31.122+0200 DEBUG Generated identifier: 52, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2023-01-27T19:24:31.135+0200 DEBUG committing
2023-01-27T19:24:31.136+0200 DEBUG Processing flush-time cascades
2023-01-27T19:24:31.137+0200 DEBUG Dirty checking collections
2023-01-27T19:24:31.144+0200 DEBUG Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-01-27T19:24:31.144+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-27T19:24:31.145+0200 DEBUG Listing entities:
2023-01-27T19:24:31.145+0200 DEBUG edu.itstep.sql.Users{password=test3, id=52, userName=user103}
2023-01-27T19:24:31.165+0200 DEBUG 
    insert 
    into
        users
        (password,user_name,id) 
    values
        (?,?,?)
2023-01-27T19:24:31.174+0200 DEBUG Unable to release JDBC result set [Cannot invoke "java.sql.ResultSet.close()" because "resultSet" is null]
2023-01-27T19:24:31.510+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T19:24:31.513+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T19:24:31.514+0200 DEBUG HHH000031: Closing
2023-01-27T19:24:31.514+0200 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1cd6b1bd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-27T19:24:31.515+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-27T19:24:31.515+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T19:24:31.521+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-27T19:25:33.670+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-27T19:25:33.703+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-27T19:25:33.712+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-27T19:25:33.758+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-27T19:25:33.761+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-27T19:25:33.763+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-27T19:25:34.126+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-27T19:25:34.140+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-27T19:25:34.635+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-27T19:25:34.642+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-27T19:25:34.643+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-27T19:25:34.644+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T19:25:34.644+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T19:25:34.645+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-27T19:25:34.647+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-27T19:25:34.648+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-27T19:25:34.652+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T19:25:34.653+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-27T19:25:34.654+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-27T19:25:34.654+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T19:25:34.656+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-27T19:25:34.664+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-27T19:25:34.668+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-27T19:25:35.005+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:25:35.005+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:25:35.006+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:25:35.006+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T19:25:35.006+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T19:25:35.006+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T19:25:35.007+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T19:25:35.007+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T19:25:35.007+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T19:25:35.007+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:25:35.007+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:25:35.007+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:25:35.008+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T19:25:35.008+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T19:25:35.008+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T19:25:35.008+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:25:35.009+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:25:35.009+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:25:35.009+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:25:35.009+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-27T19:25:35.010+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T19:25:35.012+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T19:25:35.012+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T19:25:35.013+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T19:25:35.013+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T19:25:35.013+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T19:25:35.013+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T19:25:35.014+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T19:25:35.014+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T19:25:35.014+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T19:25:35.014+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:25:35.015+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:25:35.015+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:25:35.015+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T19:25:35.016+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T19:25:35.016+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T19:25:35.016+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T19:25:35.016+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T19:25:35.017+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T19:25:35.017+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T19:25:35.017+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T19:25:35.018+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T19:25:35.018+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T19:25:35.018+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T19:25:35.018+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T19:25:35.018+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T19:25:35.018+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-27T19:25:35.019+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T19:25:35.019+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T19:25:35.019+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T19:25:35.020+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T19:25:35.020+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T19:25:35.020+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T19:25:35.020+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T19:25:35.021+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T19:25:35.021+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T19:25:35.021+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T19:25:35.021+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T19:25:35.021+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T19:25:35.021+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T19:25:35.022+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T19:25:35.022+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T19:25:35.022+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-27T19:25:35.022+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-27T19:25:35.022+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-27T19:25:35.022+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-27T19:25:35.023+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T19:25:35.023+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T19:25:35.023+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T19:25:35.023+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T19:25:35.023+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T19:25:35.023+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T19:25:35.024+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T19:25:35.028+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T19:25:35.028+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T19:25:35.028+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T19:25:35.028+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T19:25:35.029+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T19:25:35.029+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T19:25:35.029+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-27T19:25:35.029+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T19:25:35.029+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T19:25:35.030+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T19:25:35.030+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T19:25:35.031+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T19:25:35.032+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T19:25:35.032+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T19:25:35.033+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T19:25:35.033+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T19:25:35.033+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T19:25:35.034+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T19:25:35.034+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T19:25:35.034+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T19:25:35.034+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T19:25:35.034+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T19:25:35.035+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T19:25:35.035+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-27T19:25:35.035+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T19:25:35.035+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T19:25:35.035+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T19:25:35.036+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T19:25:35.036+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T19:25:35.036+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T19:25:35.036+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-27T19:25:35.036+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T19:25:35.036+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T19:25:35.037+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T19:25:35.037+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T19:25:35.038+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T19:25:35.038+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T19:25:35.038+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T19:25:35.038+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T19:25:35.039+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T19:25:35.039+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T19:25:35.040+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T19:25:35.040+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T19:25:35.040+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T19:25:35.040+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T19:25:35.041+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-27T19:25:35.041+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-27T19:25:35.041+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-27T19:25:35.054+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-27T19:25:35.054+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-27T19:25:35.056+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-27T19:25:35.056+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-27T19:25:35.057+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-27T19:25:35.057+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-27T19:25:35.057+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-27T19:25:35.057+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-27T19:25:35.057+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-27T19:25:35.058+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-27T19:25:35.058+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-27T19:25:35.108+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-27T19:25:35.119+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-27T19:25:35.119+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T19:25:35.119+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-27T19:25:35.120+0200 INFO HHH10001003: Autocommit mode: false
2023-01-27T19:25:35.124+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-27T19:25:35.125+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-27T19:25:35.964+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-27T19:25:35.965+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-27T19:25:35.965+0200 DEBUG JDBC version : 4.2
2023-01-27T19:25:36.041+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-27T19:25:36.050+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-27T19:25:36.050+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-27T19:25:36.077+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-27T19:25:36.078+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-27T19:25:36.078+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-27T19:25:36.078+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-27T19:25:36.078+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-27T19:25:36.078+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-27T19:25:36.079+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-27T19:25:36.079+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-27T19:25:36.079+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-27T19:25:36.081+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-27T19:25:36.081+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-27T19:25:36.082+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-27T19:25:36.086+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T19:25:36.086+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T19:25:36.091+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-27T19:25:36.091+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-27T19:25:36.102+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:25:36.102+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:25:36.103+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:25:36.103+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:25:36.103+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:25:36.103+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:25:36.106+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-27T19:25:36.166+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-27T19:25:36.225+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-27T19:25:36.244+0200 DEBUG Import with entity name Users
2023-01-27T19:25:36.262+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-27T19:25:36.285+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-27T19:25:36.353+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-27T19:25:36.364+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T19:25:36.364+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T19:25:36.368+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-27T19:25:36.386+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-27T19:25:36.428+0200 DEBUG building BasicValue for id
2023-01-27T19:25:36.469+0200 DEBUG Skipping column re-registration: users.id
2023-01-27T19:25:36.475+0200 DEBUG Building property id
2023-01-27T19:25:36.488+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-27T19:25:36.508+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-27T19:25:36.509+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-27T19:25:36.513+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-27T19:25:36.514+0200 DEBUG building BasicValue for password
2023-01-27T19:25:36.514+0200 DEBUG Skipping column re-registration: users.password
2023-01-27T19:25:36.514+0200 DEBUG Building property password
2023-01-27T19:25:36.517+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-27T19:25:36.518+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-27T19:25:36.518+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-27T19:25:36.518+0200 DEBUG building BasicValue for userName
2023-01-27T19:25:36.519+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-27T19:25:36.519+0200 DEBUG Building property userName
2023-01-27T19:25:36.581+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-27T19:25:36.582+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-27T19:25:36.587+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-27T19:25:36.598+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-27T19:25:36.801+0200 DEBUG Building session factory
2023-01-27T19:25:36.896+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T19:25:36.908+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-27T19:25:36.908+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-27T19:25:36.928+0200 DEBUG Instantiated session factory
2023-01-27T19:25:36.961+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-27T19:25:37.240+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-27T19:25:37.240+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-27T19:25:37.243+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-27T19:25:37.244+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-27T19:25:37.246+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-27T19:25:37.257+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-27T19:25:37.258+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-27T19:25:37.259+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-27T19:25:37.260+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-27T19:25:37.261+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-27T19:25:37.262+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-27T19:25:37.266+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-27T19:25:37.266+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-27T19:25:37.266+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-27T19:25:37.266+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-27T19:25:37.268+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-27T19:25:37.269+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-27T19:25:37.269+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-27T19:25:37.272+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-27T19:25:37.272+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-27T19:25:37.272+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-27T19:25:37.273+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-27T19:25:37.274+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-27T19:25:37.274+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-27T19:25:37.278+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-27T19:25:37.278+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-27T19:25:37.278+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-27T19:25:37.279+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-27T19:25:37.279+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-27T19:25:37.280+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-27T19:25:37.280+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-27T19:25:37.280+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-27T19:25:37.280+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-27T19:25:37.280+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-27T19:25:37.282+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-27T19:25:37.283+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-27T19:25:37.283+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-27T19:25:37.283+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-27T19:25:37.283+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-27T19:25:37.283+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-27T19:25:37.284+0200 DEBUG Registering alternate key : length -> character_length
2023-01-27T19:25:37.285+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-27T19:25:37.286+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-27T19:25:37.287+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-27T19:25:37.288+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-27T19:25:37.289+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-27T19:25:37.290+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-27T19:25:37.290+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-27T19:25:37.291+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-27T19:25:37.291+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-27T19:25:37.292+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-27T19:25:37.292+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-27T19:25:37.293+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-27T19:25:37.294+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-27T19:25:37.296+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-27T19:25:37.298+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-27T19:25:37.300+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-27T19:25:37.301+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-27T19:25:37.301+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-27T19:25:37.302+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-27T19:25:37.302+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-27T19:25:37.302+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-27T19:25:37.302+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-27T19:25:37.302+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-27T19:25:37.302+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-27T19:25:37.302+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-27T19:25:37.302+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-27T19:25:37.303+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-27T19:25:37.303+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-27T19:25:37.303+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-27T19:25:37.303+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-27T19:25:37.303+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-27T19:25:37.303+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-27T19:25:37.303+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-27T19:25:37.303+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-27T19:25:37.304+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-27T19:25:37.304+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-27T19:25:37.304+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-27T19:25:37.304+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-27T19:25:37.304+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-27T19:25:37.305+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-27T19:25:37.305+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-27T19:25:37.305+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-27T19:25:37.305+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-27T19:25:37.305+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-27T19:25:37.305+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-27T19:25:37.305+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-27T19:25:37.306+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-27T19:25:37.306+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-27T19:25:37.306+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-27T19:25:37.307+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-27T19:25:37.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-27T19:25:37.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-27T19:25:37.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-27T19:25:37.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-27T19:25:37.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-27T19:25:37.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-27T19:25:37.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-27T19:25:37.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-27T19:25:37.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-27T19:25:37.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-27T19:25:37.307+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-27T19:25:37.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-27T19:25:37.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-27T19:25:37.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-27T19:25:37.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-27T19:25:37.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-27T19:25:37.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-27T19:25:37.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-27T19:25:37.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-27T19:25:37.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-27T19:25:37.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-27T19:25:37.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-27T19:25:37.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-27T19:25:37.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-27T19:25:37.309+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-27T19:25:37.309+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-27T19:25:37.309+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-27T19:25:37.309+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-27T19:25:37.309+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-27T19:25:37.309+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-27T19:25:37.310+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-27T19:25:37.310+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-27T19:25:37.310+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-27T19:25:37.310+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-27T19:25:37.310+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-27T19:25:37.312+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-27T19:25:37.312+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-27T19:25:37.312+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-27T19:25:37.312+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-27T19:25:37.312+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-27T19:25:37.312+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-27T19:25:37.312+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-27T19:25:37.313+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-27T19:25:37.313+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-27T19:25:37.313+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-27T19:25:37.313+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-27T19:25:37.313+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-27T19:25:37.313+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-27T19:25:37.313+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-27T19:25:37.314+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-27T19:25:37.314+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-27T19:25:37.314+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-27T19:25:37.314+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-27T19:25:37.314+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-27T19:25:37.314+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-27T19:25:37.314+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-27T19:25:37.314+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-27T19:25:37.314+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-27T19:25:37.315+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-27T19:25:37.315+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-27T19:25:37.315+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-27T19:25:37.315+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-27T19:25:37.315+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-27T19:25:37.316+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-27T19:25:37.316+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-27T19:25:37.318+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-27T19:25:37.321+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-27T19:25:37.321+0200 DEBUG Registering alternate key : char -> chr
2023-01-27T19:25:37.321+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-27T19:25:37.322+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-27T19:25:37.322+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-27T19:25:37.323+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-27T19:25:37.323+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-27T19:25:37.323+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-27T19:25:37.323+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-27T19:25:37.325+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-27T19:25:37.325+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-27T19:25:37.325+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-27T19:25:37.325+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-27T19:25:37.326+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-27T19:25:37.336+0200 DEBUG abs(NUMERIC arg)
2023-01-27T19:25:37.336+0200 DEBUG Double acos(NUMERIC arg)
2023-01-27T19:25:37.337+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-27T19:25:37.337+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-27T19:25:37.337+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-27T19:25:37.337+0200 DEBUG Integer ascii(STRING arg)
2023-01-27T19:25:37.337+0200 DEBUG Double asin(NUMERIC arg)
2023-01-27T19:25:37.337+0200 DEBUG Double atan(NUMERIC arg)
2023-01-27T19:25:37.341+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-27T19:25:37.342+0200 DEBUG Double avg(NUMERIC arg)
2023-01-27T19:25:37.342+0200 DEBUG bit_and(arg)
2023-01-27T19:25:37.342+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-27T19:25:37.342+0200 DEBUG bit_or(arg)
2023-01-27T19:25:37.342+0200 DEBUG bitand(arg0, arg1)
2023-01-27T19:25:37.342+0200 DEBUG bitnot(arg)
2023-01-27T19:25:37.342+0200 DEBUG bitor(arg0, arg1)
2023-01-27T19:25:37.342+0200 DEBUG bitxor(arg0, arg1)
2023-01-27T19:25:37.342+0200 DEBUG cast(arg as Type)
2023-01-27T19:25:37.342+0200 DEBUG ceiling(NUMERIC arg)
2023-01-27T19:25:37.343+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-27T19:25:37.343+0200 DEBUG Character chr(INTEGER arg)
2023-01-27T19:25:37.343+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-27T19:25:37.343+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-27T19:25:37.343+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-27T19:25:37.343+0200 DEBUG Double cos(NUMERIC arg)
2023-01-27T19:25:37.343+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-27T19:25:37.343+0200 DEBUG Double cot(NUMERIC arg)
2023-01-27T19:25:37.343+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-27T19:25:37.343+0200 DEBUG Integer crc32(arg)
2023-01-27T19:25:37.343+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-27T19:25:37.343+0200 DEBUG Date curdate()
2023-01-27T19:25:37.343+0200 DEBUG Date current_date
2023-01-27T19:25:37.344+0200 DEBUG Time current_time
2023-01-27T19:25:37.344+0200 DEBUG Timestamp current_timestamp
2023-01-27T19:25:37.344+0200 DEBUG Time curtime()
2023-01-27T19:25:37.344+0200 DEBUG Date date(arg)
2023-01-27T19:25:37.344+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-27T19:25:37.344+0200 DEBUG Integer day(DATE arg)
2023-01-27T19:25:37.344+0200 DEBUG String dayname(DATE arg)
2023-01-27T19:25:37.344+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-27T19:25:37.344+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-27T19:25:37.344+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-27T19:25:37.344+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-27T19:25:37.344+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-27T19:25:37.344+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-27T19:25:37.344+0200 DEBUG Double exp(NUMERIC arg)
2023-01-27T19:25:37.345+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-27T19:25:37.345+0200 DEBUG first_valueANY value
2023-01-27T19:25:37.345+0200 DEBUG floor(NUMERIC arg)
2023-01-27T19:25:37.345+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-27T19:25:37.345+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T19:25:37.345+0200 DEBUG Integer hour(TIME arg)
2023-01-27T19:25:37.345+0200 DEBUG ifnull(arg0, arg1)
2023-01-27T19:25:37.346+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-27T19:25:37.346+0200 DEBUG Instant instant
2023-01-27T19:25:37.346+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-27T19:25:37.346+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-27T19:25:37.346+0200 DEBUG Date last_day(DATE arg)
2023-01-27T19:25:37.346+0200 DEBUG last_valueANY value
2023-01-27T19:25:37.346+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-27T19:25:37.346+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T19:25:37.346+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-27T19:25:37.346+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-27T19:25:37.346+0200 DEBUG Double ln(NUMERIC arg)
2023-01-27T19:25:37.346+0200 DEBUG LocalDate local_date
2023-01-27T19:25:37.346+0200 DEBUG LocalDateTime local_datetime
2023-01-27T19:25:37.346+0200 DEBUG LocalTime local_time
2023-01-27T19:25:37.347+0200 DEBUG Timestamp localtime
2023-01-27T19:25:37.347+0200 DEBUG Timestamp localtimestamp
2023-01-27T19:25:37.347+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-27T19:25:37.347+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-27T19:25:37.347+0200 DEBUG Double log10(NUMERIC arg)
2023-01-27T19:25:37.347+0200 DEBUG Double log2(NUMERIC arg)
2023-01-27T19:25:37.347+0200 DEBUG String lower(STRING string)
2023-01-27T19:25:37.348+0200 DEBUG String lpad(string, length[, padding])
2023-01-27T19:25:37.348+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-27T19:25:37.348+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-27T19:25:37.348+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-27T19:25:37.348+0200 DEBUG max(COMPARABLE arg)
2023-01-27T19:25:37.348+0200 DEBUG String md5(arg)
2023-01-27T19:25:37.348+0200 DEBUG Integer microsecond(TIME arg)
2023-01-27T19:25:37.348+0200 DEBUG min(COMPARABLE arg)
2023-01-27T19:25:37.348+0200 DEBUG Integer minute(TIME arg)
2023-01-27T19:25:37.348+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-27T19:25:37.348+0200 DEBUG Integer month(DATE arg)
2023-01-27T19:25:37.348+0200 DEBUG String monthname(DATE arg)
2023-01-27T19:25:37.348+0200 DEBUG Timestamp now()
2023-01-27T19:25:37.348+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-27T19:25:37.349+0200 DEBUG nullif(arg0, arg1)
2023-01-27T19:25:37.349+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-27T19:25:37.349+0200 DEBUG OffsetDateTime offset_datetime
2023-01-27T19:25:37.349+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-27T19:25:37.349+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-27T19:25:37.349+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-27T19:25:37.349+0200 DEBUG Double pi
2023-01-27T19:25:37.349+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-27T19:25:37.349+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-27T19:25:37.349+0200 DEBUG Integer quarter(DATE arg)
2023-01-27T19:25:37.349+0200 DEBUG Double radians(NUMERIC arg)
2023-01-27T19:25:37.349+0200 DEBUG Double rand([INTEGER seed])
2023-01-27T19:25:37.349+0200 DEBUG Long rank([arg0[, ...]])
2023-01-27T19:25:37.350+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-27T19:25:37.350+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-27T19:25:37.350+0200 DEBUG String reverse(STRING arg)
2023-01-27T19:25:37.350+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-27T19:25:37.350+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-27T19:25:37.350+0200 DEBUG Long row_number()
2023-01-27T19:25:37.350+0200 DEBUG String rpad(string, length[, padding])
2023-01-27T19:25:37.350+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-27T19:25:37.350+0200 DEBUG Integer second(TIME arg)
2023-01-27T19:25:37.350+0200 DEBUG String sha(arg)
2023-01-27T19:25:37.350+0200 DEBUG String sha1(arg)
2023-01-27T19:25:37.350+0200 DEBUG String sha2(arg0, arg1)
2023-01-27T19:25:37.350+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-27T19:25:37.350+0200 DEBUG Double sin(NUMERIC arg)
2023-01-27T19:25:37.350+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-27T19:25:37.351+0200 DEBUG String soundex(arg)
2023-01-27T19:25:37.351+0200 DEBUG String space(INTEGER arg)
2023-01-27T19:25:37.351+0200 DEBUG Object sql
2023-01-27T19:25:37.351+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-27T19:25:37.351+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-27T19:25:37.351+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-27T19:25:37.351+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-27T19:25:37.351+0200 DEBUG String str(arg)
2023-01-27T19:25:37.351+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-27T19:25:37.351+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-27T19:25:37.351+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-27T19:25:37.352+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-27T19:25:37.352+0200 DEBUG sum(arg)
2023-01-27T19:25:37.352+0200 DEBUG Timestamp sysdate()
2023-01-27T19:25:37.353+0200 DEBUG Double tan(NUMERIC arg)
2023-01-27T19:25:37.353+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-27T19:25:37.353+0200 DEBUG String time(arg)
2023-01-27T19:25:37.353+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-27T19:25:37.353+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T19:25:37.353+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-27T19:25:37.353+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-27T19:25:37.353+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-27T19:25:37.353+0200 DEBUG String upper(STRING string)
2023-01-27T19:25:37.353+0200 DEBUG Date utc_date
2023-01-27T19:25:37.353+0200 DEBUG Time utc_time
2023-01-27T19:25:37.354+0200 DEBUG Timestamp utc_timestamp
2023-01-27T19:25:37.354+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-27T19:25:37.354+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-27T19:25:37.354+0200 DEBUG Double variance(NUMERIC arg)
2023-01-27T19:25:37.354+0200 DEBUG Integer week(DATE arg)
2023-01-27T19:25:37.354+0200 DEBUG Integer year(DATE arg)
2023-01-27T19:25:37.355+0200 DEBUG Character char(INTEGER arg)
2023-01-27T19:25:37.355+0200 DEBUG Date current date
2023-01-27T19:25:37.355+0200 DEBUG Time current time
2023-01-27T19:25:37.355+0200 DEBUG Timestamp current timestamp
2023-01-27T19:25:37.355+0200 DEBUG Instant current_instant
2023-01-27T19:25:37.355+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T19:25:37.355+0200 DEBUG Integer day(DATE arg)
2023-01-27T19:25:37.355+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-27T19:25:37.355+0200 DEBUG LocalDate local date
2023-01-27T19:25:37.355+0200 DEBUG LocalDateTime local datetime
2023-01-27T19:25:37.356+0200 DEBUG LocalTime local time
2023-01-27T19:25:37.356+0200 DEBUG OffsetDateTime offset datetime
2023-01-27T19:25:37.356+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-27T19:25:37.358+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-27T19:25:37.611+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T19:25:37.611+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T19:25:37.986+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:17)
2023-01-27T19:25:38.051+0200 DEBUG Starting post-init callbacks
2023-01-27T19:25:38.051+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-27T19:25:38.052+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-27T19:25:38.158+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-27T19:25:38.158+0200 DEBUG  Version select: select id from users where id =?
2023-01-27T19:25:38.158+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-27T19:25:38.159+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-27T19:25:38.159+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-27T19:25:38.176+0200 DEBUG Created new SQL alias : u1_0
2023-01-27T19:25:38.180+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users]
2023-01-27T19:25:38.256+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-27T19:25:38.262+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-27T19:25:38.328+0200 DEBUG Checking 0 named HQL queries
2023-01-27T19:25:38.328+0200 DEBUG Checking 0 named SQL queries
2023-01-27T19:25:38.388+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-27T19:25:38.433+0200 DEBUG No alter strings for table : users
2023-01-27T19:25:38.433+0200 DEBUG No alter strings for table : users_SEQ
2023-01-27T19:25:38.452+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T19:25:38.453+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-27T19:25:38.471+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-27T19:25:38.475+0200 DEBUG Registering SessionFactory: 370b28e0-5182-4a8c-aaf8-d22cfcd67fc4 (<unnamed>)
2023-01-27T19:25:38.475+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-27T19:25:38.605+0200 DEBUG Statistics initialized [enabled=false]
2023-01-27T19:25:38.613+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-27T19:25:38.617+0200 DEBUG begin
2023-01-27T19:25:38.704+0200 DEBUG 
    select
        next_val as id_val 
    from
        users_SEQ for update
2023-01-27T19:25:38.708+0200 DEBUG 
    update
        users_SEQ 
    set
        next_val= ? 
    where
        next_val=?
2023-01-27T19:25:39.058+0200 DEBUG Generated identifier: 102, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2023-01-27T19:25:39.076+0200 DEBUG committing
2023-01-27T19:25:39.076+0200 DEBUG Processing flush-time cascades
2023-01-27T19:25:39.077+0200 DEBUG Dirty checking collections
2023-01-27T19:25:39.085+0200 DEBUG Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-01-27T19:25:39.086+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-27T19:25:39.087+0200 DEBUG Listing entities:
2023-01-27T19:25:39.087+0200 DEBUG edu.itstep.sql.Users{password=test133, id=102, userName=user104}
2023-01-27T19:25:39.103+0200 DEBUG 
    insert 
    into
        users
        (password,user_name,id) 
    values
        (?,?,?)
2023-01-27T19:25:39.109+0200 DEBUG Unable to release JDBC result set [Cannot invoke "java.sql.ResultSet.close()" because "resultSet" is null]
2023-01-27T19:25:39.520+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T19:25:39.526+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T19:25:39.528+0200 DEBUG HHH000031: Closing
2023-01-27T19:25:39.529+0200 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1cd6b1bd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-27T19:25:39.533+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-27T19:25:39.534+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T19:25:39.545+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-27T19:53:05.848+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-27T19:53:05.883+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-27T19:53:05.892+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-27T19:53:05.949+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-27T19:53:05.953+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-27T19:53:05.955+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-27T19:53:06.465+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-27T19:53:06.484+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-27T19:53:06.998+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-27T19:53:07.005+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-27T19:53:07.006+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-27T19:53:07.009+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T19:53:07.010+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T19:53:07.011+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-27T19:53:07.013+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-27T19:53:07.014+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-27T19:53:07.016+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T19:53:07.017+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-27T19:53:07.018+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-27T19:53:07.019+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T19:53:07.021+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-27T19:53:07.037+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-27T19:53:07.039+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-27T19:53:07.369+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:53:07.369+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:53:07.370+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:53:07.370+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T19:53:07.370+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T19:53:07.371+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T19:53:07.371+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T19:53:07.371+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T19:53:07.371+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T19:53:07.371+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:53:07.372+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:53:07.372+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:53:07.372+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T19:53:07.372+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T19:53:07.372+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T19:53:07.372+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:53:07.373+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:53:07.373+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:53:07.373+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:53:07.373+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-27T19:53:07.374+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T19:53:07.374+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T19:53:07.374+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T19:53:07.374+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T19:53:07.374+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T19:53:07.375+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T19:53:07.375+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T19:53:07.375+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T19:53:07.375+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T19:53:07.375+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T19:53:07.375+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:53:07.376+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:53:07.376+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:53:07.376+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T19:53:07.376+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T19:53:07.376+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T19:53:07.376+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T19:53:07.377+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T19:53:07.377+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T19:53:07.377+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T19:53:07.377+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T19:53:07.378+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T19:53:07.378+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T19:53:07.378+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T19:53:07.378+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T19:53:07.378+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T19:53:07.379+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-27T19:53:07.379+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T19:53:07.379+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T19:53:07.379+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T19:53:07.379+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T19:53:07.380+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T19:53:07.380+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T19:53:07.380+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T19:53:07.380+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T19:53:07.380+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T19:53:07.380+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T19:53:07.381+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T19:53:07.381+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T19:53:07.381+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T19:53:07.381+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T19:53:07.381+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T19:53:07.381+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-27T19:53:07.382+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-27T19:53:07.382+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-27T19:53:07.382+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-27T19:53:07.382+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T19:53:07.382+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T19:53:07.383+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T19:53:07.383+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T19:53:07.383+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T19:53:07.383+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T19:53:07.383+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T19:53:07.384+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T19:53:07.384+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T19:53:07.384+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T19:53:07.384+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T19:53:07.384+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T19:53:07.384+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T19:53:07.384+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-27T19:53:07.385+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T19:53:07.385+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T19:53:07.385+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T19:53:07.385+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T19:53:07.385+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T19:53:07.386+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T19:53:07.386+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T19:53:07.386+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T19:53:07.386+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T19:53:07.386+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T19:53:07.386+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T19:53:07.386+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T19:53:07.387+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T19:53:07.387+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T19:53:07.387+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T19:53:07.387+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T19:53:07.387+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-27T19:53:07.388+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T19:53:07.388+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T19:53:07.388+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T19:53:07.388+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T19:53:07.389+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T19:53:07.389+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T19:53:07.389+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-27T19:53:07.389+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T19:53:07.390+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T19:53:07.390+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T19:53:07.390+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T19:53:07.390+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T19:53:07.390+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T19:53:07.391+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T19:53:07.391+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T19:53:07.391+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T19:53:07.391+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T19:53:07.391+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T19:53:07.391+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T19:53:07.392+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T19:53:07.392+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T19:53:07.392+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-27T19:53:07.392+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-27T19:53:07.392+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-27T19:53:07.400+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-27T19:53:07.400+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-27T19:53:07.402+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-27T19:53:07.403+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-27T19:53:07.403+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-27T19:53:07.403+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-27T19:53:07.403+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-27T19:53:07.403+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-27T19:53:07.403+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-27T19:53:07.404+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-27T19:53:07.404+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-27T19:53:07.451+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-27T19:53:07.460+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-27T19:53:07.460+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T19:53:07.461+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-27T19:53:07.461+0200 INFO HHH10001003: Autocommit mode: false
2023-01-27T19:53:07.466+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-27T19:53:07.466+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-27T19:53:08.101+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-27T19:53:08.101+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-27T19:53:08.101+0200 DEBUG JDBC version : 4.2
2023-01-27T19:53:08.171+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-27T19:53:08.179+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-27T19:53:08.180+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-27T19:53:08.207+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-27T19:53:08.208+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-27T19:53:08.208+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-27T19:53:08.208+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-27T19:53:08.209+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-27T19:53:08.209+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-27T19:53:08.209+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-27T19:53:08.210+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-27T19:53:08.210+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-27T19:53:08.212+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-27T19:53:08.212+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-27T19:53:08.213+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-27T19:53:08.216+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T19:53:08.216+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T19:53:08.219+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-27T19:53:08.220+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-27T19:53:08.231+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:53:08.231+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:53:08.231+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:53:08.231+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:53:08.231+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:53:08.231+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:53:08.234+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-27T19:53:08.292+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-27T19:53:08.340+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-27T19:53:08.367+0200 DEBUG Import with entity name Users
2023-01-27T19:53:08.380+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-27T19:53:08.393+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-27T19:53:08.419+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-27T19:53:08.424+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T19:53:08.424+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T19:53:08.426+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-27T19:53:08.435+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-27T19:53:08.447+0200 DEBUG building BasicValue for id
2023-01-27T19:53:08.454+0200 DEBUG Skipping column re-registration: users.id
2023-01-27T19:53:08.456+0200 DEBUG Building property id
2023-01-27T19:53:08.461+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-27T19:53:08.463+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-27T19:53:08.463+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-27T19:53:08.463+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-27T19:53:08.464+0200 DEBUG building BasicValue for password
2023-01-27T19:53:08.464+0200 DEBUG Skipping column re-registration: users.password
2023-01-27T19:53:08.464+0200 DEBUG Building property password
2023-01-27T19:53:08.464+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-27T19:53:08.465+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-27T19:53:08.465+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-27T19:53:08.465+0200 DEBUG building BasicValue for userName
2023-01-27T19:53:08.465+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-27T19:53:08.465+0200 DEBUG Building property userName
2023-01-27T19:53:08.476+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-27T19:53:08.476+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-27T19:53:08.479+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-27T19:53:08.483+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-27T19:53:08.591+0200 DEBUG Building session factory
2023-01-27T19:53:08.699+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T19:53:08.706+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-27T19:53:08.706+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-27T19:53:08.720+0200 DEBUG Instantiated session factory
2023-01-27T19:53:08.745+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-27T19:53:08.907+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-27T19:53:08.907+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-27T19:53:08.910+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-27T19:53:08.911+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-27T19:53:08.912+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-27T19:53:08.913+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-27T19:53:08.914+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-27T19:53:08.915+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-27T19:53:08.915+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-27T19:53:08.915+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-27T19:53:08.915+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-27T19:53:08.916+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-27T19:53:08.916+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-27T19:53:08.916+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-27T19:53:08.916+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-27T19:53:08.916+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-27T19:53:08.917+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-27T19:53:08.917+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-27T19:53:08.917+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-27T19:53:08.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-27T19:53:08.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-27T19:53:08.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-27T19:53:08.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-27T19:53:08.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-27T19:53:08.921+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-27T19:53:08.921+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-27T19:53:08.921+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-27T19:53:08.922+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-27T19:53:08.922+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-27T19:53:08.923+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-27T19:53:08.923+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-27T19:53:08.923+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-27T19:53:08.924+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-27T19:53:08.924+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-27T19:53:08.925+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-27T19:53:08.926+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-27T19:53:08.926+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-27T19:53:08.926+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-27T19:53:08.926+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-27T19:53:08.927+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-27T19:53:08.927+0200 DEBUG Registering alternate key : length -> character_length
2023-01-27T19:53:08.931+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-27T19:53:08.932+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-27T19:53:08.933+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-27T19:53:08.934+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-27T19:53:08.935+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-27T19:53:08.936+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-27T19:53:08.937+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-27T19:53:08.937+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-27T19:53:08.938+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-27T19:53:08.938+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-27T19:53:08.938+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-27T19:53:08.938+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-27T19:53:08.939+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-27T19:53:08.941+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-27T19:53:08.943+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-27T19:53:08.944+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-27T19:53:08.945+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-27T19:53:08.945+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-27T19:53:08.946+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-27T19:53:08.946+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-27T19:53:08.946+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-27T19:53:08.946+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-27T19:53:08.946+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-27T19:53:08.946+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-27T19:53:08.946+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-27T19:53:08.946+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-27T19:53:08.947+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-27T19:53:08.947+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-27T19:53:08.947+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-27T19:53:08.947+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-27T19:53:08.947+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-27T19:53:08.947+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-27T19:53:08.947+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-27T19:53:08.948+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-27T19:53:08.949+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-27T19:53:08.950+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-27T19:53:08.950+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-27T19:53:08.950+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-27T19:53:08.951+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-27T19:53:08.951+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-27T19:53:08.951+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-27T19:53:08.951+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-27T19:53:08.951+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-27T19:53:08.952+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-27T19:53:08.952+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-27T19:53:08.952+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-27T19:53:08.952+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-27T19:53:08.952+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-27T19:53:08.954+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-27T19:53:08.954+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-27T19:53:08.954+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-27T19:53:08.954+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-27T19:53:08.955+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-27T19:53:08.955+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-27T19:53:08.955+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-27T19:53:08.955+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-27T19:53:08.956+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-27T19:53:08.956+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-27T19:53:08.956+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-27T19:53:08.956+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-27T19:53:08.956+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-27T19:53:08.957+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-27T19:53:08.957+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-27T19:53:08.957+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-27T19:53:08.957+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-27T19:53:08.957+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-27T19:53:08.957+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-27T19:53:08.957+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-27T19:53:08.957+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-27T19:53:08.958+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-27T19:53:08.958+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-27T19:53:08.959+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-27T19:53:08.959+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-27T19:53:08.959+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-27T19:53:08.959+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-27T19:53:08.959+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-27T19:53:08.960+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-27T19:53:08.960+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-27T19:53:08.960+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-27T19:53:08.961+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-27T19:53:08.962+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-27T19:53:08.963+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-27T19:53:08.963+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-27T19:53:08.963+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-27T19:53:08.963+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-27T19:53:08.964+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-27T19:53:08.964+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-27T19:53:08.964+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-27T19:53:08.964+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-27T19:53:08.964+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-27T19:53:08.964+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-27T19:53:08.965+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-27T19:53:08.965+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-27T19:53:08.965+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-27T19:53:08.965+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-27T19:53:08.965+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-27T19:53:08.966+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-27T19:53:08.966+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-27T19:53:08.967+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-27T19:53:08.970+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-27T19:53:08.971+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-27T19:53:08.971+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-27T19:53:08.971+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-27T19:53:08.971+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-27T19:53:08.972+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-27T19:53:08.972+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-27T19:53:08.972+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-27T19:53:08.972+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-27T19:53:08.972+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-27T19:53:08.972+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-27T19:53:08.972+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-27T19:53:08.973+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-27T19:53:08.973+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-27T19:53:08.973+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-27T19:53:08.973+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-27T19:53:08.986+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-27T19:53:08.986+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-27T19:53:08.987+0200 DEBUG Registering alternate key : char -> chr
2023-01-27T19:53:08.987+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-27T19:53:08.987+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-27T19:53:08.994+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-27T19:53:08.995+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-27T19:53:08.996+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-27T19:53:08.996+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-27T19:53:08.996+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-27T19:53:08.999+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-27T19:53:08.999+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-27T19:53:08.999+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-27T19:53:09.000+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-27T19:53:09.105+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-27T19:53:09.124+0200 DEBUG abs(NUMERIC arg)
2023-01-27T19:53:09.155+0200 DEBUG Double acos(NUMERIC arg)
2023-01-27T19:53:09.155+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-27T19:53:09.156+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-27T19:53:09.156+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-27T19:53:09.156+0200 DEBUG Integer ascii(STRING arg)
2023-01-27T19:53:09.156+0200 DEBUG Double asin(NUMERIC arg)
2023-01-27T19:53:09.156+0200 DEBUG Double atan(NUMERIC arg)
2023-01-27T19:53:09.174+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-27T19:53:09.175+0200 DEBUG Double avg(NUMERIC arg)
2023-01-27T19:53:09.175+0200 DEBUG bit_and(arg)
2023-01-27T19:53:09.181+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-27T19:53:09.181+0200 DEBUG bit_or(arg)
2023-01-27T19:53:09.181+0200 DEBUG bitand(arg0, arg1)
2023-01-27T19:53:09.182+0200 DEBUG bitnot(arg)
2023-01-27T19:53:09.182+0200 DEBUG bitor(arg0, arg1)
2023-01-27T19:53:09.182+0200 DEBUG bitxor(arg0, arg1)
2023-01-27T19:53:09.182+0200 DEBUG cast(arg as Type)
2023-01-27T19:53:09.182+0200 DEBUG ceiling(NUMERIC arg)
2023-01-27T19:53:09.182+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-27T19:53:09.182+0200 DEBUG Character chr(INTEGER arg)
2023-01-27T19:53:09.184+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-27T19:53:09.184+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-27T19:53:09.184+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-27T19:53:09.184+0200 DEBUG Double cos(NUMERIC arg)
2023-01-27T19:53:09.185+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-27T19:53:09.185+0200 DEBUG Double cot(NUMERIC arg)
2023-01-27T19:53:09.185+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-27T19:53:09.185+0200 DEBUG Integer crc32(arg)
2023-01-27T19:53:09.191+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-27T19:53:09.191+0200 DEBUG Date curdate()
2023-01-27T19:53:09.191+0200 DEBUG Date current_date
2023-01-27T19:53:09.191+0200 DEBUG Time current_time
2023-01-27T19:53:09.191+0200 DEBUG Timestamp current_timestamp
2023-01-27T19:53:09.191+0200 DEBUG Time curtime()
2023-01-27T19:53:09.192+0200 DEBUG Date date(arg)
2023-01-27T19:53:09.193+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-27T19:53:09.193+0200 DEBUG Integer day(DATE arg)
2023-01-27T19:53:09.193+0200 DEBUG String dayname(DATE arg)
2023-01-27T19:53:09.194+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-27T19:53:09.196+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-27T19:53:09.196+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-27T19:53:09.197+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-27T19:53:09.197+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-27T19:53:09.197+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-27T19:53:09.197+0200 DEBUG Double exp(NUMERIC arg)
2023-01-27T19:53:09.198+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-27T19:53:09.198+0200 DEBUG first_valueANY value
2023-01-27T19:53:09.198+0200 DEBUG floor(NUMERIC arg)
2023-01-27T19:53:09.199+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-27T19:53:09.199+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T19:53:09.199+0200 DEBUG Integer hour(TIME arg)
2023-01-27T19:53:09.201+0200 DEBUG ifnull(arg0, arg1)
2023-01-27T19:53:09.201+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-27T19:53:09.201+0200 DEBUG Instant instant
2023-01-27T19:53:09.201+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-27T19:53:09.201+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-27T19:53:09.258+0200 DEBUG Date last_day(DATE arg)
2023-01-27T19:53:09.259+0200 DEBUG last_valueANY value
2023-01-27T19:53:09.259+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-27T19:53:09.259+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T19:53:09.259+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-27T19:53:09.259+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-27T19:53:09.259+0200 DEBUG Double ln(NUMERIC arg)
2023-01-27T19:53:09.259+0200 DEBUG LocalDate local_date
2023-01-27T19:53:09.261+0200 DEBUG LocalDateTime local_datetime
2023-01-27T19:53:09.261+0200 DEBUG LocalTime local_time
2023-01-27T19:53:09.263+0200 DEBUG Timestamp localtime
2023-01-27T19:53:09.263+0200 DEBUG Timestamp localtimestamp
2023-01-27T19:53:09.263+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-27T19:53:09.263+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-27T19:53:09.263+0200 DEBUG Double log10(NUMERIC arg)
2023-01-27T19:53:09.264+0200 DEBUG Double log2(NUMERIC arg)
2023-01-27T19:53:09.264+0200 DEBUG String lower(STRING string)
2023-01-27T19:53:09.264+0200 DEBUG String lpad(string, length[, padding])
2023-01-27T19:53:09.264+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-27T19:53:09.264+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-27T19:53:09.264+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-27T19:53:09.265+0200 DEBUG max(COMPARABLE arg)
2023-01-27T19:53:09.265+0200 DEBUG String md5(arg)
2023-01-27T19:53:09.265+0200 DEBUG Integer microsecond(TIME arg)
2023-01-27T19:53:09.267+0200 DEBUG min(COMPARABLE arg)
2023-01-27T19:53:09.267+0200 DEBUG Integer minute(TIME arg)
2023-01-27T19:53:09.270+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-27T19:53:09.270+0200 DEBUG Integer month(DATE arg)
2023-01-27T19:53:09.271+0200 DEBUG String monthname(DATE arg)
2023-01-27T19:53:09.271+0200 DEBUG Timestamp now()
2023-01-27T19:53:09.271+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-27T19:53:09.271+0200 DEBUG nullif(arg0, arg1)
2023-01-27T19:53:09.271+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-27T19:53:09.271+0200 DEBUG OffsetDateTime offset_datetime
2023-01-27T19:53:09.271+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-27T19:53:09.272+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-27T19:53:09.272+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-27T19:53:09.272+0200 DEBUG Double pi
2023-01-27T19:53:09.272+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-27T19:53:09.272+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-27T19:53:09.273+0200 DEBUG Integer quarter(DATE arg)
2023-01-27T19:53:09.273+0200 DEBUG Double radians(NUMERIC arg)
2023-01-27T19:53:09.273+0200 DEBUG Double rand([INTEGER seed])
2023-01-27T19:53:09.273+0200 DEBUG Long rank([arg0[, ...]])
2023-01-27T19:53:09.273+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-27T19:53:09.273+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-27T19:53:09.273+0200 DEBUG String reverse(STRING arg)
2023-01-27T19:53:09.273+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-27T19:53:09.273+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-27T19:53:09.274+0200 DEBUG Long row_number()
2023-01-27T19:53:09.274+0200 DEBUG String rpad(string, length[, padding])
2023-01-27T19:53:09.274+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-27T19:53:09.274+0200 DEBUG Integer second(TIME arg)
2023-01-27T19:53:09.274+0200 DEBUG String sha(arg)
2023-01-27T19:53:09.275+0200 DEBUG String sha1(arg)
2023-01-27T19:53:09.275+0200 DEBUG String sha2(arg0, arg1)
2023-01-27T19:53:09.275+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-27T19:53:09.275+0200 DEBUG Double sin(NUMERIC arg)
2023-01-27T19:53:09.275+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-27T19:53:09.276+0200 DEBUG String soundex(arg)
2023-01-27T19:53:09.276+0200 DEBUG String space(INTEGER arg)
2023-01-27T19:53:09.276+0200 DEBUG Object sql
2023-01-27T19:53:09.276+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-27T19:53:09.276+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-27T19:53:09.277+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-27T19:53:09.277+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-27T19:53:09.277+0200 DEBUG String str(arg)
2023-01-27T19:53:09.277+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-27T19:53:09.277+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-27T19:53:09.277+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-27T19:53:09.278+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-27T19:53:09.279+0200 DEBUG sum(arg)
2023-01-27T19:53:09.280+0200 DEBUG Timestamp sysdate()
2023-01-27T19:53:09.280+0200 DEBUG Double tan(NUMERIC arg)
2023-01-27T19:53:09.280+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-27T19:53:09.280+0200 DEBUG String time(arg)
2023-01-27T19:53:09.281+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-27T19:53:09.281+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T19:53:09.282+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-27T19:53:09.282+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-27T19:53:09.282+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-27T19:53:09.282+0200 DEBUG String upper(STRING string)
2023-01-27T19:53:09.282+0200 DEBUG Date utc_date
2023-01-27T19:53:09.282+0200 DEBUG Time utc_time
2023-01-27T19:53:09.282+0200 DEBUG Timestamp utc_timestamp
2023-01-27T19:53:09.282+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-27T19:53:09.283+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-27T19:53:09.283+0200 DEBUG Double variance(NUMERIC arg)
2023-01-27T19:53:09.283+0200 DEBUG Integer week(DATE arg)
2023-01-27T19:53:09.283+0200 DEBUG Integer year(DATE arg)
2023-01-27T19:53:09.285+0200 DEBUG Character char(INTEGER arg)
2023-01-27T19:53:09.285+0200 DEBUG Date current date
2023-01-27T19:53:09.285+0200 DEBUG Time current time
2023-01-27T19:53:09.285+0200 DEBUG Timestamp current timestamp
2023-01-27T19:53:09.286+0200 DEBUG Instant current_instant
2023-01-27T19:53:09.286+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T19:53:09.286+0200 DEBUG Integer day(DATE arg)
2023-01-27T19:53:09.286+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-27T19:53:09.286+0200 DEBUG LocalDate local date
2023-01-27T19:53:09.286+0200 DEBUG LocalDateTime local datetime
2023-01-27T19:53:09.286+0200 DEBUG LocalTime local time
2023-01-27T19:53:09.286+0200 DEBUG OffsetDateTime offset datetime
2023-01-27T19:53:09.287+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-27T19:53:09.293+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-27T19:53:09.543+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T19:53:09.544+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T19:53:09.956+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:17)
2023-01-27T19:53:10.019+0200 DEBUG Starting post-init callbacks
2023-01-27T19:53:10.019+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-27T19:53:10.020+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-27T19:53:10.112+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-27T19:53:10.112+0200 DEBUG  Version select: select id from users where id =?
2023-01-27T19:53:10.112+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-27T19:53:10.113+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-27T19:53:10.113+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-27T19:53:10.129+0200 DEBUG Created new SQL alias : u1_0
2023-01-27T19:53:10.132+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users]
2023-01-27T19:53:10.157+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-27T19:53:10.163+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-27T19:53:10.277+0200 DEBUG Checking 0 named HQL queries
2023-01-27T19:53:10.277+0200 DEBUG Checking 0 named SQL queries
2023-01-27T19:53:10.347+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-27T19:53:10.454+0200 DEBUG No alter strings for table : users
2023-01-27T19:53:10.454+0200 DEBUG No alter strings for table : users_SEQ
2023-01-27T19:53:10.479+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T19:53:10.479+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-27T19:53:10.497+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-27T19:53:10.500+0200 DEBUG Registering SessionFactory: 33f35a33-2c6f-4d4c-b88d-1005cca9a07b (<unnamed>)
2023-01-27T19:53:10.501+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-27T19:53:10.584+0200 DEBUG Statistics initialized [enabled=false]
2023-01-27T19:53:10.592+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-27T19:53:10.592+0200 DEBUG begin
2023-01-27T19:53:10.717+0200 DEBUG 
    select
        next_val as id_val 
    from
        users_SEQ for update
2023-01-27T19:53:10.724+0200 DEBUG 
    update
        users_SEQ 
    set
        next_val= ? 
    where
        next_val=?
2023-01-27T19:53:10.956+0200 DEBUG Generated identifier: 152, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2023-01-27T19:53:10.976+0200 DEBUG committing
2023-01-27T19:53:10.978+0200 DEBUG Processing flush-time cascades
2023-01-27T19:53:10.979+0200 DEBUG Dirty checking collections
2023-01-27T19:53:10.988+0200 DEBUG Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-01-27T19:53:10.988+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-27T19:53:10.990+0200 DEBUG Listing entities:
2023-01-27T19:53:10.991+0200 DEBUG edu.itstep.sql.Users{password=test133, id=152, userName=user104}
2023-01-27T19:53:11.014+0200 DEBUG 
    insert 
    into
        users
        (password,user_name,id) 
    values
        (?,?,?)
2023-01-27T19:53:11.024+0200 DEBUG Unable to release JDBC result set [Cannot invoke "java.sql.ResultSet.close()" because "resultSet" is null]
2023-01-27T19:53:11.241+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T19:53:11.246+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T19:53:11.248+0200 DEBUG HHH000031: Closing
2023-01-27T19:53:11.249+0200 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1cd6b1bd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-27T19:53:11.250+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-27T19:53:11.250+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T19:53:11.259+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-27T19:59:06.642+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-27T19:59:06.670+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-27T19:59:06.679+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-27T19:59:06.726+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-27T19:59:06.730+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-27T19:59:06.732+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-27T19:59:07.186+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-27T19:59:07.203+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-27T19:59:07.638+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-27T19:59:07.646+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-27T19:59:07.646+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-27T19:59:07.649+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T19:59:07.649+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T19:59:07.650+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-27T19:59:07.652+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-27T19:59:07.653+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-27T19:59:07.655+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T19:59:07.656+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-27T19:59:07.657+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-27T19:59:07.657+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T19:59:07.658+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-27T19:59:07.670+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-27T19:59:07.673+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-27T19:59:07.967+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@57ac5227
2023-01-27T19:59:07.967+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@57ac5227
2023-01-27T19:59:07.968+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@57ac5227
2023-01-27T19:59:07.968+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4ba302e0
2023-01-27T19:59:07.968+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4ba302e0
2023-01-27T19:59:07.969+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:59:07.969+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T19:59:07.969+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T19:59:07.969+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T19:59:07.969+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T19:59:07.971+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T19:59:07.971+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T19:59:07.971+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T19:59:07.972+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T19:59:07.973+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T19:59:07.973+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:59:07.973+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:59:07.973+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:59:07.973+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T19:59:07.974+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T19:59:07.974+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:59:07.974+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T19:59:07.974+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-27T19:59:07.974+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T19:59:07.975+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T19:59:07.975+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T19:59:07.975+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T19:59:07.975+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T19:59:07.975+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T19:59:07.976+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T19:59:07.976+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T19:59:07.976+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T19:59:07.976+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T19:59:07.977+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T19:59:07.977+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T19:59:07.977+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T19:59:07.978+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:59:07.978+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:59:07.978+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T19:59:07.978+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T19:59:07.979+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T19:59:07.979+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T19:59:07.979+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T19:59:07.979+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T19:59:07.980+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T19:59:07.980+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T19:59:07.980+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T19:59:07.980+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T19:59:07.981+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T19:59:07.981+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-27T19:59:07.981+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T19:59:07.981+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T19:59:07.981+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T19:59:07.982+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T19:59:07.983+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T19:59:07.983+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T19:59:07.983+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T19:59:07.983+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T19:59:07.983+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T19:59:07.984+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T19:59:07.984+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T19:59:07.984+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T19:59:07.984+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T19:59:07.985+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T19:59:07.985+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-27T19:59:07.985+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-27T19:59:07.985+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-27T19:59:07.985+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-27T19:59:07.986+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T19:59:07.986+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T19:59:07.986+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T19:59:07.986+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T19:59:07.986+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T19:59:07.986+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T19:59:07.987+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T19:59:07.987+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T19:59:07.987+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T19:59:07.987+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T19:59:07.987+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T19:59:07.988+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T19:59:07.988+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T19:59:07.988+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T19:59:07.988+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-27T19:59:07.989+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-27T19:59:07.989+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T19:59:07.989+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T19:59:07.989+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T19:59:07.989+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T19:59:07.989+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T19:59:07.990+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T19:59:07.990+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T19:59:07.990+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T19:59:07.990+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T19:59:07.991+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T19:59:07.991+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T19:59:07.991+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T19:59:07.991+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T19:59:07.991+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T19:59:07.991+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-27T19:59:07.992+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-27T19:59:07.992+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T19:59:07.992+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T19:59:07.992+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T19:59:07.992+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T19:59:07.992+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T19:59:07.993+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-27T19:59:07.993+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-27T19:59:07.993+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T19:59:07.993+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T19:59:07.993+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T19:59:07.993+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T19:59:07.994+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T19:59:07.994+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T19:59:07.994+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T19:59:07.994+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T19:59:07.994+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T19:59:07.994+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T19:59:07.994+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T19:59:07.995+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T19:59:07.995+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T19:59:07.995+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T19:59:08.002+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@fb9c7aa
2023-01-27T19:59:08.002+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@fb9c7aa
2023-01-27T19:59:08.004+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@75f65e45
2023-01-27T19:59:08.004+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6eeade6c
2023-01-27T19:59:08.004+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4a891c97
2023-01-27T19:59:08.004+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-27T19:59:08.005+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-27T19:59:08.005+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@75390459
2023-01-27T19:59:08.005+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-27T19:59:08.005+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-27T19:59:08.005+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-27T19:59:08.062+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-27T19:59:08.072+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-27T19:59:08.072+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T19:59:08.072+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-27T19:59:08.073+0200 INFO HHH10001003: Autocommit mode: false
2023-01-27T19:59:08.077+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-27T19:59:08.078+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-27T19:59:08.726+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-27T19:59:08.727+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-27T19:59:08.728+0200 DEBUG JDBC version : 4.2
2023-01-27T19:59:08.797+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-27T19:59:08.807+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-27T19:59:08.807+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-27T19:59:08.833+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3eed0f5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64030b91)
2023-01-27T19:59:08.833+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-27T19:59:08.834+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-27T19:59:08.834+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@26dcd8c0)
2023-01-27T19:59:08.834+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-27T19:59:08.834+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-27T19:59:08.835+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-27T19:59:08.835+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-27T19:59:08.835+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-27T19:59:08.837+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-27T19:59:08.837+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-27T19:59:08.838+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-27T19:59:08.842+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T19:59:08.842+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T19:59:08.847+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@61799544
2023-01-27T19:59:08.847+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@75f65e45`
2023-01-27T19:59:08.858+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:59:08.858+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:59:08.858+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T19:59:08.858+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:59:08.858+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:59:08.858+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T19:59:08.860+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bd7fe7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35d3ab60]
2023-01-27T19:59:08.924+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-27T19:59:08.977+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-27T19:59:08.994+0200 DEBUG Import with entity name Users
2023-01-27T19:59:09.011+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-27T19:59:09.030+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-27T19:59:09.057+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-27T19:59:09.064+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T19:59:09.064+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T19:59:09.068+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-27T19:59:09.076+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-27T19:59:09.090+0200 DEBUG building BasicValue for id
2023-01-27T19:59:09.095+0200 DEBUG Skipping column re-registration: users.id
2023-01-27T19:59:09.097+0200 DEBUG Building property id
2023-01-27T19:59:09.102+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-27T19:59:09.103+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-27T19:59:09.103+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-27T19:59:09.103+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-27T19:59:09.104+0200 DEBUG building BasicValue for password
2023-01-27T19:59:09.104+0200 DEBUG Skipping column re-registration: users.password
2023-01-27T19:59:09.104+0200 DEBUG Building property password
2023-01-27T19:59:09.105+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-27T19:59:09.105+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-27T19:59:09.105+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-27T19:59:09.105+0200 DEBUG building BasicValue for userName
2023-01-27T19:59:09.105+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-27T19:59:09.105+0200 DEBUG Building property userName
2023-01-27T19:59:09.114+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-27T19:59:09.115+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-27T19:59:09.117+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-27T19:59:09.121+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-27T19:59:09.266+0200 DEBUG Building session factory
2023-01-27T19:59:09.390+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T19:59:09.398+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-27T19:59:09.398+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3e104d4b, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-27T19:59:09.410+0200 DEBUG Instantiated session factory
2023-01-27T19:59:09.435+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-27T19:59:09.581+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-27T19:59:09.581+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-27T19:59:09.583+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-27T19:59:09.584+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-27T19:59:09.586+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7ff35a3f] under count; prior registration was null
2023-01-27T19:59:09.589+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@767a014e] under every; prior registration was null
2023-01-27T19:59:09.590+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@d109c4f] under any; prior registration was null
2023-01-27T19:59:09.591+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-27T19:59:09.591+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-27T19:59:09.591+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-27T19:59:09.591+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-27T19:59:09.591+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-27T19:59:09.592+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-27T19:59:09.592+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-27T19:59:09.592+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-27T19:59:09.592+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-27T19:59:09.593+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-27T19:59:09.593+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-27T19:59:09.593+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-27T19:59:09.594+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-27T19:59:09.594+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-27T19:59:09.594+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-27T19:59:09.594+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-27T19:59:09.594+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-27T19:59:09.598+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a0e7ecd] under sinh; prior registration was null
2023-01-27T19:59:09.598+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54e3658c] under cosh; prior registration was null
2023-01-27T19:59:09.598+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under tanh; prior registration was null
2023-01-27T19:59:09.598+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under pi; prior registration was null
2023-01-27T19:59:09.600+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under log; prior registration was null
2023-01-27T19:59:09.601+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-27T19:59:09.602+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-27T19:59:09.602+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-27T19:59:09.602+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-27T19:59:09.602+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-27T19:59:09.603+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-27T19:59:09.603+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-27T19:59:09.604+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-27T19:59:09.605+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-27T19:59:09.605+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-27T19:59:09.605+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-27T19:59:09.605+0200 DEBUG Registering alternate key : length -> character_length
2023-01-27T19:59:09.608+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@80bfdc6] under position; prior registration was null
2023-01-27T19:59:09.609+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6981f8f3] under overlay; prior registration was null
2023-01-27T19:59:09.610+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@68a4dcc6] under trim; prior registration was null
2023-01-27T19:59:09.612+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7e74a380] under cast; prior registration was null
2023-01-27T19:59:09.612+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6dd1c3ed] under collate; prior registration was null
2023-01-27T19:59:09.614+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6dfa915a] under extract; prior registration was null
2023-01-27T19:59:09.614+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-27T19:59:09.614+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-27T19:59:09.615+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4b6e1c0] under ifnull; prior registration was null
2023-01-27T19:59:09.615+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-27T19:59:09.615+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-27T19:59:09.616+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@15400fff] under pad; prior registration was null
2023-01-27T19:59:09.617+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@77774571] under str; prior registration was null
2023-01-27T19:59:09.619+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@a9f023e] under format; prior registration was null
2023-01-27T19:59:09.620+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@68d7a2df] under timestampadd; prior registration was null
2023-01-27T19:59:09.624+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@56a4f272] under timestampdiff; prior registration was null
2023-01-27T19:59:09.624+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-27T19:59:09.624+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-27T19:59:09.625+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c87e6b7] under current_date; prior registration was null
2023-01-27T19:59:09.625+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77bbadc] under current_time; prior registration was null
2023-01-27T19:59:09.625+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_timestamp; prior registration was null
2023-01-27T19:59:09.625+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-27T19:59:09.625+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-27T19:59:09.626+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-27T19:59:09.626+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under local_date; prior registration was null
2023-01-27T19:59:09.626+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under local_time; prior registration was null
2023-01-27T19:59:09.626+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_datetime; prior registration was null
2023-01-27T19:59:09.626+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under offset_datetime; prior registration was null
2023-01-27T19:59:09.627+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-27T19:59:09.628+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-27T19:59:09.628+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-27T19:59:09.628+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-27T19:59:09.628+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under instant; prior registration was null
2023-01-27T19:59:09.628+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-27T19:59:09.629+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5e519ad3] under sql; prior registration was null
2023-01-27T19:59:09.629+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-27T19:59:09.629+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-27T19:59:09.629+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-27T19:59:09.629+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-27T19:59:09.630+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8
2023-01-27T19:59:09.630+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-27T19:59:09.630+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-27T19:59:09.630+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-27T19:59:09.630+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-27T19:59:09.630+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-27T19:59:09.630+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-27T19:59:09.630+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-27T19:59:09.630+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-27T19:59:09.631+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@a92be4f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-27T19:59:09.631+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@53e800f9] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-27T19:59:09.632+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-27T19:59:09.632+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-27T19:59:09.632+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-27T19:59:09.632+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-27T19:59:09.632+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-27T19:59:09.632+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-27T19:59:09.632+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-27T19:59:09.632+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-27T19:59:09.632+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-27T19:59:09.632+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-27T19:59:09.632+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-27T19:59:09.632+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-27T19:59:09.633+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-27T19:59:09.633+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-27T19:59:09.633+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-27T19:59:09.633+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-27T19:59:09.633+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-27T19:59:09.633+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-27T19:59:09.633+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-27T19:59:09.633+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-27T19:59:09.633+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-27T19:59:09.633+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-27T19:59:09.634+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-27T19:59:09.634+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-27T19:59:09.634+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-27T19:59:09.634+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-27T19:59:09.634+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-27T19:59:09.634+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-27T19:59:09.635+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-27T19:59:09.635+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-27T19:59:09.635+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-27T19:59:09.635+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-27T19:59:09.635+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-27T19:59:09.635+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@337bbfdf] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@80bfdc6
2023-01-27T19:59:09.635+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-27T19:59:09.636+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-27T19:59:09.636+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-27T19:59:09.636+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under trunc; prior registration was null
2023-01-27T19:59:09.636+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-27T19:59:09.636+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-27T19:59:09.636+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under bitand; prior registration was null
2023-01-27T19:59:09.636+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e5af8e1] under bitor; prior registration was null
2023-01-27T19:59:09.636+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitxor; prior registration was null
2023-01-27T19:59:09.637+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitnot; prior registration was null
2023-01-27T19:59:09.637+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-27T19:59:09.637+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-27T19:59:09.637+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-27T19:59:09.637+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-27T19:59:09.637+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-27T19:59:09.638+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-27T19:59:09.638+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-27T19:59:09.638+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-27T19:59:09.638+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-27T19:59:09.638+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-27T19:59:09.638+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-27T19:59:09.638+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-27T19:59:09.638+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-27T19:59:09.639+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@524a076e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@a9f023e
2023-01-27T19:59:09.639+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-27T19:59:09.639+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-27T19:59:09.639+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-27T19:59:09.639+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-27T19:59:09.640+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7fdab70c
2023-01-27T19:59:09.640+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@25ad4f71
2023-01-27T19:59:09.640+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-27T19:59:09.640+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8
2023-01-27T19:59:09.640+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62dbe64e] under chr; prior registration was null
2023-01-27T19:59:09.640+0200 DEBUG Registering alternate key : char -> chr
2023-01-27T19:59:09.640+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under sysdate; prior registration was null
2023-01-27T19:59:09.640+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-27T19:59:09.642+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-27T19:59:09.642+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-27T19:59:09.642+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-27T19:59:09.643+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-27T19:59:09.643+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-27T19:59:09.645+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2aff9dff] under rank; prior registration was null
2023-01-27T19:59:09.646+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5f0f9947] under dense_rank; prior registration was null
2023-01-27T19:59:09.647+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under percent_rank; prior registration was null
2023-01-27T19:59:09.648+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under cume_dist; prior registration was null
2023-01-27T19:59:09.649+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@54d8c20d] under listagg; prior registration was null
2023-01-27T19:59:09.657+0200 DEBUG abs(NUMERIC arg)
2023-01-27T19:59:09.658+0200 DEBUG Double acos(NUMERIC arg)
2023-01-27T19:59:09.658+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-27T19:59:09.658+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-27T19:59:09.658+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-27T19:59:09.658+0200 DEBUG Integer ascii(STRING arg)
2023-01-27T19:59:09.658+0200 DEBUG Double asin(NUMERIC arg)
2023-01-27T19:59:09.658+0200 DEBUG Double atan(NUMERIC arg)
2023-01-27T19:59:09.663+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-27T19:59:09.663+0200 DEBUG Double avg(NUMERIC arg)
2023-01-27T19:59:09.663+0200 DEBUG bit_and(arg)
2023-01-27T19:59:09.663+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-27T19:59:09.663+0200 DEBUG bit_or(arg)
2023-01-27T19:59:09.664+0200 DEBUG bitand(arg0, arg1)
2023-01-27T19:59:09.664+0200 DEBUG bitnot(arg)
2023-01-27T19:59:09.664+0200 DEBUG bitor(arg0, arg1)
2023-01-27T19:59:09.664+0200 DEBUG bitxor(arg0, arg1)
2023-01-27T19:59:09.664+0200 DEBUG cast(arg as Type)
2023-01-27T19:59:09.664+0200 DEBUG ceiling(NUMERIC arg)
2023-01-27T19:59:09.664+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-27T19:59:09.664+0200 DEBUG Character chr(INTEGER arg)
2023-01-27T19:59:09.664+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-27T19:59:09.664+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-27T19:59:09.664+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-27T19:59:09.665+0200 DEBUG Double cos(NUMERIC arg)
2023-01-27T19:59:09.665+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-27T19:59:09.665+0200 DEBUG Double cot(NUMERIC arg)
2023-01-27T19:59:09.665+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-27T19:59:09.665+0200 DEBUG Integer crc32(arg)
2023-01-27T19:59:09.665+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-27T19:59:09.665+0200 DEBUG Date curdate()
2023-01-27T19:59:09.665+0200 DEBUG Date current_date
2023-01-27T19:59:09.665+0200 DEBUG Time current_time
2023-01-27T19:59:09.665+0200 DEBUG Timestamp current_timestamp
2023-01-27T19:59:09.666+0200 DEBUG Time curtime()
2023-01-27T19:59:09.666+0200 DEBUG Date date(arg)
2023-01-27T19:59:09.666+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-27T19:59:09.666+0200 DEBUG Integer day(DATE arg)
2023-01-27T19:59:09.666+0200 DEBUG String dayname(DATE arg)
2023-01-27T19:59:09.666+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-27T19:59:09.666+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-27T19:59:09.666+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-27T19:59:09.667+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-27T19:59:09.668+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-27T19:59:09.668+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-27T19:59:09.668+0200 DEBUG Double exp(NUMERIC arg)
2023-01-27T19:59:09.668+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-27T19:59:09.668+0200 DEBUG first_valueANY value
2023-01-27T19:59:09.668+0200 DEBUG floor(NUMERIC arg)
2023-01-27T19:59:09.668+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-27T19:59:09.669+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T19:59:09.669+0200 DEBUG Integer hour(TIME arg)
2023-01-27T19:59:09.669+0200 DEBUG ifnull(arg0, arg1)
2023-01-27T19:59:09.669+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-27T19:59:09.670+0200 DEBUG Instant instant
2023-01-27T19:59:09.670+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-27T19:59:09.670+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-27T19:59:09.670+0200 DEBUG Date last_day(DATE arg)
2023-01-27T19:59:09.671+0200 DEBUG last_valueANY value
2023-01-27T19:59:09.671+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-27T19:59:09.672+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T19:59:09.672+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-27T19:59:09.672+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-27T19:59:09.672+0200 DEBUG Double ln(NUMERIC arg)
2023-01-27T19:59:09.672+0200 DEBUG LocalDate local_date
2023-01-27T19:59:09.672+0200 DEBUG LocalDateTime local_datetime
2023-01-27T19:59:09.672+0200 DEBUG LocalTime local_time
2023-01-27T19:59:09.672+0200 DEBUG Timestamp localtime
2023-01-27T19:59:09.672+0200 DEBUG Timestamp localtimestamp
2023-01-27T19:59:09.672+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-27T19:59:09.672+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-27T19:59:09.673+0200 DEBUG Double log10(NUMERIC arg)
2023-01-27T19:59:09.673+0200 DEBUG Double log2(NUMERIC arg)
2023-01-27T19:59:09.673+0200 DEBUG String lower(STRING string)
2023-01-27T19:59:09.673+0200 DEBUG String lpad(string, length[, padding])
2023-01-27T19:59:09.673+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-27T19:59:09.673+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-27T19:59:09.673+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-27T19:59:09.673+0200 DEBUG max(COMPARABLE arg)
2023-01-27T19:59:09.673+0200 DEBUG String md5(arg)
2023-01-27T19:59:09.673+0200 DEBUG Integer microsecond(TIME arg)
2023-01-27T19:59:09.673+0200 DEBUG min(COMPARABLE arg)
2023-01-27T19:59:09.674+0200 DEBUG Integer minute(TIME arg)
2023-01-27T19:59:09.674+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-27T19:59:09.674+0200 DEBUG Integer month(DATE arg)
2023-01-27T19:59:09.674+0200 DEBUG String monthname(DATE arg)
2023-01-27T19:59:09.674+0200 DEBUG Timestamp now()
2023-01-27T19:59:09.674+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-27T19:59:09.674+0200 DEBUG nullif(arg0, arg1)
2023-01-27T19:59:09.674+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-27T19:59:09.674+0200 DEBUG OffsetDateTime offset_datetime
2023-01-27T19:59:09.674+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-27T19:59:09.674+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-27T19:59:09.674+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-27T19:59:09.674+0200 DEBUG Double pi
2023-01-27T19:59:09.674+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-27T19:59:09.674+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-27T19:59:09.675+0200 DEBUG Integer quarter(DATE arg)
2023-01-27T19:59:09.675+0200 DEBUG Double radians(NUMERIC arg)
2023-01-27T19:59:09.675+0200 DEBUG Double rand([INTEGER seed])
2023-01-27T19:59:09.675+0200 DEBUG Long rank([arg0[, ...]])
2023-01-27T19:59:09.675+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-27T19:59:09.675+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-27T19:59:09.675+0200 DEBUG String reverse(STRING arg)
2023-01-27T19:59:09.675+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-27T19:59:09.675+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-27T19:59:09.675+0200 DEBUG Long row_number()
2023-01-27T19:59:09.676+0200 DEBUG String rpad(string, length[, padding])
2023-01-27T19:59:09.676+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-27T19:59:09.676+0200 DEBUG Integer second(TIME arg)
2023-01-27T19:59:09.676+0200 DEBUG String sha(arg)
2023-01-27T19:59:09.676+0200 DEBUG String sha1(arg)
2023-01-27T19:59:09.676+0200 DEBUG String sha2(arg0, arg1)
2023-01-27T19:59:09.676+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-27T19:59:09.676+0200 DEBUG Double sin(NUMERIC arg)
2023-01-27T19:59:09.676+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-27T19:59:09.677+0200 DEBUG String soundex(arg)
2023-01-27T19:59:09.677+0200 DEBUG String space(INTEGER arg)
2023-01-27T19:59:09.677+0200 DEBUG Object sql
2023-01-27T19:59:09.677+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-27T19:59:09.677+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-27T19:59:09.677+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-27T19:59:09.678+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-27T19:59:09.678+0200 DEBUG String str(arg)
2023-01-27T19:59:09.678+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-27T19:59:09.678+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-27T19:59:09.678+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-27T19:59:09.678+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-27T19:59:09.678+0200 DEBUG sum(arg)
2023-01-27T19:59:09.678+0200 DEBUG Timestamp sysdate()
2023-01-27T19:59:09.678+0200 DEBUG Double tan(NUMERIC arg)
2023-01-27T19:59:09.678+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-27T19:59:09.678+0200 DEBUG String time(arg)
2023-01-27T19:59:09.678+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-27T19:59:09.679+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T19:59:09.679+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-27T19:59:09.679+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-27T19:59:09.679+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-27T19:59:09.680+0200 DEBUG String upper(STRING string)
2023-01-27T19:59:09.680+0200 DEBUG Date utc_date
2023-01-27T19:59:09.680+0200 DEBUG Time utc_time
2023-01-27T19:59:09.680+0200 DEBUG Timestamp utc_timestamp
2023-01-27T19:59:09.680+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-27T19:59:09.680+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-27T19:59:09.680+0200 DEBUG Double variance(NUMERIC arg)
2023-01-27T19:59:09.680+0200 DEBUG Integer week(DATE arg)
2023-01-27T19:59:09.680+0200 DEBUG Integer year(DATE arg)
2023-01-27T19:59:09.681+0200 DEBUG Character char(INTEGER arg)
2023-01-27T19:59:09.681+0200 DEBUG Date current date
2023-01-27T19:59:09.681+0200 DEBUG Time current time
2023-01-27T19:59:09.682+0200 DEBUG Timestamp current timestamp
2023-01-27T19:59:09.682+0200 DEBUG Instant current_instant
2023-01-27T19:59:09.682+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T19:59:09.682+0200 DEBUG Integer day(DATE arg)
2023-01-27T19:59:09.682+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-27T19:59:09.682+0200 DEBUG LocalDate local date
2023-01-27T19:59:09.682+0200 DEBUG LocalDateTime local datetime
2023-01-27T19:59:09.682+0200 DEBUG LocalTime local time
2023-01-27T19:59:09.682+0200 DEBUG OffsetDateTime offset datetime
2023-01-27T19:59:09.682+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-27T19:59:09.684+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bd7fe7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7e642b88]
2023-01-27T19:59:09.916+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T19:59:09.917+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T19:59:10.247+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:17)
2023-01-27T19:59:10.319+0200 DEBUG Starting post-init callbacks
2023-01-27T19:59:10.319+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-27T19:59:10.320+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-27T19:59:10.415+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-27T19:59:10.415+0200 DEBUG  Version select: select id from users where id =?
2023-01-27T19:59:10.416+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-27T19:59:10.416+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-27T19:59:10.417+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-27T19:59:10.439+0200 DEBUG Created new SQL alias : u1_0
2023-01-27T19:59:10.443+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users]
2023-01-27T19:59:10.500+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-27T19:59:10.510+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-27T19:59:10.594+0200 DEBUG Checking 0 named HQL queries
2023-01-27T19:59:10.594+0200 DEBUG Checking 0 named SQL queries
2023-01-27T19:59:10.685+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@31e739bf] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-27T19:59:10.895+0200 DEBUG No alter strings for table : users
2023-01-27T19:59:10.897+0200 DEBUG No alter strings for table : users_SEQ
2023-01-27T19:59:10.993+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T19:59:10.994+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-27T19:59:11.007+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e3f0aea
2023-01-27T19:59:11.009+0200 DEBUG Registering SessionFactory: c3a44dd4-9382-4a37-9ea1-93ec57c83fe9 (<unnamed>)
2023-01-27T19:59:11.009+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-27T19:59:11.119+0200 DEBUG Statistics initialized [enabled=false]
2023-01-27T19:59:11.133+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-27T19:59:11.161+0200 DEBUG begin
2023-01-27T19:59:11.361+0200 DEBUG 
    select
        next_val as id_val 
    from
        users_SEQ for update
2023-01-27T19:59:11.364+0200 DEBUG 
    update
        users_SEQ 
    set
        next_val= ? 
    where
        next_val=?
2023-01-27T19:59:11.655+0200 DEBUG Generated identifier: 202, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2023-01-27T19:59:11.671+0200 DEBUG committing
2023-01-27T19:59:11.672+0200 DEBUG Processing flush-time cascades
2023-01-27T19:59:11.673+0200 DEBUG Dirty checking collections
2023-01-27T19:59:11.679+0200 DEBUG Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-01-27T19:59:11.679+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-27T19:59:11.680+0200 DEBUG Listing entities:
2023-01-27T19:59:11.680+0200 DEBUG edu.itstep.sql.Users{password=test133, id=202, userName=user104}
2023-01-27T19:59:11.698+0200 DEBUG 
    insert 
    into
        users
        (password,user_name,id) 
    values
        (?,?,?)
2023-01-27T19:59:11.709+0200 DEBUG Unable to release JDBC result set [Cannot invoke "java.sql.ResultSet.close()" because "resultSet" is null]
2023-01-27T19:59:12.122+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T19:59:12.130+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T19:59:12.131+0200 DEBUG HHH000031: Closing
2023-01-27T19:59:12.131+0200 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@14fc9bd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7e642b88]
2023-01-27T19:59:12.132+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-27T19:59:12.132+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T19:59:12.137+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-27T20:01:11.951+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-27T20:01:11.991+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-27T20:01:12.003+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-27T20:01:12.056+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-27T20:01:12.059+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-27T20:01:12.062+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-27T20:01:12.447+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-27T20:01:12.464+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-27T20:01:12.971+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-27T20:01:12.978+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-27T20:01:12.979+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-27T20:01:12.981+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T20:01:12.981+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T20:01:12.982+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-27T20:01:12.984+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-27T20:01:12.984+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-27T20:01:12.987+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T20:01:12.988+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-27T20:01:12.992+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-27T20:01:12.993+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T20:01:12.994+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-27T20:01:13.012+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-27T20:01:13.017+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-27T20:01:13.326+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@57ac5227
2023-01-27T20:01:13.326+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@57ac5227
2023-01-27T20:01:13.326+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@57ac5227
2023-01-27T20:01:13.327+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4ba302e0
2023-01-27T20:01:13.327+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4ba302e0
2023-01-27T20:01:13.327+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T20:01:13.327+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T20:01:13.328+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T20:01:13.328+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T20:01:13.328+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T20:01:13.328+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T20:01:13.329+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T20:01:13.329+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T20:01:13.330+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T20:01:13.330+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T20:01:13.330+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T20:01:13.330+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T20:01:13.330+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T20:01:13.330+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T20:01:13.331+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T20:01:13.331+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T20:01:13.331+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T20:01:13.331+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-27T20:01:13.331+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T20:01:13.332+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T20:01:13.332+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T20:01:13.332+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T20:01:13.332+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T20:01:13.332+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T20:01:13.332+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T20:01:13.333+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T20:01:13.333+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T20:01:13.333+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T20:01:13.333+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T20:01:13.333+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T20:01:13.334+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T20:01:13.334+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T20:01:13.334+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T20:01:13.334+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T20:01:13.334+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T20:01:13.335+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T20:01:13.335+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T20:01:13.335+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T20:01:13.335+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T20:01:13.336+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T20:01:13.336+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T20:01:13.336+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T20:01:13.336+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T20:01:13.336+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T20:01:13.336+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-27T20:01:13.337+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T20:01:13.337+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T20:01:13.337+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T20:01:13.337+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T20:01:13.337+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T20:01:13.337+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T20:01:13.337+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T20:01:13.338+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T20:01:13.338+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T20:01:13.338+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T20:01:13.338+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T20:01:13.338+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T20:01:13.338+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T20:01:13.339+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T20:01:13.339+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-27T20:01:13.339+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-27T20:01:13.339+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-27T20:01:13.339+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-27T20:01:13.340+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T20:01:13.340+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T20:01:13.340+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T20:01:13.340+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T20:01:13.340+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T20:01:13.340+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T20:01:13.341+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T20:01:13.341+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T20:01:13.341+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T20:01:13.341+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T20:01:13.341+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T20:01:13.341+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T20:01:13.342+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T20:01:13.342+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T20:01:13.342+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-27T20:01:13.343+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-27T20:01:13.343+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T20:01:13.343+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T20:01:13.343+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T20:01:13.343+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T20:01:13.344+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T20:01:13.344+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T20:01:13.344+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T20:01:13.344+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T20:01:13.344+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T20:01:13.344+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T20:01:13.345+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T20:01:13.345+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T20:01:13.345+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T20:01:13.345+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T20:01:13.345+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-27T20:01:13.346+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-27T20:01:13.346+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T20:01:13.346+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T20:01:13.346+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T20:01:13.347+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T20:01:13.347+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T20:01:13.347+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-27T20:01:13.348+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-27T20:01:13.348+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T20:01:13.348+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T20:01:13.348+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T20:01:13.348+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T20:01:13.349+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T20:01:13.349+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T20:01:13.349+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T20:01:13.349+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T20:01:13.349+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T20:01:13.350+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T20:01:13.350+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T20:01:13.350+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T20:01:13.350+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T20:01:13.350+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T20:01:13.357+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@fb9c7aa
2023-01-27T20:01:13.358+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@fb9c7aa
2023-01-27T20:01:13.360+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@75f65e45
2023-01-27T20:01:13.360+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6eeade6c
2023-01-27T20:01:13.361+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4a891c97
2023-01-27T20:01:13.361+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-27T20:01:13.361+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-27T20:01:13.361+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@75390459
2023-01-27T20:01:13.361+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-27T20:01:13.362+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-27T20:01:13.362+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-27T20:01:13.425+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-27T20:01:13.437+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-27T20:01:13.437+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T20:01:13.437+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-27T20:01:13.438+0200 INFO HHH10001003: Autocommit mode: false
2023-01-27T20:01:13.443+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-27T20:01:13.444+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-27T20:01:14.147+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-27T20:01:14.149+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-27T20:01:14.149+0200 DEBUG JDBC version : 4.2
2023-01-27T20:01:14.219+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-27T20:01:14.229+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-27T20:01:14.229+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-27T20:01:14.257+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3eed0f5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64030b91)
2023-01-27T20:01:14.257+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-27T20:01:14.257+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-27T20:01:14.258+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@26dcd8c0)
2023-01-27T20:01:14.258+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-27T20:01:14.258+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-27T20:01:14.258+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-27T20:01:14.259+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-27T20:01:14.259+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-27T20:01:14.261+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-27T20:01:14.262+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-27T20:01:14.263+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-27T20:01:14.266+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T20:01:14.267+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T20:01:14.270+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@61799544
2023-01-27T20:01:14.271+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@75f65e45`
2023-01-27T20:01:14.278+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T20:01:14.279+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T20:01:14.279+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T20:01:14.279+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T20:01:14.279+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T20:01:14.280+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T20:01:14.282+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bd7fe7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35d3ab60]
2023-01-27T20:01:14.344+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-27T20:01:14.390+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-27T20:01:14.406+0200 DEBUG Import with entity name Users
2023-01-27T20:01:14.419+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-27T20:01:14.434+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-27T20:01:14.454+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-27T20:01:14.458+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T20:01:14.458+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T20:01:14.460+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-27T20:01:14.469+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-27T20:01:14.481+0200 DEBUG building BasicValue for id
2023-01-27T20:01:14.486+0200 DEBUG Skipping column re-registration: users.id
2023-01-27T20:01:14.488+0200 DEBUG Building property id
2023-01-27T20:01:14.493+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-27T20:01:14.495+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-27T20:01:14.495+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-27T20:01:14.496+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-27T20:01:14.496+0200 DEBUG building BasicValue for password
2023-01-27T20:01:14.496+0200 DEBUG Skipping column re-registration: users.password
2023-01-27T20:01:14.497+0200 DEBUG Building property password
2023-01-27T20:01:14.497+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-27T20:01:14.497+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-27T20:01:14.497+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-27T20:01:14.497+0200 DEBUG building BasicValue for userName
2023-01-27T20:01:14.498+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-27T20:01:14.498+0200 DEBUG Building property userName
2023-01-27T20:01:14.506+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-27T20:01:14.507+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-27T20:01:14.510+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-27T20:01:14.515+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-27T20:01:14.606+0200 DEBUG Building session factory
2023-01-27T20:01:14.715+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T20:01:14.722+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-27T20:01:14.725+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3e104d4b, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-27T20:01:14.745+0200 DEBUG Instantiated session factory
2023-01-27T20:01:14.771+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-27T20:01:14.974+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-27T20:01:14.975+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-27T20:01:14.978+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-27T20:01:14.979+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-27T20:01:14.981+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7ff35a3f] under count; prior registration was null
2023-01-27T20:01:14.983+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@767a014e] under every; prior registration was null
2023-01-27T20:01:14.983+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@d109c4f] under any; prior registration was null
2023-01-27T20:01:14.984+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-27T20:01:14.984+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-27T20:01:14.984+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-27T20:01:14.984+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-27T20:01:14.984+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-27T20:01:14.985+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-27T20:01:14.985+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-27T20:01:14.985+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-27T20:01:14.985+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-27T20:01:14.986+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-27T20:01:14.986+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-27T20:01:14.986+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-27T20:01:14.987+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-27T20:01:14.987+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-27T20:01:14.987+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-27T20:01:14.988+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-27T20:01:14.988+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-27T20:01:14.990+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a0e7ecd] under sinh; prior registration was null
2023-01-27T20:01:14.991+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54e3658c] under cosh; prior registration was null
2023-01-27T20:01:14.991+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under tanh; prior registration was null
2023-01-27T20:01:14.991+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under pi; prior registration was null
2023-01-27T20:01:14.991+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under log; prior registration was null
2023-01-27T20:01:14.992+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-27T20:01:14.992+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-27T20:01:14.992+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-27T20:01:14.993+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-27T20:01:14.993+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-27T20:01:14.994+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-27T20:01:14.994+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-27T20:01:14.994+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-27T20:01:14.994+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-27T20:01:14.994+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-27T20:01:14.994+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-27T20:01:14.994+0200 DEBUG Registering alternate key : length -> character_length
2023-01-27T20:01:14.996+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@80bfdc6] under position; prior registration was null
2023-01-27T20:01:14.997+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6981f8f3] under overlay; prior registration was null
2023-01-27T20:01:14.998+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@68a4dcc6] under trim; prior registration was null
2023-01-27T20:01:15.000+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7e74a380] under cast; prior registration was null
2023-01-27T20:01:15.000+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6dd1c3ed] under collate; prior registration was null
2023-01-27T20:01:15.002+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6dfa915a] under extract; prior registration was null
2023-01-27T20:01:15.003+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-27T20:01:15.003+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-27T20:01:15.004+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4b6e1c0] under ifnull; prior registration was null
2023-01-27T20:01:15.004+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-27T20:01:15.004+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-27T20:01:15.005+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@15400fff] under pad; prior registration was null
2023-01-27T20:01:15.010+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@77774571] under str; prior registration was null
2023-01-27T20:01:15.013+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@a9f023e] under format; prior registration was null
2023-01-27T20:01:15.014+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@68d7a2df] under timestampadd; prior registration was null
2023-01-27T20:01:15.015+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@56a4f272] under timestampdiff; prior registration was null
2023-01-27T20:01:15.015+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-27T20:01:15.015+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-27T20:01:15.016+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c87e6b7] under current_date; prior registration was null
2023-01-27T20:01:15.016+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77bbadc] under current_time; prior registration was null
2023-01-27T20:01:15.016+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_timestamp; prior registration was null
2023-01-27T20:01:15.016+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-27T20:01:15.016+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-27T20:01:15.016+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-27T20:01:15.017+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under local_date; prior registration was null
2023-01-27T20:01:15.017+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under local_time; prior registration was null
2023-01-27T20:01:15.017+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_datetime; prior registration was null
2023-01-27T20:01:15.017+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under offset_datetime; prior registration was null
2023-01-27T20:01:15.017+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-27T20:01:15.017+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-27T20:01:15.017+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-27T20:01:15.017+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-27T20:01:15.017+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under instant; prior registration was null
2023-01-27T20:01:15.017+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-27T20:01:15.018+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5e519ad3] under sql; prior registration was null
2023-01-27T20:01:15.018+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-27T20:01:15.018+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-27T20:01:15.018+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-27T20:01:15.019+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-27T20:01:15.019+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8
2023-01-27T20:01:15.019+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-27T20:01:15.019+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-27T20:01:15.019+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-27T20:01:15.019+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-27T20:01:15.019+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-27T20:01:15.019+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-27T20:01:15.019+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-27T20:01:15.019+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-27T20:01:15.020+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@a92be4f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-27T20:01:15.020+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@53e800f9] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-27T20:01:15.021+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-27T20:01:15.021+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-27T20:01:15.021+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-27T20:01:15.021+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-27T20:01:15.021+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-27T20:01:15.021+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-27T20:01:15.021+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-27T20:01:15.021+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-27T20:01:15.021+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-27T20:01:15.021+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-27T20:01:15.021+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-27T20:01:15.022+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-27T20:01:15.022+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-27T20:01:15.022+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-27T20:01:15.022+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-27T20:01:15.022+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-27T20:01:15.022+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-27T20:01:15.022+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-27T20:01:15.022+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-27T20:01:15.022+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-27T20:01:15.023+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-27T20:01:15.023+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-27T20:01:15.023+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-27T20:01:15.023+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-27T20:01:15.023+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-27T20:01:15.023+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-27T20:01:15.023+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-27T20:01:15.023+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-27T20:01:15.023+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-27T20:01:15.023+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-27T20:01:15.024+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-27T20:01:15.024+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-27T20:01:15.024+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-27T20:01:15.024+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@337bbfdf] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@80bfdc6
2023-01-27T20:01:15.024+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-27T20:01:15.024+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-27T20:01:15.024+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-27T20:01:15.025+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under trunc; prior registration was null
2023-01-27T20:01:15.025+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-27T20:01:15.025+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-27T20:01:15.025+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under bitand; prior registration was null
2023-01-27T20:01:15.025+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e5af8e1] under bitor; prior registration was null
2023-01-27T20:01:15.025+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitxor; prior registration was null
2023-01-27T20:01:15.025+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitnot; prior registration was null
2023-01-27T20:01:15.025+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-27T20:01:15.026+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-27T20:01:15.026+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-27T20:01:15.026+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-27T20:01:15.026+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-27T20:01:15.027+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-27T20:01:15.027+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-27T20:01:15.027+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-27T20:01:15.027+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-27T20:01:15.027+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-27T20:01:15.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-27T20:01:15.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-27T20:01:15.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-27T20:01:15.028+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@524a076e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@a9f023e
2023-01-27T20:01:15.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-27T20:01:15.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-27T20:01:15.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-27T20:01:15.028+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-27T20:01:15.029+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7fdab70c
2023-01-27T20:01:15.029+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@25ad4f71
2023-01-27T20:01:15.029+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-27T20:01:15.029+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8
2023-01-27T20:01:15.029+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62dbe64e] under chr; prior registration was null
2023-01-27T20:01:15.029+0200 DEBUG Registering alternate key : char -> chr
2023-01-27T20:01:15.029+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under sysdate; prior registration was null
2023-01-27T20:01:15.029+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-27T20:01:15.030+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-27T20:01:15.031+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-27T20:01:15.031+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-27T20:01:15.031+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-27T20:01:15.031+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-27T20:01:15.033+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2aff9dff] under rank; prior registration was null
2023-01-27T20:01:15.033+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5f0f9947] under dense_rank; prior registration was null
2023-01-27T20:01:15.033+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under percent_rank; prior registration was null
2023-01-27T20:01:15.033+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under cume_dist; prior registration was null
2023-01-27T20:01:15.034+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@54d8c20d] under listagg; prior registration was null
2023-01-27T20:01:15.052+0200 DEBUG abs(NUMERIC arg)
2023-01-27T20:01:15.052+0200 DEBUG Double acos(NUMERIC arg)
2023-01-27T20:01:15.052+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-27T20:01:15.052+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-27T20:01:15.052+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-27T20:01:15.052+0200 DEBUG Integer ascii(STRING arg)
2023-01-27T20:01:15.052+0200 DEBUG Double asin(NUMERIC arg)
2023-01-27T20:01:15.053+0200 DEBUG Double atan(NUMERIC arg)
2023-01-27T20:01:15.056+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-27T20:01:15.056+0200 DEBUG Double avg(NUMERIC arg)
2023-01-27T20:01:15.056+0200 DEBUG bit_and(arg)
2023-01-27T20:01:15.056+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-27T20:01:15.056+0200 DEBUG bit_or(arg)
2023-01-27T20:01:15.057+0200 DEBUG bitand(arg0, arg1)
2023-01-27T20:01:15.057+0200 DEBUG bitnot(arg)
2023-01-27T20:01:15.057+0200 DEBUG bitor(arg0, arg1)
2023-01-27T20:01:15.057+0200 DEBUG bitxor(arg0, arg1)
2023-01-27T20:01:15.057+0200 DEBUG cast(arg as Type)
2023-01-27T20:01:15.057+0200 DEBUG ceiling(NUMERIC arg)
2023-01-27T20:01:15.057+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-27T20:01:15.057+0200 DEBUG Character chr(INTEGER arg)
2023-01-27T20:01:15.057+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-27T20:01:15.057+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-27T20:01:15.057+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-27T20:01:15.057+0200 DEBUG Double cos(NUMERIC arg)
2023-01-27T20:01:15.057+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-27T20:01:15.058+0200 DEBUG Double cot(NUMERIC arg)
2023-01-27T20:01:15.058+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-27T20:01:15.058+0200 DEBUG Integer crc32(arg)
2023-01-27T20:01:15.058+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-27T20:01:15.058+0200 DEBUG Date curdate()
2023-01-27T20:01:15.058+0200 DEBUG Date current_date
2023-01-27T20:01:15.058+0200 DEBUG Time current_time
2023-01-27T20:01:15.058+0200 DEBUG Timestamp current_timestamp
2023-01-27T20:01:15.058+0200 DEBUG Time curtime()
2023-01-27T20:01:15.059+0200 DEBUG Date date(arg)
2023-01-27T20:01:15.059+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-27T20:01:15.059+0200 DEBUG Integer day(DATE arg)
2023-01-27T20:01:15.059+0200 DEBUG String dayname(DATE arg)
2023-01-27T20:01:15.059+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-27T20:01:15.059+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-27T20:01:15.059+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-27T20:01:15.060+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-27T20:01:15.060+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-27T20:01:15.060+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-27T20:01:15.060+0200 DEBUG Double exp(NUMERIC arg)
2023-01-27T20:01:15.060+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-27T20:01:15.060+0200 DEBUG first_valueANY value
2023-01-27T20:01:15.060+0200 DEBUG floor(NUMERIC arg)
2023-01-27T20:01:15.060+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-27T20:01:15.060+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T20:01:15.061+0200 DEBUG Integer hour(TIME arg)
2023-01-27T20:01:15.061+0200 DEBUG ifnull(arg0, arg1)
2023-01-27T20:01:15.061+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-27T20:01:15.061+0200 DEBUG Instant instant
2023-01-27T20:01:15.061+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-27T20:01:15.061+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-27T20:01:15.061+0200 DEBUG Date last_day(DATE arg)
2023-01-27T20:01:15.061+0200 DEBUG last_valueANY value
2023-01-27T20:01:15.061+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-27T20:01:15.061+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T20:01:15.061+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-27T20:01:15.061+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-27T20:01:15.061+0200 DEBUG Double ln(NUMERIC arg)
2023-01-27T20:01:15.061+0200 DEBUG LocalDate local_date
2023-01-27T20:01:15.062+0200 DEBUG LocalDateTime local_datetime
2023-01-27T20:01:15.062+0200 DEBUG LocalTime local_time
2023-01-27T20:01:15.062+0200 DEBUG Timestamp localtime
2023-01-27T20:01:15.062+0200 DEBUG Timestamp localtimestamp
2023-01-27T20:01:15.062+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-27T20:01:15.062+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-27T20:01:15.062+0200 DEBUG Double log10(NUMERIC arg)
2023-01-27T20:01:15.062+0200 DEBUG Double log2(NUMERIC arg)
2023-01-27T20:01:15.062+0200 DEBUG String lower(STRING string)
2023-01-27T20:01:15.063+0200 DEBUG String lpad(string, length[, padding])
2023-01-27T20:01:15.063+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-27T20:01:15.063+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-27T20:01:15.063+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-27T20:01:15.063+0200 DEBUG max(COMPARABLE arg)
2023-01-27T20:01:15.063+0200 DEBUG String md5(arg)
2023-01-27T20:01:15.063+0200 DEBUG Integer microsecond(TIME arg)
2023-01-27T20:01:15.063+0200 DEBUG min(COMPARABLE arg)
2023-01-27T20:01:15.064+0200 DEBUG Integer minute(TIME arg)
2023-01-27T20:01:15.064+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-27T20:01:15.064+0200 DEBUG Integer month(DATE arg)
2023-01-27T20:01:15.064+0200 DEBUG String monthname(DATE arg)
2023-01-27T20:01:15.064+0200 DEBUG Timestamp now()
2023-01-27T20:01:15.064+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-27T20:01:15.064+0200 DEBUG nullif(arg0, arg1)
2023-01-27T20:01:15.064+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-27T20:01:15.064+0200 DEBUG OffsetDateTime offset_datetime
2023-01-27T20:01:15.064+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-27T20:01:15.064+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-27T20:01:15.064+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-27T20:01:15.064+0200 DEBUG Double pi
2023-01-27T20:01:15.064+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-27T20:01:15.064+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-27T20:01:15.064+0200 DEBUG Integer quarter(DATE arg)
2023-01-27T20:01:15.064+0200 DEBUG Double radians(NUMERIC arg)
2023-01-27T20:01:15.064+0200 DEBUG Double rand([INTEGER seed])
2023-01-27T20:01:15.065+0200 DEBUG Long rank([arg0[, ...]])
2023-01-27T20:01:15.065+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-27T20:01:15.065+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-27T20:01:15.065+0200 DEBUG String reverse(STRING arg)
2023-01-27T20:01:15.065+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-27T20:01:15.065+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-27T20:01:15.065+0200 DEBUG Long row_number()
2023-01-27T20:01:15.065+0200 DEBUG String rpad(string, length[, padding])
2023-01-27T20:01:15.065+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-27T20:01:15.065+0200 DEBUG Integer second(TIME arg)
2023-01-27T20:01:15.065+0200 DEBUG String sha(arg)
2023-01-27T20:01:15.066+0200 DEBUG String sha1(arg)
2023-01-27T20:01:15.066+0200 DEBUG String sha2(arg0, arg1)
2023-01-27T20:01:15.066+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-27T20:01:15.068+0200 DEBUG Double sin(NUMERIC arg)
2023-01-27T20:01:15.068+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-27T20:01:15.068+0200 DEBUG String soundex(arg)
2023-01-27T20:01:15.068+0200 DEBUG String space(INTEGER arg)
2023-01-27T20:01:15.068+0200 DEBUG Object sql
2023-01-27T20:01:15.069+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-27T20:01:15.069+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-27T20:01:15.069+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-27T20:01:15.069+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-27T20:01:15.069+0200 DEBUG String str(arg)
2023-01-27T20:01:15.069+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-27T20:01:15.069+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-27T20:01:15.069+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-27T20:01:15.069+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-27T20:01:15.069+0200 DEBUG sum(arg)
2023-01-27T20:01:15.069+0200 DEBUG Timestamp sysdate()
2023-01-27T20:01:15.070+0200 DEBUG Double tan(NUMERIC arg)
2023-01-27T20:01:15.070+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-27T20:01:15.070+0200 DEBUG String time(arg)
2023-01-27T20:01:15.070+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-27T20:01:15.070+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T20:01:15.071+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-27T20:01:15.071+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-27T20:01:15.071+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-27T20:01:15.071+0200 DEBUG String upper(STRING string)
2023-01-27T20:01:15.071+0200 DEBUG Date utc_date
2023-01-27T20:01:15.071+0200 DEBUG Time utc_time
2023-01-27T20:01:15.071+0200 DEBUG Timestamp utc_timestamp
2023-01-27T20:01:15.071+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-27T20:01:15.071+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-27T20:01:15.071+0200 DEBUG Double variance(NUMERIC arg)
2023-01-27T20:01:15.071+0200 DEBUG Integer week(DATE arg)
2023-01-27T20:01:15.071+0200 DEBUG Integer year(DATE arg)
2023-01-27T20:01:15.072+0200 DEBUG Character char(INTEGER arg)
2023-01-27T20:01:15.072+0200 DEBUG Date current date
2023-01-27T20:01:15.072+0200 DEBUG Time current time
2023-01-27T20:01:15.072+0200 DEBUG Timestamp current timestamp
2023-01-27T20:01:15.073+0200 DEBUG Instant current_instant
2023-01-27T20:01:15.073+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T20:01:15.073+0200 DEBUG Integer day(DATE arg)
2023-01-27T20:01:15.073+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-27T20:01:15.073+0200 DEBUG LocalDate local date
2023-01-27T20:01:15.073+0200 DEBUG LocalDateTime local datetime
2023-01-27T20:01:15.073+0200 DEBUG LocalTime local time
2023-01-27T20:01:15.073+0200 DEBUG OffsetDateTime offset datetime
2023-01-27T20:01:15.073+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-27T20:01:15.075+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bd7fe7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7e642b88]
2023-01-27T20:01:15.491+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T20:01:15.492+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T20:01:15.865+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:17)
2023-01-27T20:01:15.941+0200 DEBUG Starting post-init callbacks
2023-01-27T20:01:15.941+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-27T20:01:15.942+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-27T20:01:16.044+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-27T20:01:16.044+0200 DEBUG  Version select: select id from users where id =?
2023-01-27T20:01:16.045+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-27T20:01:16.045+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-27T20:01:16.046+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-27T20:01:16.064+0200 DEBUG Created new SQL alias : u1_0
2023-01-27T20:01:16.069+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users]
2023-01-27T20:01:16.122+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-27T20:01:16.132+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-27T20:01:16.205+0200 DEBUG Checking 0 named HQL queries
2023-01-27T20:01:16.205+0200 DEBUG Checking 0 named SQL queries
2023-01-27T20:01:16.250+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@31e739bf] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-27T20:01:16.301+0200 DEBUG No alter strings for table : users
2023-01-27T20:01:16.301+0200 DEBUG No alter strings for table : users_SEQ
2023-01-27T20:01:16.326+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T20:01:16.326+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-27T20:01:16.347+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e3f0aea
2023-01-27T20:01:16.350+0200 DEBUG Registering SessionFactory: 5a933b94-69f5-4695-ba95-7017950ab6c7 (<unnamed>)
2023-01-27T20:01:16.350+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-27T20:01:16.433+0200 DEBUG Statistics initialized [enabled=false]
2023-01-27T20:01:16.440+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-27T20:01:16.440+0200 DEBUG begin
2023-01-27T20:01:16.535+0200 DEBUG 
    select
        next_val as id_val 
    from
        users_SEQ for update
2023-01-27T20:01:16.539+0200 DEBUG 
    update
        users_SEQ 
    set
        next_val= ? 
    where
        next_val=?
2023-01-27T20:01:16.816+0200 DEBUG Generated identifier: 252, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2023-01-27T20:01:16.831+0200 DEBUG committing
2023-01-27T20:01:16.831+0200 DEBUG Processing flush-time cascades
2023-01-27T20:01:16.832+0200 DEBUG Dirty checking collections
2023-01-27T20:01:16.841+0200 DEBUG Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-01-27T20:01:16.841+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-27T20:01:16.842+0200 DEBUG Listing entities:
2023-01-27T20:01:16.843+0200 DEBUG edu.itstep.sql.Users{password=test133, id=252, userName=user104}
2023-01-27T20:01:16.864+0200 DEBUG 
    insert 
    into
        users
        (password,user_name,id) 
    values
        (?,?,?)
2023-01-27T20:01:16.873+0200 DEBUG Unable to release JDBC result set [Cannot invoke "java.sql.ResultSet.close()" because "resultSet" is null]
2023-01-27T20:01:17.105+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T20:01:17.124+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T20:01:17.125+0200 DEBUG HHH000031: Closing
2023-01-27T20:01:17.126+0200 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@14fc9bd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7e642b88]
2023-01-27T20:01:17.127+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-27T20:01:17.128+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T20:01:17.132+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-27T20:25:54.318+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-27T20:25:54.351+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-27T20:25:54.359+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-27T20:25:54.404+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-27T20:25:54.409+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-27T20:25:54.411+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-27T20:25:54.839+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-27T20:25:54.858+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-27T20:25:55.290+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-27T20:25:55.300+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-27T20:25:55.301+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-27T20:25:55.302+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T20:25:55.302+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T20:25:55.303+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-27T20:25:55.306+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-27T20:25:55.306+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-27T20:25:55.308+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T20:25:55.309+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-27T20:25:55.310+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-27T20:25:55.311+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T20:25:55.312+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-27T20:25:55.322+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-27T20:25:55.326+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-27T20:25:55.627+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@57ac5227
2023-01-27T20:25:55.628+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@57ac5227
2023-01-27T20:25:55.630+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@57ac5227
2023-01-27T20:25:55.630+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4ba302e0
2023-01-27T20:25:55.631+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4ba302e0
2023-01-27T20:25:55.631+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T20:25:55.631+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T20:25:55.631+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T20:25:55.631+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T20:25:55.632+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T20:25:55.632+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T20:25:55.632+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T20:25:55.632+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T20:25:55.632+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T20:25:55.633+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T20:25:55.633+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T20:25:55.634+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T20:25:55.634+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T20:25:55.634+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T20:25:55.634+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T20:25:55.635+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T20:25:55.635+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T20:25:55.635+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-27T20:25:55.635+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T20:25:55.635+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T20:25:55.636+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T20:25:55.636+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T20:25:55.636+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T20:25:55.636+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T20:25:55.636+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T20:25:55.636+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T20:25:55.637+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T20:25:55.638+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T20:25:55.638+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T20:25:55.638+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T20:25:55.638+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T20:25:55.639+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T20:25:55.640+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T20:25:55.640+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T20:25:55.640+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T20:25:55.641+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T20:25:55.642+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T20:25:55.642+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T20:25:55.643+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T20:25:55.643+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T20:25:55.643+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T20:25:55.643+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T20:25:55.645+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T20:25:55.646+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T20:25:55.647+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-27T20:25:55.647+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T20:25:55.648+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T20:25:55.648+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T20:25:55.649+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T20:25:55.649+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T20:25:55.649+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T20:25:55.649+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T20:25:55.649+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T20:25:55.649+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T20:25:55.649+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T20:25:55.650+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T20:25:55.650+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T20:25:55.650+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T20:25:55.650+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T20:25:55.650+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-27T20:25:55.650+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-27T20:25:55.651+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-27T20:25:55.651+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-27T20:25:55.651+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T20:25:55.652+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T20:25:55.652+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T20:25:55.652+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T20:25:55.652+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T20:25:55.652+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T20:25:55.652+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T20:25:55.652+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T20:25:55.653+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T20:25:55.653+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T20:25:55.653+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T20:25:55.653+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T20:25:55.653+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T20:25:55.653+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T20:25:55.654+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-27T20:25:55.654+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-27T20:25:55.654+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T20:25:55.654+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T20:25:55.655+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T20:25:55.655+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T20:25:55.655+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T20:25:55.656+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T20:25:55.656+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T20:25:55.656+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T20:25:55.656+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T20:25:55.657+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T20:25:55.658+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T20:25:55.658+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T20:25:55.658+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T20:25:55.659+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T20:25:55.659+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-27T20:25:55.659+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-27T20:25:55.659+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T20:25:55.660+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T20:25:55.660+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T20:25:55.660+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T20:25:55.660+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T20:25:55.661+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-27T20:25:55.661+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-27T20:25:55.661+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T20:25:55.661+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T20:25:55.661+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T20:25:55.662+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T20:25:55.662+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T20:25:55.663+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T20:25:55.663+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T20:25:55.663+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T20:25:55.664+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T20:25:55.664+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T20:25:55.665+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T20:25:55.666+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T20:25:55.667+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T20:25:55.667+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T20:25:55.677+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@fb9c7aa
2023-01-27T20:25:55.677+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@fb9c7aa
2023-01-27T20:25:55.680+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@75f65e45
2023-01-27T20:25:55.680+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@6eeade6c
2023-01-27T20:25:55.680+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4a891c97
2023-01-27T20:25:55.681+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-27T20:25:55.681+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-27T20:25:55.681+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@75390459
2023-01-27T20:25:55.681+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-27T20:25:55.681+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-27T20:25:55.681+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-27T20:25:55.750+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-27T20:25:55.759+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-27T20:25:55.759+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T20:25:55.760+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-27T20:25:55.760+0200 INFO HHH10001003: Autocommit mode: false
2023-01-27T20:25:55.767+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-27T20:25:55.767+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-27T20:25:56.448+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-27T20:25:56.448+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-27T20:25:56.449+0200 DEBUG JDBC version : 4.2
2023-01-27T20:25:56.517+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-27T20:25:56.527+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-27T20:25:56.527+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-27T20:25:56.554+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3eed0f5) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@64030b91)
2023-01-27T20:25:56.554+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-27T20:25:56.554+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-27T20:25:56.555+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@26dcd8c0)
2023-01-27T20:25:56.555+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-27T20:25:56.555+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-27T20:25:56.555+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-27T20:25:56.555+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-27T20:25:56.555+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-27T20:25:56.557+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-27T20:25:56.558+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-27T20:25:56.558+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-27T20:25:56.562+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T20:25:56.562+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T20:25:56.566+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@61799544
2023-01-27T20:25:56.566+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@75f65e45`
2023-01-27T20:25:56.577+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T20:25:56.577+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T20:25:56.578+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T20:25:56.578+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T20:25:56.578+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T20:25:56.578+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T20:25:56.580+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bd7fe7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@35d3ab60]
2023-01-27T20:25:56.628+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-27T20:25:56.675+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-27T20:25:56.690+0200 DEBUG Import with entity name Users
2023-01-27T20:25:56.706+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-27T20:25:56.722+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-27T20:25:56.759+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-27T20:25:56.765+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T20:25:56.765+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T20:25:56.767+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-27T20:25:56.774+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-27T20:25:56.783+0200 DEBUG building BasicValue for id
2023-01-27T20:25:56.790+0200 DEBUG Skipping column re-registration: users.id
2023-01-27T20:25:56.791+0200 DEBUG Building property id
2023-01-27T20:25:56.797+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-27T20:25:56.799+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-27T20:25:56.799+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-27T20:25:56.799+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-27T20:25:56.799+0200 DEBUG building BasicValue for password
2023-01-27T20:25:56.800+0200 DEBUG Skipping column re-registration: users.password
2023-01-27T20:25:56.800+0200 DEBUG Building property password
2023-01-27T20:25:56.800+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-27T20:25:56.801+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-27T20:25:56.801+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-27T20:25:56.801+0200 DEBUG building BasicValue for userName
2023-01-27T20:25:56.801+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-27T20:25:56.801+0200 DEBUG Building property userName
2023-01-27T20:25:56.811+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-27T20:25:56.812+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-27T20:25:56.814+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-27T20:25:56.817+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-27T20:25:56.929+0200 DEBUG Building session factory
2023-01-27T20:25:57.042+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T20:25:57.054+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-27T20:25:57.054+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3e104d4b, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-27T20:25:57.067+0200 DEBUG Instantiated session factory
2023-01-27T20:25:57.096+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-27T20:25:57.291+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-27T20:25:57.291+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-27T20:25:57.293+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-27T20:25:57.294+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-27T20:25:57.297+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7ff35a3f] under count; prior registration was null
2023-01-27T20:25:57.299+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@767a014e] under every; prior registration was null
2023-01-27T20:25:57.299+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@d109c4f] under any; prior registration was null
2023-01-27T20:25:57.300+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-27T20:25:57.300+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-27T20:25:57.300+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-27T20:25:57.300+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-27T20:25:57.300+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-27T20:25:57.300+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-27T20:25:57.300+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-27T20:25:57.300+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-27T20:25:57.301+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-27T20:25:57.301+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-27T20:25:57.302+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-27T20:25:57.302+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-27T20:25:57.302+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-27T20:25:57.302+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-27T20:25:57.302+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-27T20:25:57.302+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-27T20:25:57.302+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-27T20:25:57.305+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a0e7ecd] under sinh; prior registration was null
2023-01-27T20:25:57.306+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@54e3658c] under cosh; prior registration was null
2023-01-27T20:25:57.306+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under tanh; prior registration was null
2023-01-27T20:25:57.306+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under pi; prior registration was null
2023-01-27T20:25:57.306+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under log; prior registration was null
2023-01-27T20:25:57.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-27T20:25:57.309+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-27T20:25:57.309+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-27T20:25:57.309+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-27T20:25:57.309+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-27T20:25:57.310+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-27T20:25:57.310+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-27T20:25:57.310+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-27T20:25:57.310+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-27T20:25:57.310+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-27T20:25:57.311+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-27T20:25:57.311+0200 DEBUG Registering alternate key : length -> character_length
2023-01-27T20:25:57.312+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@80bfdc6] under position; prior registration was null
2023-01-27T20:25:57.313+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@6981f8f3] under overlay; prior registration was null
2023-01-27T20:25:57.315+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@68a4dcc6] under trim; prior registration was null
2023-01-27T20:25:57.316+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7e74a380] under cast; prior registration was null
2023-01-27T20:25:57.316+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6dd1c3ed] under collate; prior registration was null
2023-01-27T20:25:57.318+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6dfa915a] under extract; prior registration was null
2023-01-27T20:25:57.318+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-27T20:25:57.318+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-27T20:25:57.319+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4b6e1c0] under ifnull; prior registration was null
2023-01-27T20:25:57.319+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-27T20:25:57.319+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-27T20:25:57.320+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@15400fff] under pad; prior registration was null
2023-01-27T20:25:57.321+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@77774571] under str; prior registration was null
2023-01-27T20:25:57.322+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@a9f023e] under format; prior registration was null
2023-01-27T20:25:57.323+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@68d7a2df] under timestampadd; prior registration was null
2023-01-27T20:25:57.324+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@56a4f272] under timestampdiff; prior registration was null
2023-01-27T20:25:57.325+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-27T20:25:57.325+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-27T20:25:57.325+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c87e6b7] under current_date; prior registration was null
2023-01-27T20:25:57.325+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77bbadc] under current_time; prior registration was null
2023-01-27T20:25:57.326+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_timestamp; prior registration was null
2023-01-27T20:25:57.326+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-27T20:25:57.326+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-27T20:25:57.326+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-27T20:25:57.326+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under local_date; prior registration was null
2023-01-27T20:25:57.326+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under local_time; prior registration was null
2023-01-27T20:25:57.326+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_datetime; prior registration was null
2023-01-27T20:25:57.326+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under offset_datetime; prior registration was null
2023-01-27T20:25:57.326+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-27T20:25:57.326+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-27T20:25:57.326+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-27T20:25:57.326+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-27T20:25:57.326+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under instant; prior registration was null
2023-01-27T20:25:57.327+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-27T20:25:57.328+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5e519ad3] under sql; prior registration was null
2023-01-27T20:25:57.328+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-27T20:25:57.328+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-27T20:25:57.328+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-27T20:25:57.328+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-27T20:25:57.328+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8
2023-01-27T20:25:57.328+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-27T20:25:57.329+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-27T20:25:57.329+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-27T20:25:57.329+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-27T20:25:57.329+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-27T20:25:57.329+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-27T20:25:57.329+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-27T20:25:57.329+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-27T20:25:57.330+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@a92be4f] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-27T20:25:57.330+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@53e800f9] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-27T20:25:57.330+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-27T20:25:57.330+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-27T20:25:57.330+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-27T20:25:57.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-27T20:25:57.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-27T20:25:57.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-27T20:25:57.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-27T20:25:57.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-27T20:25:57.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-27T20:25:57.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-27T20:25:57.331+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-27T20:25:57.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-27T20:25:57.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-27T20:25:57.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-27T20:25:57.332+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-27T20:25:57.332+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-27T20:25:57.332+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-27T20:25:57.332+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-27T20:25:57.332+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-27T20:25:57.332+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-27T20:25:57.332+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-27T20:25:57.332+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-27T20:25:57.333+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-27T20:25:57.333+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-27T20:25:57.333+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-27T20:25:57.333+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-27T20:25:57.333+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-27T20:25:57.333+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-27T20:25:57.333+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-27T20:25:57.334+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-27T20:25:57.334+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-27T20:25:57.334+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-27T20:25:57.334+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-27T20:25:57.334+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@337bbfdf] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@80bfdc6
2023-01-27T20:25:57.335+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-27T20:25:57.335+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-27T20:25:57.335+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-27T20:25:57.335+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under trunc; prior registration was null
2023-01-27T20:25:57.335+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-27T20:25:57.335+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-27T20:25:57.335+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under bitand; prior registration was null
2023-01-27T20:25:57.335+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5e5af8e1] under bitor; prior registration was null
2023-01-27T20:25:57.335+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitxor; prior registration was null
2023-01-27T20:25:57.335+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitnot; prior registration was null
2023-01-27T20:25:57.336+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-27T20:25:57.336+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-27T20:25:57.336+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-27T20:25:57.336+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-27T20:25:57.336+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-27T20:25:57.336+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-27T20:25:57.336+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-27T20:25:57.336+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-27T20:25:57.336+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-27T20:25:57.336+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-27T20:25:57.337+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-27T20:25:57.337+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-27T20:25:57.337+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-27T20:25:57.337+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@524a076e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@a9f023e
2023-01-27T20:25:57.337+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-27T20:25:57.337+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-27T20:25:57.337+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-27T20:25:57.337+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-27T20:25:57.337+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7fdab70c
2023-01-27T20:25:57.338+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@25ad4f71
2023-01-27T20:25:57.338+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-27T20:25:57.338+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8
2023-01-27T20:25:57.338+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@62dbe64e] under chr; prior registration was null
2023-01-27T20:25:57.338+0200 DEBUG Registering alternate key : char -> chr
2023-01-27T20:25:57.338+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under sysdate; prior registration was null
2023-01-27T20:25:57.338+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-27T20:25:57.339+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-27T20:25:57.340+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-27T20:25:57.340+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-27T20:25:57.340+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-27T20:25:57.340+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-27T20:25:57.342+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@2aff9dff] under rank; prior registration was null
2023-01-27T20:25:57.342+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5f0f9947] under dense_rank; prior registration was null
2023-01-27T20:25:57.342+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under percent_rank; prior registration was null
2023-01-27T20:25:57.343+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under cume_dist; prior registration was null
2023-01-27T20:25:57.344+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@54d8c20d] under listagg; prior registration was null
2023-01-27T20:25:57.353+0200 DEBUG abs(NUMERIC arg)
2023-01-27T20:25:57.353+0200 DEBUG Double acos(NUMERIC arg)
2023-01-27T20:25:57.353+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-27T20:25:57.353+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-27T20:25:57.354+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-27T20:25:57.354+0200 DEBUG Integer ascii(STRING arg)
2023-01-27T20:25:57.354+0200 DEBUG Double asin(NUMERIC arg)
2023-01-27T20:25:57.354+0200 DEBUG Double atan(NUMERIC arg)
2023-01-27T20:25:57.358+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-27T20:25:57.359+0200 DEBUG Double avg(NUMERIC arg)
2023-01-27T20:25:57.359+0200 DEBUG bit_and(arg)
2023-01-27T20:25:57.359+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-27T20:25:57.359+0200 DEBUG bit_or(arg)
2023-01-27T20:25:57.359+0200 DEBUG bitand(arg0, arg1)
2023-01-27T20:25:57.359+0200 DEBUG bitnot(arg)
2023-01-27T20:25:57.359+0200 DEBUG bitor(arg0, arg1)
2023-01-27T20:25:57.360+0200 DEBUG bitxor(arg0, arg1)
2023-01-27T20:25:57.360+0200 DEBUG cast(arg as Type)
2023-01-27T20:25:57.360+0200 DEBUG ceiling(NUMERIC arg)
2023-01-27T20:25:57.360+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-27T20:25:57.360+0200 DEBUG Character chr(INTEGER arg)
2023-01-27T20:25:57.360+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-27T20:25:57.360+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-27T20:25:57.360+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-27T20:25:57.360+0200 DEBUG Double cos(NUMERIC arg)
2023-01-27T20:25:57.360+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-27T20:25:57.360+0200 DEBUG Double cot(NUMERIC arg)
2023-01-27T20:25:57.360+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-27T20:25:57.361+0200 DEBUG Integer crc32(arg)
2023-01-27T20:25:57.361+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-27T20:25:57.361+0200 DEBUG Date curdate()
2023-01-27T20:25:57.361+0200 DEBUG Date current_date
2023-01-27T20:25:57.361+0200 DEBUG Time current_time
2023-01-27T20:25:57.361+0200 DEBUG Timestamp current_timestamp
2023-01-27T20:25:57.361+0200 DEBUG Time curtime()
2023-01-27T20:25:57.361+0200 DEBUG Date date(arg)
2023-01-27T20:25:57.361+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-27T20:25:57.362+0200 DEBUG Integer day(DATE arg)
2023-01-27T20:25:57.362+0200 DEBUG String dayname(DATE arg)
2023-01-27T20:25:57.362+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-27T20:25:57.362+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-27T20:25:57.362+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-27T20:25:57.362+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-27T20:25:57.362+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-27T20:25:57.362+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-27T20:25:57.362+0200 DEBUG Double exp(NUMERIC arg)
2023-01-27T20:25:57.363+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-27T20:25:57.363+0200 DEBUG first_valueANY value
2023-01-27T20:25:57.363+0200 DEBUG floor(NUMERIC arg)
2023-01-27T20:25:57.363+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-27T20:25:57.363+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T20:25:57.363+0200 DEBUG Integer hour(TIME arg)
2023-01-27T20:25:57.363+0200 DEBUG ifnull(arg0, arg1)
2023-01-27T20:25:57.363+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-27T20:25:57.363+0200 DEBUG Instant instant
2023-01-27T20:25:57.363+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-27T20:25:57.363+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-27T20:25:57.363+0200 DEBUG Date last_day(DATE arg)
2023-01-27T20:25:57.364+0200 DEBUG last_valueANY value
2023-01-27T20:25:57.364+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-27T20:25:57.365+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T20:25:57.365+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-27T20:25:57.366+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-27T20:25:57.366+0200 DEBUG Double ln(NUMERIC arg)
2023-01-27T20:25:57.367+0200 DEBUG LocalDate local_date
2023-01-27T20:25:57.367+0200 DEBUG LocalDateTime local_datetime
2023-01-27T20:25:57.368+0200 DEBUG LocalTime local_time
2023-01-27T20:25:57.368+0200 DEBUG Timestamp localtime
2023-01-27T20:25:57.368+0200 DEBUG Timestamp localtimestamp
2023-01-27T20:25:57.368+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-27T20:25:57.368+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-27T20:25:57.369+0200 DEBUG Double log10(NUMERIC arg)
2023-01-27T20:25:57.369+0200 DEBUG Double log2(NUMERIC arg)
2023-01-27T20:25:57.369+0200 DEBUG String lower(STRING string)
2023-01-27T20:25:57.369+0200 DEBUG String lpad(string, length[, padding])
2023-01-27T20:25:57.369+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-27T20:25:57.369+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-27T20:25:57.369+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-27T20:25:57.369+0200 DEBUG max(COMPARABLE arg)
2023-01-27T20:25:57.369+0200 DEBUG String md5(arg)
2023-01-27T20:25:57.369+0200 DEBUG Integer microsecond(TIME arg)
2023-01-27T20:25:57.369+0200 DEBUG min(COMPARABLE arg)
2023-01-27T20:25:57.370+0200 DEBUG Integer minute(TIME arg)
2023-01-27T20:25:57.370+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-27T20:25:57.370+0200 DEBUG Integer month(DATE arg)
2023-01-27T20:25:57.370+0200 DEBUG String monthname(DATE arg)
2023-01-27T20:25:57.370+0200 DEBUG Timestamp now()
2023-01-27T20:25:57.370+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-27T20:25:57.370+0200 DEBUG nullif(arg0, arg1)
2023-01-27T20:25:57.370+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-27T20:25:57.370+0200 DEBUG OffsetDateTime offset_datetime
2023-01-27T20:25:57.370+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-27T20:25:57.370+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-27T20:25:57.370+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-27T20:25:57.370+0200 DEBUG Double pi
2023-01-27T20:25:57.370+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-27T20:25:57.370+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-27T20:25:57.370+0200 DEBUG Integer quarter(DATE arg)
2023-01-27T20:25:57.371+0200 DEBUG Double radians(NUMERIC arg)
2023-01-27T20:25:57.371+0200 DEBUG Double rand([INTEGER seed])
2023-01-27T20:25:57.371+0200 DEBUG Long rank([arg0[, ...]])
2023-01-27T20:25:57.371+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-27T20:25:57.371+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-27T20:25:57.371+0200 DEBUG String reverse(STRING arg)
2023-01-27T20:25:57.371+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-27T20:25:57.371+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-27T20:25:57.371+0200 DEBUG Long row_number()
2023-01-27T20:25:57.371+0200 DEBUG String rpad(string, length[, padding])
2023-01-27T20:25:57.371+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-27T20:25:57.371+0200 DEBUG Integer second(TIME arg)
2023-01-27T20:25:57.372+0200 DEBUG String sha(arg)
2023-01-27T20:25:57.372+0200 DEBUG String sha1(arg)
2023-01-27T20:25:57.372+0200 DEBUG String sha2(arg0, arg1)
2023-01-27T20:25:57.372+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-27T20:25:57.372+0200 DEBUG Double sin(NUMERIC arg)
2023-01-27T20:25:57.372+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-27T20:25:57.372+0200 DEBUG String soundex(arg)
2023-01-27T20:25:57.372+0200 DEBUG String space(INTEGER arg)
2023-01-27T20:25:57.372+0200 DEBUG Object sql
2023-01-27T20:25:57.373+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-27T20:25:57.373+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-27T20:25:57.373+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-27T20:25:57.373+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-27T20:25:57.373+0200 DEBUG String str(arg)
2023-01-27T20:25:57.373+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-27T20:25:57.373+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-27T20:25:57.373+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-27T20:25:57.373+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-27T20:25:57.373+0200 DEBUG sum(arg)
2023-01-27T20:25:57.373+0200 DEBUG Timestamp sysdate()
2023-01-27T20:25:57.373+0200 DEBUG Double tan(NUMERIC arg)
2023-01-27T20:25:57.373+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-27T20:25:57.374+0200 DEBUG String time(arg)
2023-01-27T20:25:57.374+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-27T20:25:57.374+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T20:25:57.374+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-27T20:25:57.374+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-27T20:25:57.374+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-27T20:25:57.375+0200 DEBUG String upper(STRING string)
2023-01-27T20:25:57.375+0200 DEBUG Date utc_date
2023-01-27T20:25:57.375+0200 DEBUG Time utc_time
2023-01-27T20:25:57.375+0200 DEBUG Timestamp utc_timestamp
2023-01-27T20:25:57.375+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-27T20:25:57.375+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-27T20:25:57.375+0200 DEBUG Double variance(NUMERIC arg)
2023-01-27T20:25:57.375+0200 DEBUG Integer week(DATE arg)
2023-01-27T20:25:57.375+0200 DEBUG Integer year(DATE arg)
2023-01-27T20:25:57.377+0200 DEBUG Character char(INTEGER arg)
2023-01-27T20:25:57.378+0200 DEBUG Date current date
2023-01-27T20:25:57.378+0200 DEBUG Time current time
2023-01-27T20:25:57.378+0200 DEBUG Timestamp current timestamp
2023-01-27T20:25:57.378+0200 DEBUG Instant current_instant
2023-01-27T20:25:57.378+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T20:25:57.378+0200 DEBUG Integer day(DATE arg)
2023-01-27T20:25:57.378+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-27T20:25:57.379+0200 DEBUG LocalDate local date
2023-01-27T20:25:57.379+0200 DEBUG LocalDateTime local datetime
2023-01-27T20:25:57.379+0200 DEBUG LocalTime local time
2023-01-27T20:25:57.379+0200 DEBUG OffsetDateTime offset datetime
2023-01-27T20:25:57.379+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-27T20:25:57.381+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@77bd7fe7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7e642b88]
2023-01-27T20:25:57.578+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T20:25:57.579+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T20:25:57.906+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:17)
2023-01-27T20:25:57.969+0200 DEBUG Starting post-init callbacks
2023-01-27T20:25:57.969+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-27T20:25:57.970+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-27T20:25:58.067+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-27T20:25:58.067+0200 DEBUG  Version select: select id from users where id =?
2023-01-27T20:25:58.067+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-27T20:25:58.068+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-27T20:25:58.069+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-27T20:25:58.089+0200 DEBUG Created new SQL alias : u1_0
2023-01-27T20:25:58.093+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users]
2023-01-27T20:25:58.120+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-27T20:25:58.129+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-27T20:25:58.211+0200 DEBUG Checking 0 named HQL queries
2023-01-27T20:25:58.212+0200 DEBUG Checking 0 named SQL queries
2023-01-27T20:25:58.281+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@31e739bf] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-27T20:25:58.370+0200 DEBUG No alter strings for table : users
2023-01-27T20:25:58.370+0200 DEBUG No alter strings for table : users_SEQ
2023-01-27T20:25:58.394+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T20:25:58.395+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-27T20:25:58.416+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1e3f0aea
2023-01-27T20:25:58.418+0200 DEBUG Registering SessionFactory: 533bb22b-43ee-4168-8379-6c607504e2f9 (<unnamed>)
2023-01-27T20:25:58.419+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-27T20:25:58.500+0200 DEBUG Statistics initialized [enabled=false]
2023-01-27T20:25:58.507+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-27T20:25:58.507+0200 DEBUG begin
2023-01-27T20:25:58.590+0200 DEBUG 
    select
        next_val as id_val 
    from
        users_SEQ for update
2023-01-27T20:25:58.595+0200 DEBUG 
    update
        users_SEQ 
    set
        next_val= ? 
    where
        next_val=?
2023-01-27T20:25:58.899+0200 DEBUG Generated identifier: 302, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2023-01-27T20:25:58.911+0200 DEBUG committing
2023-01-27T20:25:58.911+0200 DEBUG Processing flush-time cascades
2023-01-27T20:25:58.912+0200 DEBUG Dirty checking collections
2023-01-27T20:25:58.916+0200 DEBUG Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-01-27T20:25:58.917+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-27T20:25:58.917+0200 DEBUG Listing entities:
2023-01-27T20:25:58.918+0200 DEBUG edu.itstep.sql.Users{password=test, id=302, userName=user104}
2023-01-27T20:25:58.931+0200 DEBUG 
    insert 
    into
        users
        (password,user_name,id) 
    values
        (?,?,?)
2023-01-27T20:25:58.937+0200 DEBUG Unable to release JDBC result set [Cannot invoke "java.sql.ResultSet.close()" because "resultSet" is null]
2023-01-27T20:25:59.141+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T20:25:59.144+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T20:25:59.146+0200 DEBUG HHH000031: Closing
2023-01-27T20:25:59.147+0200 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@14fc9bd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7e642b88]
2023-01-27T20:25:59.149+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-27T20:25:59.149+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T20:25:59.156+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-27T20:59:38.302+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-27T20:59:38.333+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-27T20:59:38.345+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-27T20:59:38.399+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-27T20:59:38.403+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-27T20:59:38.406+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-27T20:59:38.901+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-27T20:59:38.917+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-27T20:59:39.434+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-27T20:59:39.442+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-27T20:59:39.443+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-27T20:59:39.445+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T20:59:39.445+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T20:59:39.446+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-27T20:59:39.447+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-27T20:59:39.448+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-27T20:59:39.450+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T20:59:39.451+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-27T20:59:39.452+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-27T20:59:39.452+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T20:59:39.454+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-27T20:59:39.465+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-27T20:59:39.468+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-27T20:59:39.754+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T20:59:39.754+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T20:59:39.754+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T20:59:39.755+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T20:59:39.755+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T20:59:39.755+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T20:59:39.755+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T20:59:39.755+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T20:59:39.756+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T20:59:39.756+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T20:59:39.756+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T20:59:39.756+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T20:59:39.758+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T20:59:39.758+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T20:59:39.758+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T20:59:39.758+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T20:59:39.759+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T20:59:39.759+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T20:59:39.759+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T20:59:39.759+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-27T20:59:39.759+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T20:59:39.759+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T20:59:39.760+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T20:59:39.760+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T20:59:39.760+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T20:59:39.760+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T20:59:39.760+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T20:59:39.761+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T20:59:39.761+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T20:59:39.761+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T20:59:39.761+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T20:59:39.762+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T20:59:39.763+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T20:59:39.764+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T20:59:39.764+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T20:59:39.764+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T20:59:39.765+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T20:59:39.765+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T20:59:39.765+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T20:59:39.765+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T20:59:39.766+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T20:59:39.766+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T20:59:39.766+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T20:59:39.766+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T20:59:39.767+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T20:59:39.767+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T20:59:39.767+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-27T20:59:39.767+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T20:59:39.767+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T20:59:39.768+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T20:59:39.768+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T20:59:39.768+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T20:59:39.769+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T20:59:39.769+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T20:59:39.769+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T20:59:39.769+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T20:59:39.769+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T20:59:39.769+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T20:59:39.769+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T20:59:39.770+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T20:59:39.770+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T20:59:39.770+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T20:59:39.770+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-27T20:59:39.770+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-27T20:59:39.771+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-27T20:59:39.771+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-27T20:59:39.771+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T20:59:39.771+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T20:59:39.771+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T20:59:39.771+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T20:59:39.772+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T20:59:39.772+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T20:59:39.772+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T20:59:39.772+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T20:59:39.773+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T20:59:39.773+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T20:59:39.773+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T20:59:39.773+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T20:59:39.773+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T20:59:39.773+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-27T20:59:39.774+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T20:59:39.774+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T20:59:39.774+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T20:59:39.774+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T20:59:39.775+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T20:59:39.775+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T20:59:39.775+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T20:59:39.775+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T20:59:39.775+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T20:59:39.775+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T20:59:39.776+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T20:59:39.776+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T20:59:39.776+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T20:59:39.776+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T20:59:39.776+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T20:59:39.777+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T20:59:39.777+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-27T20:59:39.777+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T20:59:39.777+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T20:59:39.777+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T20:59:39.778+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T20:59:39.778+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T20:59:39.778+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T20:59:39.778+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-27T20:59:39.778+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T20:59:39.779+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T20:59:39.779+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T20:59:39.779+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T20:59:39.779+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T20:59:39.779+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T20:59:39.779+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T20:59:39.780+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T20:59:39.780+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T20:59:39.780+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T20:59:39.780+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T20:59:39.780+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T20:59:39.781+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T20:59:39.781+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T20:59:39.781+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-27T20:59:39.781+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-27T20:59:39.781+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-27T20:59:39.791+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-27T20:59:39.792+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-27T20:59:39.794+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-27T20:59:39.795+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-27T20:59:39.795+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-27T20:59:39.795+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-27T20:59:39.795+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-27T20:59:39.796+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-27T20:59:39.796+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-27T20:59:39.796+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-27T20:59:39.796+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-27T20:59:39.861+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-27T20:59:39.872+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-27T20:59:39.872+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T20:59:39.873+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-27T20:59:39.873+0200 INFO HHH10001003: Autocommit mode: false
2023-01-27T20:59:39.878+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-27T20:59:39.878+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-27T20:59:40.536+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-27T20:59:40.537+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-27T20:59:40.538+0200 DEBUG JDBC version : 4.2
2023-01-27T20:59:40.613+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-27T20:59:40.624+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-27T20:59:40.625+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-27T20:59:40.658+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-27T20:59:40.658+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-27T20:59:40.658+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-27T20:59:40.659+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-27T20:59:40.659+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-27T20:59:40.659+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-27T20:59:40.659+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-27T20:59:40.660+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-27T20:59:40.660+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-27T20:59:40.664+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-27T20:59:40.665+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-27T20:59:40.667+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-27T20:59:40.671+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T20:59:40.672+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T20:59:40.676+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-27T20:59:40.677+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-27T20:59:40.693+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T20:59:40.694+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T20:59:40.694+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T20:59:40.694+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T20:59:40.694+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T20:59:40.694+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T20:59:40.699+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-27T20:59:40.794+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-27T20:59:40.859+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-27T20:59:40.874+0200 DEBUG Import with entity name Users
2023-01-27T20:59:40.890+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-27T20:59:40.910+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-27T20:59:40.938+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-27T20:59:40.946+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T20:59:40.947+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T20:59:40.949+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-27T20:59:40.957+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-27T20:59:40.972+0200 DEBUG building BasicValue for id
2023-01-27T20:59:40.988+0200 DEBUG Skipping column re-registration: users.id
2023-01-27T20:59:40.989+0200 DEBUG Building property id
2023-01-27T20:59:40.996+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-27T20:59:40.999+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-27T20:59:40.999+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-27T20:59:40.999+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-27T20:59:41.000+0200 DEBUG building BasicValue for password
2023-01-27T20:59:41.000+0200 DEBUG Skipping column re-registration: users.password
2023-01-27T20:59:41.000+0200 DEBUG Building property password
2023-01-27T20:59:41.001+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-27T20:59:41.001+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-27T20:59:41.001+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-27T20:59:41.002+0200 DEBUG building BasicValue for userName
2023-01-27T20:59:41.002+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-27T20:59:41.004+0200 DEBUG Building property userName
2023-01-27T20:59:41.017+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-27T20:59:41.017+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-27T20:59:41.020+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-27T20:59:41.035+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-27T20:59:41.155+0200 DEBUG Building session factory
2023-01-27T20:59:41.238+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T20:59:41.246+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-27T20:59:41.247+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-27T20:59:41.266+0200 DEBUG Instantiated session factory
2023-01-27T20:59:41.294+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-27T20:59:41.445+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-27T20:59:41.446+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-27T20:59:41.451+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-27T20:59:41.452+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-27T20:59:41.454+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-27T20:59:41.457+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-27T20:59:41.458+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-27T20:59:41.458+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-27T20:59:41.459+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-27T20:59:41.459+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-27T20:59:41.460+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-27T20:59:41.460+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-27T20:59:41.460+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-27T20:59:41.460+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-27T20:59:41.460+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-27T20:59:41.461+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-27T20:59:41.461+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-27T20:59:41.462+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-27T20:59:41.462+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-27T20:59:41.462+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-27T20:59:41.462+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-27T20:59:41.462+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-27T20:59:41.462+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-27T20:59:41.462+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-27T20:59:41.468+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-27T20:59:41.469+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-27T20:59:41.469+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-27T20:59:41.469+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-27T20:59:41.469+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-27T20:59:41.470+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-27T20:59:41.470+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-27T20:59:41.470+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-27T20:59:41.471+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-27T20:59:41.471+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-27T20:59:41.473+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-27T20:59:41.474+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-27T20:59:41.474+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-27T20:59:41.474+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-27T20:59:41.474+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-27T20:59:41.474+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-27T20:59:41.474+0200 DEBUG Registering alternate key : length -> character_length
2023-01-27T20:59:41.476+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-27T20:59:41.477+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-27T20:59:41.478+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-27T20:59:41.480+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-27T20:59:41.485+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-27T20:59:41.487+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-27T20:59:41.487+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-27T20:59:41.487+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-27T20:59:41.489+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-27T20:59:41.489+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-27T20:59:41.489+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-27T20:59:41.490+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-27T20:59:41.491+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-27T20:59:41.493+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-27T20:59:41.494+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-27T20:59:41.496+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-27T20:59:41.496+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-27T20:59:41.496+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-27T20:59:41.498+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-27T20:59:41.499+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-27T20:59:41.499+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-27T20:59:41.499+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-27T20:59:41.499+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-27T20:59:41.499+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-27T20:59:41.499+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-27T20:59:41.500+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-27T20:59:41.500+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-27T20:59:41.500+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-27T20:59:41.500+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-27T20:59:41.500+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-27T20:59:41.500+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-27T20:59:41.500+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-27T20:59:41.500+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-27T20:59:41.501+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-27T20:59:41.502+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-27T20:59:41.502+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-27T20:59:41.502+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-27T20:59:41.502+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-27T20:59:41.502+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-27T20:59:41.502+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-27T20:59:41.505+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-27T20:59:41.505+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-27T20:59:41.505+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-27T20:59:41.505+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-27T20:59:41.505+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-27T20:59:41.506+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-27T20:59:41.506+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-27T20:59:41.506+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-27T20:59:41.507+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-27T20:59:41.507+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-27T20:59:41.507+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-27T20:59:41.507+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-27T20:59:41.507+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-27T20:59:41.508+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-27T20:59:41.508+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-27T20:59:41.508+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-27T20:59:41.508+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-27T20:59:41.508+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-27T20:59:41.509+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-27T20:59:41.509+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-27T20:59:41.509+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-27T20:59:41.509+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-27T20:59:41.509+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-27T20:59:41.509+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-27T20:59:41.510+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-27T20:59:41.510+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-27T20:59:41.510+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-27T20:59:41.510+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-27T20:59:41.510+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-27T20:59:41.511+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-27T20:59:41.511+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-27T20:59:41.511+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-27T20:59:41.511+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-27T20:59:41.511+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-27T20:59:41.512+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-27T20:59:41.512+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-27T20:59:41.512+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-27T20:59:41.512+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-27T20:59:41.512+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-27T20:59:41.512+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-27T20:59:41.512+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-27T20:59:41.512+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-27T20:59:41.512+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-27T20:59:41.512+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-27T20:59:41.513+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-27T20:59:41.513+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-27T20:59:41.513+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-27T20:59:41.513+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-27T20:59:41.513+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-27T20:59:41.513+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-27T20:59:41.514+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-27T20:59:41.514+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-27T20:59:41.515+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-27T20:59:41.515+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-27T20:59:41.515+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-27T20:59:41.515+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-27T20:59:41.516+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-27T20:59:41.516+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-27T20:59:41.516+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-27T20:59:41.516+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-27T20:59:41.516+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-27T20:59:41.516+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-27T20:59:41.516+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-27T20:59:41.516+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-27T20:59:41.516+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-27T20:59:41.516+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-27T20:59:41.516+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-27T20:59:41.517+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-27T20:59:41.517+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-27T20:59:41.517+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-27T20:59:41.517+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-27T20:59:41.517+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-27T20:59:41.517+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-27T20:59:41.517+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-27T20:59:41.517+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-27T20:59:41.517+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-27T20:59:41.522+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-27T20:59:41.524+0200 DEBUG Registering alternate key : char -> chr
2023-01-27T20:59:41.525+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-27T20:59:41.525+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-27T20:59:41.526+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-27T20:59:41.526+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-27T20:59:41.527+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-27T20:59:41.527+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-27T20:59:41.527+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-27T20:59:41.529+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-27T20:59:41.529+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-27T20:59:41.529+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-27T20:59:41.529+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-27T20:59:41.530+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-27T20:59:41.538+0200 DEBUG abs(NUMERIC arg)
2023-01-27T20:59:41.538+0200 DEBUG Double acos(NUMERIC arg)
2023-01-27T20:59:41.538+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-27T20:59:41.538+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-27T20:59:41.539+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-27T20:59:41.539+0200 DEBUG Integer ascii(STRING arg)
2023-01-27T20:59:41.539+0200 DEBUG Double asin(NUMERIC arg)
2023-01-27T20:59:41.539+0200 DEBUG Double atan(NUMERIC arg)
2023-01-27T20:59:41.542+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-27T20:59:41.545+0200 DEBUG Double avg(NUMERIC arg)
2023-01-27T20:59:41.546+0200 DEBUG bit_and(arg)
2023-01-27T20:59:41.546+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-27T20:59:41.546+0200 DEBUG bit_or(arg)
2023-01-27T20:59:41.546+0200 DEBUG bitand(arg0, arg1)
2023-01-27T20:59:41.547+0200 DEBUG bitnot(arg)
2023-01-27T20:59:41.547+0200 DEBUG bitor(arg0, arg1)
2023-01-27T20:59:41.547+0200 DEBUG bitxor(arg0, arg1)
2023-01-27T20:59:41.547+0200 DEBUG cast(arg as Type)
2023-01-27T20:59:41.548+0200 DEBUG ceiling(NUMERIC arg)
2023-01-27T20:59:41.549+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-27T20:59:41.549+0200 DEBUG Character chr(INTEGER arg)
2023-01-27T20:59:41.549+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-27T20:59:41.549+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-27T20:59:41.549+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-27T20:59:41.549+0200 DEBUG Double cos(NUMERIC arg)
2023-01-27T20:59:41.549+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-27T20:59:41.549+0200 DEBUG Double cot(NUMERIC arg)
2023-01-27T20:59:41.549+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-27T20:59:41.549+0200 DEBUG Integer crc32(arg)
2023-01-27T20:59:41.550+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-27T20:59:41.550+0200 DEBUG Date curdate()
2023-01-27T20:59:41.550+0200 DEBUG Date current_date
2023-01-27T20:59:41.550+0200 DEBUG Time current_time
2023-01-27T20:59:41.550+0200 DEBUG Timestamp current_timestamp
2023-01-27T20:59:41.550+0200 DEBUG Time curtime()
2023-01-27T20:59:41.550+0200 DEBUG Date date(arg)
2023-01-27T20:59:41.550+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-27T20:59:41.551+0200 DEBUG Integer day(DATE arg)
2023-01-27T20:59:41.551+0200 DEBUG String dayname(DATE arg)
2023-01-27T20:59:41.551+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-27T20:59:41.551+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-27T20:59:41.551+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-27T20:59:41.551+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-27T20:59:41.551+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-27T20:59:41.551+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-27T20:59:41.551+0200 DEBUG Double exp(NUMERIC arg)
2023-01-27T20:59:41.552+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-27T20:59:41.552+0200 DEBUG first_valueANY value
2023-01-27T20:59:41.552+0200 DEBUG floor(NUMERIC arg)
2023-01-27T20:59:41.552+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-27T20:59:41.552+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T20:59:41.552+0200 DEBUG Integer hour(TIME arg)
2023-01-27T20:59:41.552+0200 DEBUG ifnull(arg0, arg1)
2023-01-27T20:59:41.552+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-27T20:59:41.552+0200 DEBUG Instant instant
2023-01-27T20:59:41.552+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-27T20:59:41.552+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-27T20:59:41.552+0200 DEBUG Date last_day(DATE arg)
2023-01-27T20:59:41.552+0200 DEBUG last_valueANY value
2023-01-27T20:59:41.553+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-27T20:59:41.553+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T20:59:41.553+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-27T20:59:41.554+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-27T20:59:41.555+0200 DEBUG Double ln(NUMERIC arg)
2023-01-27T20:59:41.555+0200 DEBUG LocalDate local_date
2023-01-27T20:59:41.555+0200 DEBUG LocalDateTime local_datetime
2023-01-27T20:59:41.555+0200 DEBUG LocalTime local_time
2023-01-27T20:59:41.555+0200 DEBUG Timestamp localtime
2023-01-27T20:59:41.555+0200 DEBUG Timestamp localtimestamp
2023-01-27T20:59:41.556+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-27T20:59:41.556+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-27T20:59:41.556+0200 DEBUG Double log10(NUMERIC arg)
2023-01-27T20:59:41.556+0200 DEBUG Double log2(NUMERIC arg)
2023-01-27T20:59:41.556+0200 DEBUG String lower(STRING string)
2023-01-27T20:59:41.556+0200 DEBUG String lpad(string, length[, padding])
2023-01-27T20:59:41.557+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-27T20:59:41.557+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-27T20:59:41.557+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-27T20:59:41.557+0200 DEBUG max(COMPARABLE arg)
2023-01-27T20:59:41.557+0200 DEBUG String md5(arg)
2023-01-27T20:59:41.557+0200 DEBUG Integer microsecond(TIME arg)
2023-01-27T20:59:41.558+0200 DEBUG min(COMPARABLE arg)
2023-01-27T20:59:41.558+0200 DEBUG Integer minute(TIME arg)
2023-01-27T20:59:41.558+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-27T20:59:41.558+0200 DEBUG Integer month(DATE arg)
2023-01-27T20:59:41.558+0200 DEBUG String monthname(DATE arg)
2023-01-27T20:59:41.558+0200 DEBUG Timestamp now()
2023-01-27T20:59:41.558+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-27T20:59:41.558+0200 DEBUG nullif(arg0, arg1)
2023-01-27T20:59:41.559+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-27T20:59:41.559+0200 DEBUG OffsetDateTime offset_datetime
2023-01-27T20:59:41.559+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-27T20:59:41.559+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-27T20:59:41.562+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-27T20:59:41.562+0200 DEBUG Double pi
2023-01-27T20:59:41.562+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-27T20:59:41.562+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-27T20:59:41.562+0200 DEBUG Integer quarter(DATE arg)
2023-01-27T20:59:41.566+0200 DEBUG Double radians(NUMERIC arg)
2023-01-27T20:59:41.567+0200 DEBUG Double rand([INTEGER seed])
2023-01-27T20:59:41.567+0200 DEBUG Long rank([arg0[, ...]])
2023-01-27T20:59:41.567+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-27T20:59:41.568+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-27T20:59:41.568+0200 DEBUG String reverse(STRING arg)
2023-01-27T20:59:41.568+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-27T20:59:41.568+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-27T20:59:41.568+0200 DEBUG Long row_number()
2023-01-27T20:59:41.569+0200 DEBUG String rpad(string, length[, padding])
2023-01-27T20:59:41.569+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-27T20:59:41.570+0200 DEBUG Integer second(TIME arg)
2023-01-27T20:59:41.570+0200 DEBUG String sha(arg)
2023-01-27T20:59:41.570+0200 DEBUG String sha1(arg)
2023-01-27T20:59:41.570+0200 DEBUG String sha2(arg0, arg1)
2023-01-27T20:59:41.571+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-27T20:59:41.571+0200 DEBUG Double sin(NUMERIC arg)
2023-01-27T20:59:41.571+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-27T20:59:41.572+0200 DEBUG String soundex(arg)
2023-01-27T20:59:41.572+0200 DEBUG String space(INTEGER arg)
2023-01-27T20:59:41.572+0200 DEBUG Object sql
2023-01-27T20:59:41.572+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-27T20:59:41.572+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-27T20:59:41.572+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-27T20:59:41.573+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-27T20:59:41.573+0200 DEBUG String str(arg)
2023-01-27T20:59:41.573+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-27T20:59:41.573+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-27T20:59:41.574+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-27T20:59:41.575+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-27T20:59:41.580+0200 DEBUG sum(arg)
2023-01-27T20:59:41.580+0200 DEBUG Timestamp sysdate()
2023-01-27T20:59:41.582+0200 DEBUG Double tan(NUMERIC arg)
2023-01-27T20:59:41.582+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-27T20:59:41.582+0200 DEBUG String time(arg)
2023-01-27T20:59:41.582+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-27T20:59:41.582+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T20:59:41.586+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-27T20:59:41.587+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-27T20:59:41.587+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-27T20:59:41.587+0200 DEBUG String upper(STRING string)
2023-01-27T20:59:41.587+0200 DEBUG Date utc_date
2023-01-27T20:59:41.587+0200 DEBUG Time utc_time
2023-01-27T20:59:41.587+0200 DEBUG Timestamp utc_timestamp
2023-01-27T20:59:41.587+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-27T20:59:41.587+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-27T20:59:41.587+0200 DEBUG Double variance(NUMERIC arg)
2023-01-27T20:59:41.588+0200 DEBUG Integer week(DATE arg)
2023-01-27T20:59:41.588+0200 DEBUG Integer year(DATE arg)
2023-01-27T20:59:41.589+0200 DEBUG Character char(INTEGER arg)
2023-01-27T20:59:41.590+0200 DEBUG Date current date
2023-01-27T20:59:41.590+0200 DEBUG Time current time
2023-01-27T20:59:41.590+0200 DEBUG Timestamp current timestamp
2023-01-27T20:59:41.590+0200 DEBUG Instant current_instant
2023-01-27T20:59:41.590+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T20:59:41.590+0200 DEBUG Integer day(DATE arg)
2023-01-27T20:59:41.590+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-27T20:59:41.591+0200 DEBUG LocalDate local date
2023-01-27T20:59:41.591+0200 DEBUG LocalDateTime local datetime
2023-01-27T20:59:41.591+0200 DEBUG LocalTime local time
2023-01-27T20:59:41.591+0200 DEBUG OffsetDateTime offset datetime
2023-01-27T20:59:41.591+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-27T20:59:41.593+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-27T20:59:41.809+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T20:59:41.809+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T20:59:42.167+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:17)
2023-01-27T20:59:42.267+0200 DEBUG Starting post-init callbacks
2023-01-27T20:59:42.267+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-27T20:59:42.268+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-27T20:59:42.420+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-27T20:59:42.421+0200 DEBUG  Version select: select id from users where id =?
2023-01-27T20:59:42.422+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-27T20:59:42.423+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-27T20:59:42.423+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-27T20:59:42.450+0200 DEBUG Created new SQL alias : u1_0
2023-01-27T20:59:42.457+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users]
2023-01-27T20:59:42.491+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-27T20:59:42.496+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-27T20:59:42.552+0200 DEBUG Checking 0 named HQL queries
2023-01-27T20:59:42.553+0200 DEBUG Checking 0 named SQL queries
2023-01-27T20:59:42.600+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-27T20:59:42.659+0200 DEBUG No alter strings for table : users
2023-01-27T20:59:42.659+0200 DEBUG No alter strings for table : users_SEQ
2023-01-27T20:59:42.679+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T20:59:42.679+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-27T20:59:42.705+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-27T20:59:42.707+0200 DEBUG Registering SessionFactory: 7f83efe5-913c-450c-b8b4-59ec5eeef06d (<unnamed>)
2023-01-27T20:59:42.707+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-27T20:59:42.799+0200 DEBUG Statistics initialized [enabled=false]
2023-01-27T20:59:42.809+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-27T20:59:42.809+0200 DEBUG begin
2023-01-27T20:59:43.032+0200 DEBUG 
    select
        next_val as id_val 
    from
        users_SEQ for update
2023-01-27T20:59:43.036+0200 DEBUG 
    update
        users_SEQ 
    set
        next_val= ? 
    where
        next_val=?
2023-01-27T20:59:43.384+0200 DEBUG Generated identifier: 352, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2023-01-27T20:59:43.397+0200 DEBUG committing
2023-01-27T20:59:43.398+0200 DEBUG Processing flush-time cascades
2023-01-27T20:59:43.399+0200 DEBUG Dirty checking collections
2023-01-27T20:59:43.406+0200 DEBUG Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-01-27T20:59:43.406+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-27T20:59:43.407+0200 DEBUG Listing entities:
2023-01-27T20:59:43.408+0200 DEBUG edu.itstep.sql.Users{password=test, id=352, userName=user104}
2023-01-27T20:59:43.425+0200 DEBUG 
    insert 
    into
        users
        (password,user_name,id) 
    values
        (?,?,?)
2023-01-27T20:59:43.433+0200 DEBUG Unable to release JDBC result set [Cannot invoke "java.sql.ResultSet.close()" because "resultSet" is null]
2023-01-27T20:59:43.757+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T20:59:43.760+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T20:59:43.761+0200 DEBUG HHH000031: Closing
2023-01-27T20:59:43.762+0200 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1cd6b1bd] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-27T20:59:43.763+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-27T20:59:43.764+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T20:59:43.770+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-27T21:03:41.392+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-27T21:03:41.426+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-27T21:03:41.436+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-27T21:03:41.482+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-27T21:03:41.485+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-27T21:03:41.488+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-27T21:03:41.911+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-27T21:03:41.925+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-27T21:03:42.407+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-27T21:03:42.415+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-27T21:03:42.416+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-27T21:03:42.417+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T21:03:42.417+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T21:03:42.418+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-27T21:03:42.419+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-27T21:03:42.420+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-27T21:03:42.423+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T21:03:42.424+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-27T21:03:42.425+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-27T21:03:42.426+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T21:03:42.428+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-27T21:03:42.441+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-27T21:03:42.443+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-27T21:03:42.721+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T21:03:42.722+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T21:03:42.722+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T21:03:42.722+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T21:03:42.722+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T21:03:42.723+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T21:03:42.723+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T21:03:42.723+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T21:03:42.723+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T21:03:42.724+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T21:03:42.724+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T21:03:42.724+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T21:03:42.724+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T21:03:42.724+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T21:03:42.725+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T21:03:42.725+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T21:03:42.725+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T21:03:42.725+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T21:03:42.725+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T21:03:42.726+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-27T21:03:42.726+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T21:03:42.726+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T21:03:42.726+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T21:03:42.726+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T21:03:42.726+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T21:03:42.727+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T21:03:42.727+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T21:03:42.727+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T21:03:42.727+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T21:03:42.728+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T21:03:42.728+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T21:03:42.728+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T21:03:42.728+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T21:03:42.728+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T21:03:42.728+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T21:03:42.729+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T21:03:42.729+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T21:03:42.729+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T21:03:42.729+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T21:03:42.729+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T21:03:42.729+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T21:03:42.730+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T21:03:42.730+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T21:03:42.730+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T21:03:42.730+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T21:03:42.731+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T21:03:42.731+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-27T21:03:42.732+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T21:03:42.732+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T21:03:42.732+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T21:03:42.733+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T21:03:42.733+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T21:03:42.733+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T21:03:42.734+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T21:03:42.734+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T21:03:42.734+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T21:03:42.734+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T21:03:42.734+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T21:03:42.735+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T21:03:42.735+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T21:03:42.735+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T21:03:42.735+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T21:03:42.735+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-27T21:03:42.735+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-27T21:03:42.735+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-27T21:03:42.736+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-27T21:03:42.736+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T21:03:42.736+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T21:03:42.736+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T21:03:42.736+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T21:03:42.736+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T21:03:42.737+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T21:03:42.737+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T21:03:42.737+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T21:03:42.737+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T21:03:42.737+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T21:03:42.737+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T21:03:42.738+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T21:03:42.738+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T21:03:42.738+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-27T21:03:42.738+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T21:03:42.738+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T21:03:42.738+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T21:03:42.739+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T21:03:42.739+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T21:03:42.739+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T21:03:42.739+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T21:03:42.739+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T21:03:42.739+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T21:03:42.739+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T21:03:42.740+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T21:03:42.740+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T21:03:42.740+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T21:03:42.740+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T21:03:42.741+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T21:03:42.741+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T21:03:42.741+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-27T21:03:42.741+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T21:03:42.741+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T21:03:42.742+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T21:03:42.742+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T21:03:42.742+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T21:03:42.742+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T21:03:42.742+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-27T21:03:42.742+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T21:03:42.743+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T21:03:42.743+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T21:03:42.743+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T21:03:42.743+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T21:03:42.743+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T21:03:42.743+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T21:03:42.744+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T21:03:42.744+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T21:03:42.744+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T21:03:42.744+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T21:03:42.744+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T21:03:42.745+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T21:03:42.745+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T21:03:42.745+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-27T21:03:42.745+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-27T21:03:42.745+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-27T21:03:42.754+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-27T21:03:42.755+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-27T21:03:42.757+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-27T21:03:42.757+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-27T21:03:42.757+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-27T21:03:42.758+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-27T21:03:42.758+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-27T21:03:42.758+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-27T21:03:42.758+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-27T21:03:42.758+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-27T21:03:42.758+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-27T21:03:42.813+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-27T21:03:42.822+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-27T21:03:42.822+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T21:03:42.822+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-27T21:03:42.822+0200 INFO HHH10001003: Autocommit mode: false
2023-01-27T21:03:42.827+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-27T21:03:42.828+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-27T21:03:43.656+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-27T21:03:43.656+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-27T21:03:43.656+0200 DEBUG JDBC version : 4.2
2023-01-27T21:03:43.724+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-27T21:03:43.735+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-27T21:03:43.735+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-27T21:03:43.761+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-27T21:03:43.762+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-27T21:03:43.762+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-27T21:03:43.763+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-27T21:03:43.763+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-27T21:03:43.763+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-27T21:03:43.763+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-27T21:03:43.763+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-27T21:03:43.763+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-27T21:03:43.765+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-27T21:03:43.766+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-27T21:03:43.766+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-27T21:03:43.770+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T21:03:43.770+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T21:03:43.775+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-27T21:03:43.775+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-27T21:03:43.785+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T21:03:43.786+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T21:03:43.786+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T21:03:43.786+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T21:03:43.786+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T21:03:43.786+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T21:03:43.788+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-27T21:03:43.844+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-27T21:03:43.889+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-27T21:03:43.906+0200 DEBUG Import with entity name Users
2023-01-27T21:03:43.919+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-27T21:03:43.933+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-27T21:03:43.956+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-27T21:03:43.961+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T21:03:43.961+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T21:03:43.963+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-27T21:03:43.970+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-27T21:03:43.980+0200 DEBUG building BasicValue for id
2023-01-27T21:03:43.986+0200 DEBUG Skipping column re-registration: users.id
2023-01-27T21:03:43.987+0200 DEBUG Building property id
2023-01-27T21:03:43.992+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-27T21:03:43.994+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-27T21:03:43.995+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-27T21:03:43.995+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-27T21:03:43.995+0200 DEBUG building BasicValue for password
2023-01-27T21:03:43.995+0200 DEBUG Skipping column re-registration: users.password
2023-01-27T21:03:43.995+0200 DEBUG Building property password
2023-01-27T21:03:43.996+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-27T21:03:43.996+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-27T21:03:43.996+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-27T21:03:43.996+0200 DEBUG building BasicValue for userName
2023-01-27T21:03:43.996+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-27T21:03:43.997+0200 DEBUG Building property userName
2023-01-27T21:03:44.006+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-27T21:03:44.006+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-27T21:03:44.008+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-27T21:03:44.012+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-27T21:03:44.095+0200 DEBUG Building session factory
2023-01-27T21:03:44.183+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T21:03:44.190+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-27T21:03:44.192+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-27T21:03:44.203+0200 DEBUG Instantiated session factory
2023-01-27T21:03:44.225+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-27T21:03:44.373+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-27T21:03:44.373+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-27T21:03:44.375+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-27T21:03:44.376+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-27T21:03:44.378+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-27T21:03:44.380+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-27T21:03:44.380+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-27T21:03:44.381+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-27T21:03:44.381+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-27T21:03:44.381+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-27T21:03:44.381+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-27T21:03:44.381+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-27T21:03:44.381+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-27T21:03:44.381+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-27T21:03:44.382+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-27T21:03:44.382+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-27T21:03:44.383+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-27T21:03:44.383+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-27T21:03:44.383+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-27T21:03:44.384+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-27T21:03:44.384+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-27T21:03:44.384+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-27T21:03:44.384+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-27T21:03:44.384+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-27T21:03:44.387+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-27T21:03:44.387+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-27T21:03:44.387+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-27T21:03:44.387+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-27T21:03:44.387+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-27T21:03:44.388+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-27T21:03:44.388+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-27T21:03:44.388+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-27T21:03:44.389+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-27T21:03:44.389+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-27T21:03:44.390+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-27T21:03:44.390+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-27T21:03:44.390+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-27T21:03:44.392+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-27T21:03:44.393+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-27T21:03:44.393+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-27T21:03:44.393+0200 DEBUG Registering alternate key : length -> character_length
2023-01-27T21:03:44.394+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-27T21:03:44.395+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-27T21:03:44.396+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-27T21:03:44.397+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-27T21:03:44.397+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-27T21:03:44.399+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-27T21:03:44.399+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-27T21:03:44.399+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-27T21:03:44.400+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-27T21:03:44.400+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-27T21:03:44.400+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-27T21:03:44.401+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-27T21:03:44.402+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-27T21:03:44.404+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-27T21:03:44.414+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-27T21:03:44.415+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-27T21:03:44.415+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-27T21:03:44.415+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-27T21:03:44.416+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-27T21:03:44.416+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-27T21:03:44.416+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-27T21:03:44.416+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-27T21:03:44.416+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-27T21:03:44.416+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-27T21:03:44.417+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-27T21:03:44.417+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-27T21:03:44.417+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-27T21:03:44.417+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-27T21:03:44.417+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-27T21:03:44.417+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-27T21:03:44.417+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-27T21:03:44.417+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-27T21:03:44.417+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-27T21:03:44.417+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-27T21:03:44.418+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-27T21:03:44.418+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-27T21:03:44.418+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-27T21:03:44.418+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-27T21:03:44.418+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-27T21:03:44.418+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-27T21:03:44.419+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-27T21:03:44.419+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-27T21:03:44.419+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-27T21:03:44.419+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-27T21:03:44.419+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-27T21:03:44.419+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-27T21:03:44.419+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-27T21:03:44.419+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-27T21:03:44.420+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-27T21:03:44.420+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-27T21:03:44.421+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-27T21:03:44.421+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-27T21:03:44.421+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-27T21:03:44.422+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-27T21:03:44.422+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-27T21:03:44.422+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-27T21:03:44.422+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-27T21:03:44.422+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-27T21:03:44.422+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-27T21:03:44.422+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-27T21:03:44.422+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-27T21:03:44.422+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-27T21:03:44.422+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-27T21:03:44.422+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-27T21:03:44.422+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-27T21:03:44.422+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-27T21:03:44.423+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-27T21:03:44.423+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-27T21:03:44.423+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-27T21:03:44.423+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-27T21:03:44.423+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-27T21:03:44.423+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-27T21:03:44.423+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-27T21:03:44.423+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-27T21:03:44.424+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-27T21:03:44.424+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-27T21:03:44.424+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-27T21:03:44.424+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-27T21:03:44.424+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-27T21:03:44.425+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-27T21:03:44.425+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-27T21:03:44.425+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-27T21:03:44.425+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-27T21:03:44.425+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-27T21:03:44.425+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-27T21:03:44.425+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-27T21:03:44.426+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-27T21:03:44.426+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-27T21:03:44.426+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-27T21:03:44.426+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-27T21:03:44.426+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-27T21:03:44.427+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-27T21:03:44.427+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-27T21:03:44.427+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-27T21:03:44.427+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-27T21:03:44.427+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-27T21:03:44.427+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-27T21:03:44.427+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-27T21:03:44.427+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-27T21:03:44.427+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-27T21:03:44.427+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-27T21:03:44.428+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-27T21:03:44.428+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-27T21:03:44.428+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-27T21:03:44.437+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-27T21:03:44.437+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-27T21:03:44.437+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-27T21:03:44.437+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-27T21:03:44.437+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-27T21:03:44.437+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-27T21:03:44.437+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-27T21:03:44.438+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-27T21:03:44.438+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-27T21:03:44.438+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-27T21:03:44.438+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-27T21:03:44.438+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-27T21:03:44.438+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-27T21:03:44.439+0200 DEBUG Registering alternate key : char -> chr
2023-01-27T21:03:44.439+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-27T21:03:44.439+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-27T21:03:44.440+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-27T21:03:44.440+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-27T21:03:44.441+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-27T21:03:44.441+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-27T21:03:44.441+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-27T21:03:44.443+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-27T21:03:44.443+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-27T21:03:44.444+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-27T21:03:44.444+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-27T21:03:44.445+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-27T21:03:44.453+0200 DEBUG abs(NUMERIC arg)
2023-01-27T21:03:44.453+0200 DEBUG Double acos(NUMERIC arg)
2023-01-27T21:03:44.453+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-27T21:03:44.453+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-27T21:03:44.453+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-27T21:03:44.453+0200 DEBUG Integer ascii(STRING arg)
2023-01-27T21:03:44.453+0200 DEBUG Double asin(NUMERIC arg)
2023-01-27T21:03:44.453+0200 DEBUG Double atan(NUMERIC arg)
2023-01-27T21:03:44.457+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-27T21:03:44.457+0200 DEBUG Double avg(NUMERIC arg)
2023-01-27T21:03:44.458+0200 DEBUG bit_and(arg)
2023-01-27T21:03:44.458+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-27T21:03:44.458+0200 DEBUG bit_or(arg)
2023-01-27T21:03:44.458+0200 DEBUG bitand(arg0, arg1)
2023-01-27T21:03:44.458+0200 DEBUG bitnot(arg)
2023-01-27T21:03:44.458+0200 DEBUG bitor(arg0, arg1)
2023-01-27T21:03:44.458+0200 DEBUG bitxor(arg0, arg1)
2023-01-27T21:03:44.458+0200 DEBUG cast(arg as Type)
2023-01-27T21:03:44.458+0200 DEBUG ceiling(NUMERIC arg)
2023-01-27T21:03:44.458+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-27T21:03:44.458+0200 DEBUG Character chr(INTEGER arg)
2023-01-27T21:03:44.458+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-27T21:03:44.459+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-27T21:03:44.459+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-27T21:03:44.459+0200 DEBUG Double cos(NUMERIC arg)
2023-01-27T21:03:44.459+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-27T21:03:44.459+0200 DEBUG Double cot(NUMERIC arg)
2023-01-27T21:03:44.459+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-27T21:03:44.459+0200 DEBUG Integer crc32(arg)
2023-01-27T21:03:44.459+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-27T21:03:44.459+0200 DEBUG Date curdate()
2023-01-27T21:03:44.459+0200 DEBUG Date current_date
2023-01-27T21:03:44.460+0200 DEBUG Time current_time
2023-01-27T21:03:44.460+0200 DEBUG Timestamp current_timestamp
2023-01-27T21:03:44.460+0200 DEBUG Time curtime()
2023-01-27T21:03:44.460+0200 DEBUG Date date(arg)
2023-01-27T21:03:44.460+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-27T21:03:44.460+0200 DEBUG Integer day(DATE arg)
2023-01-27T21:03:44.460+0200 DEBUG String dayname(DATE arg)
2023-01-27T21:03:44.461+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-27T21:03:44.461+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-27T21:03:44.461+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-27T21:03:44.461+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-27T21:03:44.461+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-27T21:03:44.461+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-27T21:03:44.461+0200 DEBUG Double exp(NUMERIC arg)
2023-01-27T21:03:44.461+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-27T21:03:44.462+0200 DEBUG first_valueANY value
2023-01-27T21:03:44.462+0200 DEBUG floor(NUMERIC arg)
2023-01-27T21:03:44.462+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-27T21:03:44.462+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T21:03:44.462+0200 DEBUG Integer hour(TIME arg)
2023-01-27T21:03:44.462+0200 DEBUG ifnull(arg0, arg1)
2023-01-27T21:03:44.462+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-27T21:03:44.462+0200 DEBUG Instant instant
2023-01-27T21:03:44.462+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-27T21:03:44.462+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-27T21:03:44.462+0200 DEBUG Date last_day(DATE arg)
2023-01-27T21:03:44.462+0200 DEBUG last_valueANY value
2023-01-27T21:03:44.463+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-27T21:03:44.463+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T21:03:44.463+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-27T21:03:44.463+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-27T21:03:44.463+0200 DEBUG Double ln(NUMERIC arg)
2023-01-27T21:03:44.463+0200 DEBUG LocalDate local_date
2023-01-27T21:03:44.463+0200 DEBUG LocalDateTime local_datetime
2023-01-27T21:03:44.463+0200 DEBUG LocalTime local_time
2023-01-27T21:03:44.463+0200 DEBUG Timestamp localtime
2023-01-27T21:03:44.463+0200 DEBUG Timestamp localtimestamp
2023-01-27T21:03:44.463+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-27T21:03:44.464+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-27T21:03:44.464+0200 DEBUG Double log10(NUMERIC arg)
2023-01-27T21:03:44.464+0200 DEBUG Double log2(NUMERIC arg)
2023-01-27T21:03:44.464+0200 DEBUG String lower(STRING string)
2023-01-27T21:03:44.464+0200 DEBUG String lpad(string, length[, padding])
2023-01-27T21:03:44.464+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-27T21:03:44.464+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-27T21:03:44.464+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-27T21:03:44.464+0200 DEBUG max(COMPARABLE arg)
2023-01-27T21:03:44.464+0200 DEBUG String md5(arg)
2023-01-27T21:03:44.464+0200 DEBUG Integer microsecond(TIME arg)
2023-01-27T21:03:44.464+0200 DEBUG min(COMPARABLE arg)
2023-01-27T21:03:44.465+0200 DEBUG Integer minute(TIME arg)
2023-01-27T21:03:44.465+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-27T21:03:44.465+0200 DEBUG Integer month(DATE arg)
2023-01-27T21:03:44.465+0200 DEBUG String monthname(DATE arg)
2023-01-27T21:03:44.465+0200 DEBUG Timestamp now()
2023-01-27T21:03:44.465+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-27T21:03:44.465+0200 DEBUG nullif(arg0, arg1)
2023-01-27T21:03:44.465+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-27T21:03:44.465+0200 DEBUG OffsetDateTime offset_datetime
2023-01-27T21:03:44.465+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-27T21:03:44.466+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-27T21:03:44.466+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-27T21:03:44.466+0200 DEBUG Double pi
2023-01-27T21:03:44.466+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-27T21:03:44.466+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-27T21:03:44.466+0200 DEBUG Integer quarter(DATE arg)
2023-01-27T21:03:44.466+0200 DEBUG Double radians(NUMERIC arg)
2023-01-27T21:03:44.466+0200 DEBUG Double rand([INTEGER seed])
2023-01-27T21:03:44.466+0200 DEBUG Long rank([arg0[, ...]])
2023-01-27T21:03:44.466+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-27T21:03:44.466+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-27T21:03:44.466+0200 DEBUG String reverse(STRING arg)
2023-01-27T21:03:44.466+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-27T21:03:44.466+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-27T21:03:44.466+0200 DEBUG Long row_number()
2023-01-27T21:03:44.466+0200 DEBUG String rpad(string, length[, padding])
2023-01-27T21:03:44.467+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-27T21:03:44.467+0200 DEBUG Integer second(TIME arg)
2023-01-27T21:03:44.467+0200 DEBUG String sha(arg)
2023-01-27T21:03:44.467+0200 DEBUG String sha1(arg)
2023-01-27T21:03:44.467+0200 DEBUG String sha2(arg0, arg1)
2023-01-27T21:03:44.467+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-27T21:03:44.467+0200 DEBUG Double sin(NUMERIC arg)
2023-01-27T21:03:44.467+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-27T21:03:44.467+0200 DEBUG String soundex(arg)
2023-01-27T21:03:44.468+0200 DEBUG String space(INTEGER arg)
2023-01-27T21:03:44.468+0200 DEBUG Object sql
2023-01-27T21:03:44.468+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-27T21:03:44.468+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-27T21:03:44.468+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-27T21:03:44.468+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-27T21:03:44.469+0200 DEBUG String str(arg)
2023-01-27T21:03:44.469+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-27T21:03:44.469+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-27T21:03:44.469+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-27T21:03:44.469+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-27T21:03:44.469+0200 DEBUG sum(arg)
2023-01-27T21:03:44.469+0200 DEBUG Timestamp sysdate()
2023-01-27T21:03:44.469+0200 DEBUG Double tan(NUMERIC arg)
2023-01-27T21:03:44.469+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-27T21:03:44.469+0200 DEBUG String time(arg)
2023-01-27T21:03:44.470+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-27T21:03:44.470+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T21:03:44.471+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-27T21:03:44.471+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-27T21:03:44.471+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-27T21:03:44.471+0200 DEBUG String upper(STRING string)
2023-01-27T21:03:44.471+0200 DEBUG Date utc_date
2023-01-27T21:03:44.471+0200 DEBUG Time utc_time
2023-01-27T21:03:44.471+0200 DEBUG Timestamp utc_timestamp
2023-01-27T21:03:44.471+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-27T21:03:44.471+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-27T21:03:44.471+0200 DEBUG Double variance(NUMERIC arg)
2023-01-27T21:03:44.472+0200 DEBUG Integer week(DATE arg)
2023-01-27T21:03:44.473+0200 DEBUG Integer year(DATE arg)
2023-01-27T21:03:44.474+0200 DEBUG Character char(INTEGER arg)
2023-01-27T21:03:44.475+0200 DEBUG Date current date
2023-01-27T21:03:44.475+0200 DEBUG Time current time
2023-01-27T21:03:44.475+0200 DEBUG Timestamp current timestamp
2023-01-27T21:03:44.475+0200 DEBUG Instant current_instant
2023-01-27T21:03:44.475+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T21:03:44.475+0200 DEBUG Integer day(DATE arg)
2023-01-27T21:03:44.475+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-27T21:03:44.475+0200 DEBUG LocalDate local date
2023-01-27T21:03:44.475+0200 DEBUG LocalDateTime local datetime
2023-01-27T21:03:44.475+0200 DEBUG LocalTime local time
2023-01-27T21:03:44.475+0200 DEBUG OffsetDateTime offset datetime
2023-01-27T21:03:44.475+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-27T21:03:44.477+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-27T21:03:44.706+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T21:03:44.706+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T21:03:45.070+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:18)
2023-01-27T21:03:45.149+0200 DEBUG Starting post-init callbacks
2023-01-27T21:03:45.149+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-27T21:03:45.150+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-27T21:03:45.275+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-27T21:03:45.276+0200 DEBUG  Version select: select id from users where id =?
2023-01-27T21:03:45.276+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-27T21:03:45.277+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-27T21:03:45.277+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-27T21:03:45.309+0200 DEBUG Created new SQL alias : u1_0
2023-01-27T21:03:45.324+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users]
2023-01-27T21:03:45.358+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-27T21:03:45.364+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-27T21:03:45.426+0200 DEBUG Checking 0 named HQL queries
2023-01-27T21:03:45.427+0200 DEBUG Checking 0 named SQL queries
2023-01-27T21:03:45.481+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-27T21:03:45.541+0200 DEBUG No alter strings for table : users
2023-01-27T21:03:45.542+0200 DEBUG No alter strings for table : users_SEQ
2023-01-27T21:03:45.569+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T21:03:45.569+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-27T21:03:45.589+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-27T21:03:45.593+0200 DEBUG Registering SessionFactory: b019afb3-9bda-4b77-8985-9c31eb472a1c (<unnamed>)
2023-01-27T21:03:45.594+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-27T21:03:45.694+0200 DEBUG Statistics initialized [enabled=false]
2023-01-27T21:03:45.718+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-27T21:03:45.719+0200 DEBUG begin
2023-01-27T21:03:45.988+0200 DEBUG 
    select
        next_val as id_val 
    from
        users_SEQ for update
2023-01-27T21:03:45.997+0200 DEBUG 
    update
        users_SEQ 
    set
        next_val= ? 
    where
        next_val=?
2023-01-27T21:03:46.294+0200 DEBUG Generated identifier: 402, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2023-01-27T21:03:46.308+0200 DEBUG committing
2023-01-27T21:03:46.309+0200 DEBUG Processing flush-time cascades
2023-01-27T21:03:46.309+0200 DEBUG Dirty checking collections
2023-01-27T21:03:46.317+0200 DEBUG Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-01-27T21:03:46.318+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-27T21:03:46.319+0200 DEBUG Listing entities:
2023-01-27T21:03:46.319+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm, id=402, userName=user105}
2023-01-27T21:03:46.340+0200 DEBUG 
    insert 
    into
        users
        (password,user_name,id) 
    values
        (?,?,?)
2023-01-27T21:03:46.349+0200 DEBUG Unable to release JDBC result set [Cannot invoke "java.sql.ResultSet.close()" because "resultSet" is null]
2023-01-27T21:03:47.518+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T21:03:47.523+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T21:03:47.524+0200 DEBUG HHH000031: Closing
2023-01-27T21:03:47.525+0200 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5e5ddfbc] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-27T21:03:47.525+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-27T21:03:47.526+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T21:03:47.535+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-27T21:06:15.667+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-27T21:06:15.701+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-27T21:06:15.711+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-27T21:06:15.767+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-27T21:06:15.770+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-27T21:06:15.773+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-27T21:06:16.224+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-27T21:06:16.239+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-27T21:06:16.682+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-27T21:06:16.688+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-27T21:06:16.689+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-27T21:06:16.690+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T21:06:16.691+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-27T21:06:16.692+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-27T21:06:16.694+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-27T21:06:16.694+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-27T21:06:16.696+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T21:06:16.697+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-27T21:06:16.698+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-27T21:06:16.698+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-27T21:06:16.700+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-27T21:06:16.709+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-27T21:06:16.713+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-27T21:06:16.979+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T21:06:16.980+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T21:06:16.980+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-27T21:06:16.980+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T21:06:16.980+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-27T21:06:16.981+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T21:06:16.981+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-27T21:06:16.981+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T21:06:16.981+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-27T21:06:16.981+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T21:06:16.982+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T21:06:16.982+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-27T21:06:16.982+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T21:06:16.982+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T21:06:16.982+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-27T21:06:16.983+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T21:06:16.983+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T21:06:16.983+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T21:06:16.984+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-27T21:06:16.985+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-27T21:06:16.986+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T21:06:16.986+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-27T21:06:16.986+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-27T21:06:16.986+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-27T21:06:16.986+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T21:06:16.987+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T21:06:16.987+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-27T21:06:16.987+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T21:06:16.987+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T21:06:16.988+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-27T21:06:16.988+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T21:06:16.988+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T21:06:16.988+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-27T21:06:16.988+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T21:06:16.989+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T21:06:16.989+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-27T21:06:16.989+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T21:06:16.989+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T21:06:16.989+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-27T21:06:16.989+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T21:06:16.990+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-27T21:06:16.990+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T21:06:16.990+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-27T21:06:16.990+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T21:06:16.991+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T21:06:16.991+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-27T21:06:16.991+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-27T21:06:16.992+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T21:06:16.992+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-27T21:06:16.993+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-27T21:06:16.993+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T21:06:16.993+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T21:06:16.993+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-27T21:06:16.994+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T21:06:16.994+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T21:06:16.994+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-27T21:06:16.994+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-27T21:06:16.994+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-27T21:06:16.994+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T21:06:16.994+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-27T21:06:16.995+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T21:06:16.995+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-27T21:06:16.995+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-27T21:06:16.995+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-27T21:06:16.995+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-27T21:06:16.995+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-27T21:06:16.995+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-27T21:06:16.996+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-27T21:06:16.996+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T21:06:16.996+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-27T21:06:16.996+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T21:06:16.996+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-27T21:06:16.996+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T21:06:16.997+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-27T21:06:16.997+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T21:06:16.997+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-27T21:06:16.997+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T21:06:16.997+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-27T21:06:16.997+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-27T21:06:16.997+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-27T21:06:16.998+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T21:06:16.998+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-27T21:06:16.998+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T21:06:16.998+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-27T21:06:16.998+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-27T21:06:16.998+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-27T21:06:16.998+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T21:06:16.999+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-27T21:06:16.999+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T21:06:16.999+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-27T21:06:16.999+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T21:06:16.999+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T21:06:17.000+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-27T21:06:17.000+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T21:06:17.000+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T21:06:17.000+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-27T21:06:17.000+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-27T21:06:17.001+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-27T21:06:17.001+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T21:06:17.002+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-27T21:06:17.002+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T21:06:17.002+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T21:06:17.002+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-27T21:06:17.003+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-27T21:06:17.003+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-27T21:06:17.003+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T21:06:17.003+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-27T21:06:17.003+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T21:06:17.004+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T21:06:17.004+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-27T21:06:17.004+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T21:06:17.004+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-27T21:06:17.004+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T21:06:17.004+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-27T21:06:17.005+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T21:06:17.005+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-27T21:06:17.005+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T21:06:17.005+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-27T21:06:17.005+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-27T21:06:17.005+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-27T21:06:17.006+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-27T21:06:17.014+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-27T21:06:17.015+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-27T21:06:17.017+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-27T21:06:17.018+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-27T21:06:17.018+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-27T21:06:17.018+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-27T21:06:17.018+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-27T21:06:17.018+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-27T21:06:17.019+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-27T21:06:17.019+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-27T21:06:17.019+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-27T21:06:17.080+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-27T21:06:17.090+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-27T21:06:17.091+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T21:06:17.092+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-27T21:06:17.092+0200 INFO HHH10001003: Autocommit mode: false
2023-01-27T21:06:17.097+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-27T21:06:17.097+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-27T21:06:18.101+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-27T21:06:18.101+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-27T21:06:18.101+0200 DEBUG JDBC version : 4.2
2023-01-27T21:06:18.171+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-27T21:06:18.183+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-27T21:06:18.184+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-27T21:06:18.215+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-27T21:06:18.216+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-27T21:06:18.216+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-27T21:06:18.216+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-27T21:06:18.216+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-27T21:06:18.216+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-27T21:06:18.217+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-27T21:06:18.217+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-27T21:06:18.217+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-27T21:06:18.219+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-27T21:06:18.219+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-27T21:06:18.220+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-27T21:06:18.224+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T21:06:18.224+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-27T21:06:18.228+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-27T21:06:18.229+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-27T21:06:18.240+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T21:06:18.240+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T21:06:18.240+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-27T21:06:18.240+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T21:06:18.240+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T21:06:18.240+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-27T21:06:18.242+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-27T21:06:18.295+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-27T21:06:18.342+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-27T21:06:18.358+0200 DEBUG Import with entity name Users
2023-01-27T21:06:18.374+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-27T21:06:18.387+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-27T21:06:18.414+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-27T21:06:18.419+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T21:06:18.419+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T21:06:18.421+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-27T21:06:18.427+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-27T21:06:18.437+0200 DEBUG building BasicValue for id
2023-01-27T21:06:18.443+0200 DEBUG Skipping column re-registration: users.id
2023-01-27T21:06:18.444+0200 DEBUG Building property id
2023-01-27T21:06:18.450+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-27T21:06:18.453+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-27T21:06:18.453+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-27T21:06:18.453+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-27T21:06:18.454+0200 DEBUG building BasicValue for password
2023-01-27T21:06:18.454+0200 DEBUG Skipping column re-registration: users.password
2023-01-27T21:06:18.454+0200 DEBUG Building property password
2023-01-27T21:06:18.455+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-27T21:06:18.455+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-27T21:06:18.455+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-27T21:06:18.455+0200 DEBUG building BasicValue for userName
2023-01-27T21:06:18.455+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-27T21:06:18.455+0200 DEBUG Building property userName
2023-01-27T21:06:18.466+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-27T21:06:18.467+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-27T21:06:18.469+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-27T21:06:18.474+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-27T21:06:18.562+0200 DEBUG Building session factory
2023-01-27T21:06:18.653+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T21:06:18.660+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-27T21:06:18.660+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-27T21:06:18.670+0200 DEBUG Instantiated session factory
2023-01-27T21:06:18.690+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-27T21:06:18.854+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-27T21:06:18.854+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-27T21:06:18.856+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-27T21:06:18.857+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-27T21:06:18.859+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-27T21:06:18.861+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-27T21:06:18.861+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-27T21:06:18.862+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-27T21:06:18.862+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-27T21:06:18.862+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-27T21:06:18.862+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-27T21:06:18.862+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-27T21:06:18.862+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-27T21:06:18.862+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-27T21:06:18.862+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-27T21:06:18.862+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-27T21:06:18.863+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-27T21:06:18.864+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-27T21:06:18.864+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-27T21:06:18.864+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-27T21:06:18.864+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-27T21:06:18.864+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-27T21:06:18.864+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-27T21:06:18.864+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-27T21:06:18.868+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-27T21:06:18.868+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-27T21:06:18.869+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-27T21:06:18.869+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-27T21:06:18.869+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-27T21:06:18.870+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-27T21:06:18.870+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-27T21:06:18.870+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-27T21:06:18.870+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-27T21:06:18.870+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-27T21:06:18.871+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-27T21:06:18.873+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-27T21:06:18.873+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-27T21:06:18.873+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-27T21:06:18.873+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-27T21:06:18.873+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-27T21:06:18.873+0200 DEBUG Registering alternate key : length -> character_length
2023-01-27T21:06:18.875+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-27T21:06:18.876+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-27T21:06:18.877+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-27T21:06:18.878+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-27T21:06:18.878+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-27T21:06:18.879+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-27T21:06:18.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-27T21:06:18.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-27T21:06:18.880+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-27T21:06:18.881+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-27T21:06:18.881+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-27T21:06:18.882+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-27T21:06:18.882+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-27T21:06:18.884+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-27T21:06:18.885+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-27T21:06:18.886+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-27T21:06:18.887+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-27T21:06:18.887+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-27T21:06:18.887+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-27T21:06:18.887+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-27T21:06:18.887+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-27T21:06:18.887+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-27T21:06:18.888+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-27T21:06:18.888+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-27T21:06:18.888+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-27T21:06:18.888+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-27T21:06:18.888+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-27T21:06:18.888+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-27T21:06:18.888+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-27T21:06:18.888+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-27T21:06:18.888+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-27T21:06:18.888+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-27T21:06:18.888+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-27T21:06:18.889+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-27T21:06:18.889+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-27T21:06:18.889+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-27T21:06:18.890+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-27T21:06:18.890+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-27T21:06:18.890+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-27T21:06:18.890+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-27T21:06:18.890+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-27T21:06:18.890+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-27T21:06:18.890+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-27T21:06:18.892+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-27T21:06:18.892+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-27T21:06:18.892+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-27T21:06:18.893+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-27T21:06:18.893+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-27T21:06:18.894+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-27T21:06:18.894+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-27T21:06:18.894+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-27T21:06:18.894+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-27T21:06:18.894+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-27T21:06:18.895+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-27T21:06:18.895+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-27T21:06:18.895+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-27T21:06:18.895+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-27T21:06:18.895+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-27T21:06:18.895+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-27T21:06:18.895+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-27T21:06:18.895+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-27T21:06:18.895+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-27T21:06:18.896+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-27T21:06:18.896+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-27T21:06:18.896+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-27T21:06:18.896+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-27T21:06:18.896+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-27T21:06:18.896+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-27T21:06:18.896+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-27T21:06:18.896+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-27T21:06:18.896+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-27T21:06:18.897+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-27T21:06:18.897+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-27T21:06:18.897+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-27T21:06:18.897+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-27T21:06:18.897+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-27T21:06:18.897+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-27T21:06:18.897+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-27T21:06:18.897+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-27T21:06:18.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-27T21:06:18.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-27T21:06:18.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-27T21:06:18.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-27T21:06:18.898+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-27T21:06:18.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-27T21:06:18.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-27T21:06:18.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-27T21:06:18.899+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-27T21:06:18.899+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-27T21:06:18.899+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-27T21:06:18.899+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-27T21:06:18.899+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-27T21:06:18.899+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-27T21:06:18.899+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-27T21:06:18.899+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-27T21:06:18.899+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-27T21:06:18.899+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-27T21:06:18.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-27T21:06:18.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-27T21:06:18.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-27T21:06:18.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-27T21:06:18.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-27T21:06:18.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-27T21:06:18.901+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-27T21:06:18.901+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-27T21:06:18.901+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-27T21:06:18.901+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-27T21:06:18.901+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-27T21:06:18.901+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-27T21:06:18.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-27T21:06:18.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-27T21:06:18.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-27T21:06:18.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-27T21:06:18.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-27T21:06:18.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-27T21:06:18.902+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-27T21:06:18.902+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-27T21:06:18.902+0200 DEBUG Registering alternate key : char -> chr
2023-01-27T21:06:18.903+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-27T21:06:18.903+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-27T21:06:18.905+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-27T21:06:18.906+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-27T21:06:18.906+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-27T21:06:18.906+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-27T21:06:18.906+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-27T21:06:18.908+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-27T21:06:18.909+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-27T21:06:18.909+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-27T21:06:18.909+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-27T21:06:18.910+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-27T21:06:18.920+0200 DEBUG abs(NUMERIC arg)
2023-01-27T21:06:18.920+0200 DEBUG Double acos(NUMERIC arg)
2023-01-27T21:06:18.920+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-27T21:06:18.921+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-27T21:06:18.921+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-27T21:06:18.921+0200 DEBUG Integer ascii(STRING arg)
2023-01-27T21:06:18.921+0200 DEBUG Double asin(NUMERIC arg)
2023-01-27T21:06:18.921+0200 DEBUG Double atan(NUMERIC arg)
2023-01-27T21:06:18.925+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-27T21:06:18.925+0200 DEBUG Double avg(NUMERIC arg)
2023-01-27T21:06:18.926+0200 DEBUG bit_and(arg)
2023-01-27T21:06:18.926+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-27T21:06:18.926+0200 DEBUG bit_or(arg)
2023-01-27T21:06:18.926+0200 DEBUG bitand(arg0, arg1)
2023-01-27T21:06:18.926+0200 DEBUG bitnot(arg)
2023-01-27T21:06:18.926+0200 DEBUG bitor(arg0, arg1)
2023-01-27T21:06:18.926+0200 DEBUG bitxor(arg0, arg1)
2023-01-27T21:06:18.926+0200 DEBUG cast(arg as Type)
2023-01-27T21:06:18.926+0200 DEBUG ceiling(NUMERIC arg)
2023-01-27T21:06:18.926+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-27T21:06:18.926+0200 DEBUG Character chr(INTEGER arg)
2023-01-27T21:06:18.926+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-27T21:06:18.926+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-27T21:06:18.927+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-27T21:06:18.927+0200 DEBUG Double cos(NUMERIC arg)
2023-01-27T21:06:18.927+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-27T21:06:18.927+0200 DEBUG Double cot(NUMERIC arg)
2023-01-27T21:06:18.927+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-27T21:06:18.927+0200 DEBUG Integer crc32(arg)
2023-01-27T21:06:18.927+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-27T21:06:18.927+0200 DEBUG Date curdate()
2023-01-27T21:06:18.927+0200 DEBUG Date current_date
2023-01-27T21:06:18.927+0200 DEBUG Time current_time
2023-01-27T21:06:18.927+0200 DEBUG Timestamp current_timestamp
2023-01-27T21:06:18.928+0200 DEBUG Time curtime()
2023-01-27T21:06:18.928+0200 DEBUG Date date(arg)
2023-01-27T21:06:18.928+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-27T21:06:18.928+0200 DEBUG Integer day(DATE arg)
2023-01-27T21:06:18.928+0200 DEBUG String dayname(DATE arg)
2023-01-27T21:06:18.928+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-27T21:06:18.928+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-27T21:06:18.928+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-27T21:06:18.928+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-27T21:06:18.928+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-27T21:06:18.929+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-27T21:06:18.929+0200 DEBUG Double exp(NUMERIC arg)
2023-01-27T21:06:18.929+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-27T21:06:18.929+0200 DEBUG first_valueANY value
2023-01-27T21:06:18.929+0200 DEBUG floor(NUMERIC arg)
2023-01-27T21:06:18.929+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-27T21:06:18.929+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T21:06:18.929+0200 DEBUG Integer hour(TIME arg)
2023-01-27T21:06:18.929+0200 DEBUG ifnull(arg0, arg1)
2023-01-27T21:06:18.929+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-27T21:06:18.929+0200 DEBUG Instant instant
2023-01-27T21:06:18.929+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-27T21:06:18.929+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-27T21:06:18.930+0200 DEBUG Date last_day(DATE arg)
2023-01-27T21:06:18.930+0200 DEBUG last_valueANY value
2023-01-27T21:06:18.930+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-27T21:06:18.930+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-27T21:06:18.930+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-27T21:06:18.930+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-27T21:06:18.930+0200 DEBUG Double ln(NUMERIC arg)
2023-01-27T21:06:18.932+0200 DEBUG LocalDate local_date
2023-01-27T21:06:18.932+0200 DEBUG LocalDateTime local_datetime
2023-01-27T21:06:18.932+0200 DEBUG LocalTime local_time
2023-01-27T21:06:18.932+0200 DEBUG Timestamp localtime
2023-01-27T21:06:18.932+0200 DEBUG Timestamp localtimestamp
2023-01-27T21:06:18.932+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-27T21:06:18.933+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-27T21:06:18.933+0200 DEBUG Double log10(NUMERIC arg)
2023-01-27T21:06:18.933+0200 DEBUG Double log2(NUMERIC arg)
2023-01-27T21:06:18.933+0200 DEBUG String lower(STRING string)
2023-01-27T21:06:18.933+0200 DEBUG String lpad(string, length[, padding])
2023-01-27T21:06:18.933+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-27T21:06:18.933+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-27T21:06:18.934+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-27T21:06:18.934+0200 DEBUG max(COMPARABLE arg)
2023-01-27T21:06:18.934+0200 DEBUG String md5(arg)
2023-01-27T21:06:18.934+0200 DEBUG Integer microsecond(TIME arg)
2023-01-27T21:06:18.934+0200 DEBUG min(COMPARABLE arg)
2023-01-27T21:06:18.934+0200 DEBUG Integer minute(TIME arg)
2023-01-27T21:06:18.934+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-27T21:06:18.934+0200 DEBUG Integer month(DATE arg)
2023-01-27T21:06:18.934+0200 DEBUG String monthname(DATE arg)
2023-01-27T21:06:18.934+0200 DEBUG Timestamp now()
2023-01-27T21:06:18.934+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-27T21:06:18.934+0200 DEBUG nullif(arg0, arg1)
2023-01-27T21:06:18.935+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-27T21:06:18.935+0200 DEBUG OffsetDateTime offset_datetime
2023-01-27T21:06:18.935+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-27T21:06:18.935+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-27T21:06:18.935+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-27T21:06:18.935+0200 DEBUG Double pi
2023-01-27T21:06:18.935+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-27T21:06:18.935+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-27T21:06:18.935+0200 DEBUG Integer quarter(DATE arg)
2023-01-27T21:06:18.935+0200 DEBUG Double radians(NUMERIC arg)
2023-01-27T21:06:18.935+0200 DEBUG Double rand([INTEGER seed])
2023-01-27T21:06:18.935+0200 DEBUG Long rank([arg0[, ...]])
2023-01-27T21:06:18.935+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-27T21:06:18.935+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-27T21:06:18.936+0200 DEBUG String reverse(STRING arg)
2023-01-27T21:06:18.936+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-27T21:06:18.936+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-27T21:06:18.936+0200 DEBUG Long row_number()
2023-01-27T21:06:18.936+0200 DEBUG String rpad(string, length[, padding])
2023-01-27T21:06:18.936+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-27T21:06:18.936+0200 DEBUG Integer second(TIME arg)
2023-01-27T21:06:18.936+0200 DEBUG String sha(arg)
2023-01-27T21:06:18.936+0200 DEBUG String sha1(arg)
2023-01-27T21:06:18.936+0200 DEBUG String sha2(arg0, arg1)
2023-01-27T21:06:18.936+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-27T21:06:18.937+0200 DEBUG Double sin(NUMERIC arg)
2023-01-27T21:06:18.937+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-27T21:06:18.937+0200 DEBUG String soundex(arg)
2023-01-27T21:06:18.937+0200 DEBUG String space(INTEGER arg)
2023-01-27T21:06:18.937+0200 DEBUG Object sql
2023-01-27T21:06:18.937+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-27T21:06:18.938+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-27T21:06:18.938+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-27T21:06:18.938+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-27T21:06:18.938+0200 DEBUG String str(arg)
2023-01-27T21:06:18.938+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-27T21:06:18.938+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-27T21:06:18.938+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-27T21:06:18.938+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-27T21:06:18.938+0200 DEBUG sum(arg)
2023-01-27T21:06:18.938+0200 DEBUG Timestamp sysdate()
2023-01-27T21:06:18.939+0200 DEBUG Double tan(NUMERIC arg)
2023-01-27T21:06:18.939+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-27T21:06:18.939+0200 DEBUG String time(arg)
2023-01-27T21:06:18.939+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-27T21:06:18.939+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T21:06:18.939+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-27T21:06:18.939+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-27T21:06:18.939+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-27T21:06:18.939+0200 DEBUG String upper(STRING string)
2023-01-27T21:06:18.939+0200 DEBUG Date utc_date
2023-01-27T21:06:18.940+0200 DEBUG Time utc_time
2023-01-27T21:06:18.940+0200 DEBUG Timestamp utc_timestamp
2023-01-27T21:06:18.940+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-27T21:06:18.940+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-27T21:06:18.940+0200 DEBUG Double variance(NUMERIC arg)
2023-01-27T21:06:18.940+0200 DEBUG Integer week(DATE arg)
2023-01-27T21:06:18.940+0200 DEBUG Integer year(DATE arg)
2023-01-27T21:06:18.941+0200 DEBUG Character char(INTEGER arg)
2023-01-27T21:06:18.941+0200 DEBUG Date current date
2023-01-27T21:06:18.941+0200 DEBUG Time current time
2023-01-27T21:06:18.941+0200 DEBUG Timestamp current timestamp
2023-01-27T21:06:18.941+0200 DEBUG Instant current_instant
2023-01-27T21:06:18.941+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-27T21:06:18.941+0200 DEBUG Integer day(DATE arg)
2023-01-27T21:06:18.941+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-27T21:06:18.941+0200 DEBUG LocalDate local date
2023-01-27T21:06:18.942+0200 DEBUG LocalDateTime local datetime
2023-01-27T21:06:18.942+0200 DEBUG LocalTime local time
2023-01-27T21:06:18.942+0200 DEBUG OffsetDateTime offset datetime
2023-01-27T21:06:18.942+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-27T21:06:18.944+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-27T21:06:19.139+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-27T21:06:19.140+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-27T21:06:19.476+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:18)
2023-01-27T21:06:19.542+0200 DEBUG Starting post-init callbacks
2023-01-27T21:06:19.542+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-27T21:06:19.542+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-27T21:06:19.639+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-27T21:06:19.640+0200 DEBUG  Version select: select id from users where id =?
2023-01-27T21:06:19.640+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-27T21:06:19.640+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-27T21:06:19.641+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-27T21:06:19.660+0200 DEBUG Created new SQL alias : u1_0
2023-01-27T21:06:19.664+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users]
2023-01-27T21:06:19.693+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-27T21:06:19.714+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-27T21:06:19.807+0200 DEBUG Checking 0 named HQL queries
2023-01-27T21:06:19.808+0200 DEBUG Checking 0 named SQL queries
2023-01-27T21:06:19.869+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-27T21:06:19.939+0200 DEBUG No alter strings for table : users
2023-01-27T21:06:19.940+0200 DEBUG No alter strings for table : users_SEQ
2023-01-27T21:06:20.007+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-27T21:06:20.007+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-27T21:06:20.023+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-27T21:06:20.025+0200 DEBUG Registering SessionFactory: 79444dc5-73e5-4743-b397-c9faa825a624 (<unnamed>)
2023-01-27T21:06:20.025+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-27T21:06:20.121+0200 DEBUG Statistics initialized [enabled=false]
2023-01-27T21:06:20.132+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-27T21:06:20.134+0200 DEBUG begin
2023-01-27T21:06:20.340+0200 DEBUG 
    select
        next_val as id_val 
    from
        users_SEQ for update
2023-01-27T21:06:20.343+0200 DEBUG 
    update
        users_SEQ 
    set
        next_val= ? 
    where
        next_val=?
2023-01-27T21:06:20.552+0200 DEBUG Generated identifier: 452, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2023-01-27T21:06:20.569+0200 DEBUG committing
2023-01-27T21:06:20.570+0200 DEBUG Processing flush-time cascades
2023-01-27T21:06:20.573+0200 DEBUG Dirty checking collections
2023-01-27T21:06:20.587+0200 DEBUG Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2023-01-27T21:06:20.587+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-27T21:06:20.588+0200 DEBUG Listing entities:
2023-01-27T21:06:20.594+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i, id=452, userName=null}
2023-01-27T21:06:20.644+0200 DEBUG 
    insert 
    into
        users
        (password,user_name,id) 
    values
        (?,?,?)
2023-01-27T21:06:20.688+0200 DEBUG Unable to release JDBC result set [Cannot invoke "java.sql.ResultSet.close()" because "resultSet" is null]
2023-01-27T21:06:21.247+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T21:06:21.249+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-27T21:06:21.255+0200 DEBUG HHH000031: Closing
2023-01-27T21:06:21.255+0200 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5e5ddfbc] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-27T21:06:21.257+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-27T21:06:21.257+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-27T21:06:21.266+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-28T11:43:28.726+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-28T11:43:28.763+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-28T11:43:28.773+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-28T11:43:28.820+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-28T11:43:28.823+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-28T11:43:28.826+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-28T11:43:29.346+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-28T11:43:29.362+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-28T11:43:29.986+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-28T11:43:30.007+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-28T11:43:30.007+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-28T11:43:30.009+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T11:43:30.009+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T11:43:30.010+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-28T11:43:30.011+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-28T11:43:30.012+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-28T11:43:30.015+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T11:43:30.016+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-28T11:43:30.017+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-28T11:43:30.018+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T11:43:30.021+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-28T11:43:30.031+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-28T11:43:30.035+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-28T11:43:30.489+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:43:30.490+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:43:30.490+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:43:30.490+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T11:43:30.490+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T11:43:30.491+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T11:43:30.491+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T11:43:30.491+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T11:43:30.491+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T11:43:30.491+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:43:30.492+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:43:30.492+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:43:30.492+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:43:30.492+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:43:30.492+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:43:30.493+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:43:30.493+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:43:30.493+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:43:30.495+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:43:30.495+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-28T11:43:30.495+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T11:43:30.495+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T11:43:30.496+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-28T11:43:30.496+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-28T11:43:30.496+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:43:30.496+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:43:30.496+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:43:30.496+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:43:30.497+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:43:30.497+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:43:30.497+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:43:30.497+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:43:30.497+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:43:30.498+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:43:30.498+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:43:30.498+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:43:30.498+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:43:30.498+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:43:30.498+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:43:30.499+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T11:43:30.499+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T11:43:30.499+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T11:43:30.499+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T11:43:30.499+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:43:30.500+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:43:30.500+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:43:30.500+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-28T11:43:30.500+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T11:43:30.500+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T11:43:30.501+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-28T11:43:30.501+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:43:30.501+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:43:30.501+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:43:30.501+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:43:30.501+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:43:30.502+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:43:30.502+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-28T11:43:30.502+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-28T11:43:30.502+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T11:43:30.502+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T11:43:30.502+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T11:43:30.503+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T11:43:30.503+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-28T11:43:30.503+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-28T11:43:30.503+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-28T11:43:30.503+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-28T11:43:30.504+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-28T11:43:30.504+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-28T11:43:30.504+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T11:43:30.504+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T11:43:30.504+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T11:43:30.504+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T11:43:30.505+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T11:43:30.505+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T11:43:30.505+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T11:43:30.505+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T11:43:30.505+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T11:43:30.505+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T11:43:30.506+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-28T11:43:30.506+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-28T11:43:30.506+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T11:43:30.506+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T11:43:30.506+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T11:43:30.506+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T11:43:30.506+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-28T11:43:30.507+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-28T11:43:30.507+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T11:43:30.507+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T11:43:30.507+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T11:43:30.507+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T11:43:30.507+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:43:30.508+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:43:30.508+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:43:30.508+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:43:30.508+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:43:30.508+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:43:30.508+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-28T11:43:30.508+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-28T11:43:30.509+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T11:43:30.509+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T11:43:30.509+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:43:30.509+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:43:30.509+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:43:30.509+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-28T11:43:30.510+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-28T11:43:30.510+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T11:43:30.510+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T11:43:30.510+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:43:30.510+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:43:30.510+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:43:30.511+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T11:43:30.511+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T11:43:30.511+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T11:43:30.511+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T11:43:30.511+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T11:43:30.511+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T11:43:30.512+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T11:43:30.512+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T11:43:30.512+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T11:43:30.512+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T11:43:30.512+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-28T11:43:30.522+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T11:43:30.522+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T11:43:30.524+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-28T11:43:30.524+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-28T11:43:30.525+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-28T11:43:30.525+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-28T11:43:30.525+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-28T11:43:30.525+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-28T11:43:30.525+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-28T11:43:30.526+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-28T11:43:30.526+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-28T11:43:30.611+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-28T11:43:30.624+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-28T11:43:30.624+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-28T11:43:30.624+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-28T11:43:30.625+0200 INFO HHH10001003: Autocommit mode: false
2023-01-28T11:43:30.628+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-28T11:43:30.628+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-28T11:43:31.425+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-28T11:43:31.426+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-28T11:43:31.426+0200 DEBUG JDBC version : 4.2
2023-01-28T11:43:31.535+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-28T11:43:31.541+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-28T11:43:31.541+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-28T11:43:31.573+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-28T11:43:31.573+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-28T11:43:31.574+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-28T11:43:31.574+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-28T11:43:31.575+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-28T11:43:31.575+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-28T11:43:31.575+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-28T11:43:31.575+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-28T11:43:31.575+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-28T11:43:31.577+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-28T11:43:31.578+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-28T11:43:31.578+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-28T11:43:31.581+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T11:43:31.581+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T11:43:31.585+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-28T11:43:31.585+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-28T11:43:31.598+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:43:31.599+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:43:31.599+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:43:31.599+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:43:31.599+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:43:31.600+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:43:31.602+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-28T11:43:31.666+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-28T11:43:31.722+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-28T11:43:31.736+0200 DEBUG Import with entity name Users
2023-01-28T11:43:31.747+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-28T11:43:31.758+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-28T11:43:31.771+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-28T11:43:31.776+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T11:43:31.776+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T11:43:31.778+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-28T11:43:31.782+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-28T11:43:31.801+0200 DEBUG building BasicValue for id
2023-01-28T11:43:31.805+0200 DEBUG Skipping column re-registration: users.id
2023-01-28T11:43:31.806+0200 DEBUG Building property id
2023-01-28T11:43:31.809+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-28T11:43:31.811+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-28T11:43:31.811+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-28T11:43:31.811+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-28T11:43:31.811+0200 DEBUG building BasicValue for password
2023-01-28T11:43:31.811+0200 DEBUG Skipping column re-registration: users.password
2023-01-28T11:43:31.811+0200 DEBUG Building property password
2023-01-28T11:43:31.812+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-28T11:43:31.812+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-28T11:43:31.812+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-28T11:43:31.812+0200 DEBUG building BasicValue for userName
2023-01-28T11:43:31.812+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-28T11:43:31.812+0200 DEBUG Building property userName
2023-01-28T11:43:31.821+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-28T11:43:31.821+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-28T11:43:31.823+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-28T11:43:31.827+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-28T11:43:31.924+0200 DEBUG Building session factory
2023-01-28T11:43:32.029+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T11:43:32.036+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-28T11:43:32.036+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-28T11:43:32.042+0200 DEBUG Instantiated session factory
2023-01-28T11:43:32.061+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-28T11:43:32.201+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-28T11:43:32.201+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-28T11:43:32.204+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-28T11:43:32.204+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-28T11:43:32.206+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-28T11:43:32.207+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-28T11:43:32.207+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-28T11:43:32.208+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-28T11:43:32.208+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-28T11:43:32.208+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-28T11:43:32.209+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-28T11:43:32.209+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-28T11:43:32.209+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-28T11:43:32.209+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-28T11:43:32.209+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-28T11:43:32.209+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-28T11:43:32.210+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-28T11:43:32.210+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-28T11:43:32.210+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-28T11:43:32.210+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-28T11:43:32.210+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-28T11:43:32.210+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-28T11:43:32.210+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-28T11:43:32.211+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-28T11:43:32.215+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-28T11:43:32.216+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-28T11:43:32.216+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-28T11:43:32.217+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-28T11:43:32.217+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-28T11:43:32.218+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-28T11:43:32.218+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-28T11:43:32.218+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-28T11:43:32.218+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-28T11:43:32.219+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-28T11:43:32.224+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-28T11:43:32.224+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-28T11:43:32.224+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-28T11:43:32.225+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-28T11:43:32.225+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-28T11:43:32.225+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-28T11:43:32.225+0200 DEBUG Registering alternate key : length -> character_length
2023-01-28T11:43:32.226+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-28T11:43:32.227+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-28T11:43:32.228+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-28T11:43:32.229+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-28T11:43:32.229+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-28T11:43:32.231+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-28T11:43:32.231+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-28T11:43:32.231+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-28T11:43:32.232+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-28T11:43:32.234+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-28T11:43:32.234+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-28T11:43:32.235+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-28T11:43:32.237+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-28T11:43:32.239+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-28T11:43:32.240+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-28T11:43:32.241+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-28T11:43:32.241+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-28T11:43:32.241+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-28T11:43:32.242+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-28T11:43:32.242+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-28T11:43:32.242+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-28T11:43:32.243+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-28T11:43:32.243+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-28T11:43:32.243+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-28T11:43:32.243+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-28T11:43:32.243+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-28T11:43:32.243+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-28T11:43:32.243+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-28T11:43:32.243+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-28T11:43:32.243+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-28T11:43:32.243+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-28T11:43:32.243+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-28T11:43:32.244+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-28T11:43:32.244+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-28T11:43:32.244+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-28T11:43:32.244+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-28T11:43:32.245+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-28T11:43:32.245+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-28T11:43:32.245+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-28T11:43:32.245+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-28T11:43:32.245+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-28T11:43:32.245+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-28T11:43:32.245+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-28T11:43:32.246+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-28T11:43:32.247+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-28T11:43:32.247+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-28T11:43:32.248+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-28T11:43:32.248+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-28T11:43:32.250+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-28T11:43:32.251+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-28T11:43:32.251+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-28T11:43:32.251+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-28T11:43:32.251+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-28T11:43:32.251+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-28T11:43:32.252+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-28T11:43:32.252+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-28T11:43:32.252+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-28T11:43:32.254+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-28T11:43:32.254+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-28T11:43:32.254+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-28T11:43:32.254+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-28T11:43:32.254+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-28T11:43:32.254+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-28T11:43:32.254+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-28T11:43:32.255+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-28T11:43:32.255+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-28T11:43:32.255+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-28T11:43:32.255+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-28T11:43:32.255+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-28T11:43:32.255+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-28T11:43:32.255+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-28T11:43:32.255+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-28T11:43:32.255+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-28T11:43:32.255+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-28T11:43:32.256+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-28T11:43:32.256+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-28T11:43:32.256+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-28T11:43:32.256+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-28T11:43:32.256+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-28T11:43:32.256+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-28T11:43:32.256+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-28T11:43:32.256+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-28T11:43:32.256+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-28T11:43:32.256+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-28T11:43:32.257+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-28T11:43:32.257+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-28T11:43:32.257+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-28T11:43:32.257+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-28T11:43:32.257+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-28T11:43:32.257+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-28T11:43:32.257+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-28T11:43:32.257+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-28T11:43:32.258+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-28T11:43:32.258+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-28T11:43:32.258+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-28T11:43:32.258+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-28T11:43:32.258+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-28T11:43:32.258+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-28T11:43:32.258+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-28T11:43:32.258+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-28T11:43:32.258+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-28T11:43:32.258+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-28T11:43:32.259+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-28T11:43:32.259+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-28T11:43:32.259+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-28T11:43:32.259+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-28T11:43:32.259+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-28T11:43:32.259+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-28T11:43:32.260+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-28T11:43:32.260+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-28T11:43:32.260+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-28T11:43:32.260+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-28T11:43:32.260+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-28T11:43:32.260+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-28T11:43:32.260+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-28T11:43:32.261+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-28T11:43:32.262+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-28T11:43:32.262+0200 DEBUG Registering alternate key : char -> chr
2023-01-28T11:43:32.262+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-28T11:43:32.263+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-28T11:43:32.264+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-28T11:43:32.264+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-28T11:43:32.264+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-28T11:43:32.264+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-28T11:43:32.265+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-28T11:43:32.269+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-28T11:43:32.269+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-28T11:43:32.269+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-28T11:43:32.270+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-28T11:43:32.271+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-28T11:43:32.279+0200 DEBUG abs(NUMERIC arg)
2023-01-28T11:43:32.279+0200 DEBUG Double acos(NUMERIC arg)
2023-01-28T11:43:32.279+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-28T11:43:32.279+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-28T11:43:32.279+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-28T11:43:32.280+0200 DEBUG Integer ascii(STRING arg)
2023-01-28T11:43:32.280+0200 DEBUG Double asin(NUMERIC arg)
2023-01-28T11:43:32.280+0200 DEBUG Double atan(NUMERIC arg)
2023-01-28T11:43:32.284+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-28T11:43:32.284+0200 DEBUG Double avg(NUMERIC arg)
2023-01-28T11:43:32.284+0200 DEBUG bit_and(arg)
2023-01-28T11:43:32.284+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-28T11:43:32.284+0200 DEBUG bit_or(arg)
2023-01-28T11:43:32.284+0200 DEBUG bitand(arg0, arg1)
2023-01-28T11:43:32.284+0200 DEBUG bitnot(arg)
2023-01-28T11:43:32.284+0200 DEBUG bitor(arg0, arg1)
2023-01-28T11:43:32.284+0200 DEBUG bitxor(arg0, arg1)
2023-01-28T11:43:32.284+0200 DEBUG cast(arg as Type)
2023-01-28T11:43:32.284+0200 DEBUG ceiling(NUMERIC arg)
2023-01-28T11:43:32.285+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-28T11:43:32.285+0200 DEBUG Character chr(INTEGER arg)
2023-01-28T11:43:32.285+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-28T11:43:32.285+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-28T11:43:32.285+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-28T11:43:32.285+0200 DEBUG Double cos(NUMERIC arg)
2023-01-28T11:43:32.285+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-28T11:43:32.285+0200 DEBUG Double cot(NUMERIC arg)
2023-01-28T11:43:32.285+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-28T11:43:32.286+0200 DEBUG Integer crc32(arg)
2023-01-28T11:43:32.286+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-28T11:43:32.287+0200 DEBUG Date curdate()
2023-01-28T11:43:32.287+0200 DEBUG Date current_date
2023-01-28T11:43:32.287+0200 DEBUG Time current_time
2023-01-28T11:43:32.288+0200 DEBUG Timestamp current_timestamp
2023-01-28T11:43:32.288+0200 DEBUG Time curtime()
2023-01-28T11:43:32.288+0200 DEBUG Date date(arg)
2023-01-28T11:43:32.288+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-28T11:43:32.288+0200 DEBUG Integer day(DATE arg)
2023-01-28T11:43:32.289+0200 DEBUG String dayname(DATE arg)
2023-01-28T11:43:32.289+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-28T11:43:32.289+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-28T11:43:32.289+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-28T11:43:32.289+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-28T11:43:32.289+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-28T11:43:32.289+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-28T11:43:32.290+0200 DEBUG Double exp(NUMERIC arg)
2023-01-28T11:43:32.290+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-28T11:43:32.290+0200 DEBUG first_valueANY value
2023-01-28T11:43:32.290+0200 DEBUG floor(NUMERIC arg)
2023-01-28T11:43:32.290+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-28T11:43:32.290+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T11:43:32.291+0200 DEBUG Integer hour(TIME arg)
2023-01-28T11:43:32.291+0200 DEBUG ifnull(arg0, arg1)
2023-01-28T11:43:32.291+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-28T11:43:32.291+0200 DEBUG Instant instant
2023-01-28T11:43:32.291+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-28T11:43:32.291+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-28T11:43:32.291+0200 DEBUG Date last_day(DATE arg)
2023-01-28T11:43:32.291+0200 DEBUG last_valueANY value
2023-01-28T11:43:32.292+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-28T11:43:32.292+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T11:43:32.292+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-28T11:43:32.292+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-28T11:43:32.292+0200 DEBUG Double ln(NUMERIC arg)
2023-01-28T11:43:32.294+0200 DEBUG LocalDate local_date
2023-01-28T11:43:32.294+0200 DEBUG LocalDateTime local_datetime
2023-01-28T11:43:32.294+0200 DEBUG LocalTime local_time
2023-01-28T11:43:32.294+0200 DEBUG Timestamp localtime
2023-01-28T11:43:32.294+0200 DEBUG Timestamp localtimestamp
2023-01-28T11:43:32.294+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-28T11:43:32.295+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-28T11:43:32.295+0200 DEBUG Double log10(NUMERIC arg)
2023-01-28T11:43:32.295+0200 DEBUG Double log2(NUMERIC arg)
2023-01-28T11:43:32.295+0200 DEBUG String lower(STRING string)
2023-01-28T11:43:32.295+0200 DEBUG String lpad(string, length[, padding])
2023-01-28T11:43:32.295+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-28T11:43:32.295+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-28T11:43:32.295+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-28T11:43:32.295+0200 DEBUG max(COMPARABLE arg)
2023-01-28T11:43:32.295+0200 DEBUG String md5(arg)
2023-01-28T11:43:32.296+0200 DEBUG Integer microsecond(TIME arg)
2023-01-28T11:43:32.296+0200 DEBUG min(COMPARABLE arg)
2023-01-28T11:43:32.296+0200 DEBUG Integer minute(TIME arg)
2023-01-28T11:43:32.296+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-28T11:43:32.296+0200 DEBUG Integer month(DATE arg)
2023-01-28T11:43:32.296+0200 DEBUG String monthname(DATE arg)
2023-01-28T11:43:32.296+0200 DEBUG Timestamp now()
2023-01-28T11:43:32.296+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-28T11:43:32.296+0200 DEBUG nullif(arg0, arg1)
2023-01-28T11:43:32.297+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-28T11:43:32.297+0200 DEBUG OffsetDateTime offset_datetime
2023-01-28T11:43:32.297+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-28T11:43:32.297+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-28T11:43:32.297+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-28T11:43:32.297+0200 DEBUG Double pi
2023-01-28T11:43:32.297+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-28T11:43:32.297+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-28T11:43:32.297+0200 DEBUG Integer quarter(DATE arg)
2023-01-28T11:43:32.297+0200 DEBUG Double radians(NUMERIC arg)
2023-01-28T11:43:32.297+0200 DEBUG Double rand([INTEGER seed])
2023-01-28T11:43:32.297+0200 DEBUG Long rank([arg0[, ...]])
2023-01-28T11:43:32.298+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-28T11:43:32.298+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-28T11:43:32.298+0200 DEBUG String reverse(STRING arg)
2023-01-28T11:43:32.298+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-28T11:43:32.298+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-28T11:43:32.298+0200 DEBUG Long row_number()
2023-01-28T11:43:32.298+0200 DEBUG String rpad(string, length[, padding])
2023-01-28T11:43:32.298+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-28T11:43:32.298+0200 DEBUG Integer second(TIME arg)
2023-01-28T11:43:32.298+0200 DEBUG String sha(arg)
2023-01-28T11:43:32.299+0200 DEBUG String sha1(arg)
2023-01-28T11:43:32.299+0200 DEBUG String sha2(arg0, arg1)
2023-01-28T11:43:32.299+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-28T11:43:32.299+0200 DEBUG Double sin(NUMERIC arg)
2023-01-28T11:43:32.300+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-28T11:43:32.300+0200 DEBUG String soundex(arg)
2023-01-28T11:43:32.300+0200 DEBUG String space(INTEGER arg)
2023-01-28T11:43:32.301+0200 DEBUG Object sql
2023-01-28T11:43:32.301+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-28T11:43:32.301+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-28T11:43:32.301+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-28T11:43:32.301+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-28T11:43:32.301+0200 DEBUG String str(arg)
2023-01-28T11:43:32.301+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-28T11:43:32.301+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-28T11:43:32.301+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-28T11:43:32.302+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-28T11:43:32.303+0200 DEBUG sum(arg)
2023-01-28T11:43:32.303+0200 DEBUG Timestamp sysdate()
2023-01-28T11:43:32.303+0200 DEBUG Double tan(NUMERIC arg)
2023-01-28T11:43:32.303+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-28T11:43:32.303+0200 DEBUG String time(arg)
2023-01-28T11:43:32.303+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-28T11:43:32.304+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T11:43:32.304+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-28T11:43:32.304+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-28T11:43:32.304+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-28T11:43:32.304+0200 DEBUG String upper(STRING string)
2023-01-28T11:43:32.304+0200 DEBUG Date utc_date
2023-01-28T11:43:32.305+0200 DEBUG Time utc_time
2023-01-28T11:43:32.305+0200 DEBUG Timestamp utc_timestamp
2023-01-28T11:43:32.305+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-28T11:43:32.305+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-28T11:43:32.305+0200 DEBUG Double variance(NUMERIC arg)
2023-01-28T11:43:32.305+0200 DEBUG Integer week(DATE arg)
2023-01-28T11:43:32.305+0200 DEBUG Integer year(DATE arg)
2023-01-28T11:43:32.306+0200 DEBUG Character char(INTEGER arg)
2023-01-28T11:43:32.307+0200 DEBUG Date current date
2023-01-28T11:43:32.307+0200 DEBUG Time current time
2023-01-28T11:43:32.307+0200 DEBUG Timestamp current timestamp
2023-01-28T11:43:32.307+0200 DEBUG Instant current_instant
2023-01-28T11:43:32.307+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T11:43:32.307+0200 DEBUG Integer day(DATE arg)
2023-01-28T11:43:32.307+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-28T11:43:32.307+0200 DEBUG LocalDate local date
2023-01-28T11:43:32.307+0200 DEBUG LocalDateTime local datetime
2023-01-28T11:43:32.308+0200 DEBUG LocalTime local time
2023-01-28T11:43:32.308+0200 DEBUG OffsetDateTime offset datetime
2023-01-28T11:43:32.308+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-28T11:43:32.310+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-28T11:43:32.558+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T11:43:32.558+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T11:43:32.843+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:21)
2023-01-28T11:43:32.905+0200 DEBUG Starting post-init callbacks
2023-01-28T11:43:32.905+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-28T11:43:32.905+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-28T11:43:32.981+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-28T11:43:32.981+0200 DEBUG  Version select: select id from users where id =?
2023-01-28T11:43:32.982+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-28T11:43:32.982+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-28T11:43:32.982+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-28T11:43:32.997+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T11:43:32.999+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T11:43:33.017+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-28T11:43:33.020+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T11:43:33.052+0200 DEBUG Checking 0 named HQL queries
2023-01-28T11:43:33.059+0200 DEBUG Checking 0 named SQL queries
2023-01-28T11:43:33.116+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-28T11:43:33.190+0200 DEBUG No alter strings for table : users
2023-01-28T11:43:33.190+0200 DEBUG No alter strings for table : users_SEQ
2023-01-28T11:43:33.210+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T11:43:33.210+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-28T11:43:33.224+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-28T11:43:33.272+0200 DEBUG Registering SessionFactory: 5d18fce1-cbc3-4eea-a87d-ebb508e77d88 (<unnamed>)
2023-01-28T11:43:33.272+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-28T11:43:33.375+0200 DEBUG Statistics initialized [enabled=false]
2023-01-28T11:43:33.380+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-28T11:43:33.380+0200 DEBUG begin
2023-01-28T11:43:33.489+0200 DEBUG committing
2023-01-28T11:43:33.494+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T11:43:33.496+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T11:43:33.497+0200 DEBUG HHH000031: Closing
2023-01-28T11:43:33.498+0200 DEBUG Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6401188a] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-28T11:43:33.499+0200 DEBUG Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2023-01-28T11:43:33.500+0200 INFO HHH10001008: Cleaning up connection pool [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-28T11:43:33.543+0200 DEBUG Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2023-01-28T11:52:22.629+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-28T11:52:22.661+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-28T11:52:22.670+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-28T11:52:22.719+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-28T11:52:22.722+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-28T11:52:22.724+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-28T11:52:23.096+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-28T11:52:23.111+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-28T11:52:23.604+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-28T11:52:23.616+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-28T11:52:23.617+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-28T11:52:23.618+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T11:52:23.619+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T11:52:23.619+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-28T11:52:23.621+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-28T11:52:23.622+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-28T11:52:23.624+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T11:52:23.628+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-28T11:52:23.629+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-28T11:52:23.629+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T11:52:23.630+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-28T11:52:23.641+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-28T11:52:23.643+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-28T11:52:23.913+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:52:23.913+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:52:23.914+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:52:23.914+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T11:52:23.914+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T11:52:23.914+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T11:52:23.914+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T11:52:23.915+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T11:52:23.915+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T11:52:23.915+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:52:23.915+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:52:23.915+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:52:23.916+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:52:23.916+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:52:23.916+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:52:23.916+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:52:23.916+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:52:23.917+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:52:23.917+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:52:23.917+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-28T11:52:23.917+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T11:52:23.917+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T11:52:23.917+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-28T11:52:23.918+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-28T11:52:23.918+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:52:23.918+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:52:23.918+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:52:23.918+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:52:23.919+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:52:23.919+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:52:23.919+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:52:23.919+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:52:23.919+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:52:23.919+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:52:23.920+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:52:23.920+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:52:23.920+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:52:23.920+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:52:23.920+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:52:23.920+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T11:52:23.921+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T11:52:23.921+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T11:52:23.921+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T11:52:23.921+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:52:23.921+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:52:23.922+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:52:23.922+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-28T11:52:23.922+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T11:52:23.922+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T11:52:23.922+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-28T11:52:23.923+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:52:23.923+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:52:23.923+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:52:23.923+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:52:23.923+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:52:23.924+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:52:23.924+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-28T11:52:23.924+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-28T11:52:23.924+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T11:52:23.924+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T11:52:23.924+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T11:52:23.925+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T11:52:23.925+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-28T11:52:23.925+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-28T11:52:23.925+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-28T11:52:23.925+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-28T11:52:23.925+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-28T11:52:23.926+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-28T11:52:23.926+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T11:52:23.927+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T11:52:23.927+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T11:52:23.927+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T11:52:23.927+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T11:52:23.927+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T11:52:23.927+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T11:52:23.928+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T11:52:23.928+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T11:52:23.928+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T11:52:23.928+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-28T11:52:23.928+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-28T11:52:23.928+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T11:52:23.929+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T11:52:23.929+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T11:52:23.929+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T11:52:23.929+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-28T11:52:23.929+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-28T11:52:23.929+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T11:52:23.929+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T11:52:23.930+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T11:52:23.930+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T11:52:23.930+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:52:23.930+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:52:23.930+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:52:23.930+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:52:23.931+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:52:23.931+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:52:23.931+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-28T11:52:23.931+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-28T11:52:23.931+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T11:52:23.931+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T11:52:23.932+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:52:23.932+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:52:23.932+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:52:23.933+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-28T11:52:23.933+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-28T11:52:23.934+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T11:52:23.934+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T11:52:23.934+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:52:23.934+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:52:23.934+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:52:23.935+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T11:52:23.935+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T11:52:23.935+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T11:52:23.935+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T11:52:23.935+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T11:52:23.935+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T11:52:23.936+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T11:52:23.936+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T11:52:23.936+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T11:52:23.936+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T11:52:23.936+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-28T11:52:23.945+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T11:52:23.945+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T11:52:23.947+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-28T11:52:23.948+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-28T11:52:23.948+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-28T11:52:23.948+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-28T11:52:23.948+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-28T11:52:23.949+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-28T11:52:23.949+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-28T11:52:23.949+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-28T11:52:23.949+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-28T11:52:24.009+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-28T11:52:24.020+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-28T11:52:24.020+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-28T11:52:24.020+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-28T11:52:24.021+0200 INFO HHH10001003: Autocommit mode: false
2023-01-28T11:52:24.025+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-28T11:52:24.026+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-28T11:52:24.696+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-28T11:52:24.696+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-28T11:52:24.696+0200 DEBUG JDBC version : 4.2
2023-01-28T11:52:24.780+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-28T11:52:24.788+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-28T11:52:24.788+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-28T11:52:24.819+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-28T11:52:24.819+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-28T11:52:24.819+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-28T11:52:24.820+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-28T11:52:24.820+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-28T11:52:24.820+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-28T11:52:24.821+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-28T11:52:24.821+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-28T11:52:24.821+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-28T11:52:24.823+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-28T11:52:24.823+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-28T11:52:24.824+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-28T11:52:24.828+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T11:52:24.829+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T11:52:24.833+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-28T11:52:24.833+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-28T11:52:24.843+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:52:24.843+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:52:24.843+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:52:24.843+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:52:24.843+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:52:24.843+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:52:24.845+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-28T11:52:24.894+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-28T11:52:24.948+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-28T11:52:24.977+0200 DEBUG Import with entity name Users
2023-01-28T11:52:24.990+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-28T11:52:25.007+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-28T11:52:25.034+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-28T11:52:25.040+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T11:52:25.040+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T11:52:25.043+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-28T11:52:25.050+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-28T11:52:25.065+0200 DEBUG building BasicValue for id
2023-01-28T11:52:25.070+0200 DEBUG Skipping column re-registration: users.id
2023-01-28T11:52:25.071+0200 DEBUG Building property id
2023-01-28T11:52:25.078+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-28T11:52:25.079+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-28T11:52:25.080+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-28T11:52:25.080+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-28T11:52:25.080+0200 DEBUG building BasicValue for password
2023-01-28T11:52:25.080+0200 DEBUG Skipping column re-registration: users.password
2023-01-28T11:52:25.080+0200 DEBUG Building property password
2023-01-28T11:52:25.081+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-28T11:52:25.081+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-28T11:52:25.081+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-28T11:52:25.081+0200 DEBUG building BasicValue for userName
2023-01-28T11:52:25.081+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-28T11:52:25.082+0200 DEBUG Building property userName
2023-01-28T11:52:25.090+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-28T11:52:25.091+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-28T11:52:25.093+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-28T11:52:25.097+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-28T11:52:25.198+0200 DEBUG Building session factory
2023-01-28T11:52:25.300+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T11:52:25.306+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-28T11:52:25.307+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-28T11:52:25.320+0200 DEBUG Instantiated session factory
2023-01-28T11:52:25.342+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-28T11:52:25.493+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-28T11:52:25.494+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-28T11:52:25.496+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-28T11:52:25.497+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-28T11:52:25.499+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-28T11:52:25.500+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-28T11:52:25.501+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-28T11:52:25.501+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-28T11:52:25.501+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-28T11:52:25.502+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-28T11:52:25.502+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-28T11:52:25.502+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-28T11:52:25.502+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-28T11:52:25.503+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-28T11:52:25.503+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-28T11:52:25.503+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-28T11:52:25.504+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-28T11:52:25.504+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-28T11:52:25.504+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-28T11:52:25.504+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-28T11:52:25.505+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-28T11:52:25.505+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-28T11:52:25.505+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-28T11:52:25.505+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-28T11:52:25.507+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-28T11:52:25.508+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-28T11:52:25.508+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-28T11:52:25.508+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-28T11:52:25.508+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-28T11:52:25.509+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-28T11:52:25.509+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-28T11:52:25.509+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-28T11:52:25.510+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-28T11:52:25.511+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-28T11:52:25.511+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-28T11:52:25.512+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-28T11:52:25.514+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-28T11:52:25.514+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-28T11:52:25.514+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-28T11:52:25.514+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-28T11:52:25.514+0200 DEBUG Registering alternate key : length -> character_length
2023-01-28T11:52:25.515+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-28T11:52:25.516+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-28T11:52:25.517+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-28T11:52:25.518+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-28T11:52:25.519+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-28T11:52:25.520+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-28T11:52:25.520+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-28T11:52:25.520+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-28T11:52:25.521+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-28T11:52:25.521+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-28T11:52:25.521+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-28T11:52:25.522+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-28T11:52:25.523+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-28T11:52:25.525+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-28T11:52:25.526+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-28T11:52:25.528+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-28T11:52:25.528+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-28T11:52:25.528+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-28T11:52:25.529+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-28T11:52:25.529+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-28T11:52:25.529+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-28T11:52:25.530+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-28T11:52:25.530+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-28T11:52:25.530+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-28T11:52:25.530+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-28T11:52:25.530+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-28T11:52:25.530+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-28T11:52:25.530+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-28T11:52:25.530+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-28T11:52:25.530+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-28T11:52:25.530+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-28T11:52:25.531+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-28T11:52:25.531+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-28T11:52:25.531+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-28T11:52:25.532+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-28T11:52:25.532+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-28T11:52:25.533+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-28T11:52:25.534+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-28T11:52:25.534+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-28T11:52:25.534+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-28T11:52:25.534+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-28T11:52:25.534+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-28T11:52:25.534+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-28T11:52:25.534+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-28T11:52:25.534+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-28T11:52:25.535+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-28T11:52:25.535+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-28T11:52:25.535+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-28T11:52:25.536+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-28T11:52:25.536+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-28T11:52:25.536+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-28T11:52:25.536+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-28T11:52:25.536+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-28T11:52:25.536+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-28T11:52:25.536+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-28T11:52:25.536+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-28T11:52:25.536+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-28T11:52:25.537+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-28T11:52:25.537+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-28T11:52:25.537+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-28T11:52:25.537+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-28T11:52:25.537+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-28T11:52:25.537+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-28T11:52:25.537+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-28T11:52:25.537+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-28T11:52:25.537+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-28T11:52:25.537+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-28T11:52:25.537+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-28T11:52:25.537+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-28T11:52:25.538+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-28T11:52:25.538+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-28T11:52:25.538+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-28T11:52:25.538+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-28T11:52:25.538+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-28T11:52:25.539+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-28T11:52:25.539+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-28T11:52:25.539+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-28T11:52:25.539+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-28T11:52:25.540+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-28T11:52:25.540+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-28T11:52:25.540+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-28T11:52:25.540+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-28T11:52:25.540+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-28T11:52:25.540+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-28T11:52:25.541+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-28T11:52:25.541+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-28T11:52:25.541+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-28T11:52:25.541+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-28T11:52:25.541+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-28T11:52:25.541+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-28T11:52:25.542+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-28T11:52:25.542+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-28T11:52:25.542+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-28T11:52:25.542+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-28T11:52:25.542+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-28T11:52:25.542+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-28T11:52:25.542+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-28T11:52:25.542+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-28T11:52:25.542+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-28T11:52:25.543+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-28T11:52:25.543+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-28T11:52:25.543+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-28T11:52:25.543+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-28T11:52:25.543+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-28T11:52:25.543+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-28T11:52:25.543+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-28T11:52:25.543+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-28T11:52:25.543+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-28T11:52:25.543+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-28T11:52:25.543+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-28T11:52:25.544+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-28T11:52:25.544+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-28T11:52:25.544+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-28T11:52:25.544+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-28T11:52:25.544+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-28T11:52:25.544+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-28T11:52:25.544+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-28T11:52:25.544+0200 DEBUG Registering alternate key : char -> chr
2023-01-28T11:52:25.544+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-28T11:52:25.545+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-28T11:52:25.547+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-28T11:52:25.548+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-28T11:52:25.548+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-28T11:52:25.548+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-28T11:52:25.548+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-28T11:52:25.550+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-28T11:52:25.550+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-28T11:52:25.550+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-28T11:52:25.551+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-28T11:52:25.552+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-28T11:52:25.560+0200 DEBUG abs(NUMERIC arg)
2023-01-28T11:52:25.560+0200 DEBUG Double acos(NUMERIC arg)
2023-01-28T11:52:25.561+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-28T11:52:25.561+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-28T11:52:25.561+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-28T11:52:25.561+0200 DEBUG Integer ascii(STRING arg)
2023-01-28T11:52:25.561+0200 DEBUG Double asin(NUMERIC arg)
2023-01-28T11:52:25.561+0200 DEBUG Double atan(NUMERIC arg)
2023-01-28T11:52:25.565+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-28T11:52:25.565+0200 DEBUG Double avg(NUMERIC arg)
2023-01-28T11:52:25.565+0200 DEBUG bit_and(arg)
2023-01-28T11:52:25.566+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-28T11:52:25.566+0200 DEBUG bit_or(arg)
2023-01-28T11:52:25.566+0200 DEBUG bitand(arg0, arg1)
2023-01-28T11:52:25.566+0200 DEBUG bitnot(arg)
2023-01-28T11:52:25.566+0200 DEBUG bitor(arg0, arg1)
2023-01-28T11:52:25.566+0200 DEBUG bitxor(arg0, arg1)
2023-01-28T11:52:25.566+0200 DEBUG cast(arg as Type)
2023-01-28T11:52:25.567+0200 DEBUG ceiling(NUMERIC arg)
2023-01-28T11:52:25.567+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-28T11:52:25.567+0200 DEBUG Character chr(INTEGER arg)
2023-01-28T11:52:25.567+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-28T11:52:25.567+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-28T11:52:25.567+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-28T11:52:25.567+0200 DEBUG Double cos(NUMERIC arg)
2023-01-28T11:52:25.567+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-28T11:52:25.567+0200 DEBUG Double cot(NUMERIC arg)
2023-01-28T11:52:25.567+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-28T11:52:25.568+0200 DEBUG Integer crc32(arg)
2023-01-28T11:52:25.568+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-28T11:52:25.568+0200 DEBUG Date curdate()
2023-01-28T11:52:25.568+0200 DEBUG Date current_date
2023-01-28T11:52:25.568+0200 DEBUG Time current_time
2023-01-28T11:52:25.568+0200 DEBUG Timestamp current_timestamp
2023-01-28T11:52:25.568+0200 DEBUG Time curtime()
2023-01-28T11:52:25.568+0200 DEBUG Date date(arg)
2023-01-28T11:52:25.568+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-28T11:52:25.568+0200 DEBUG Integer day(DATE arg)
2023-01-28T11:52:25.569+0200 DEBUG String dayname(DATE arg)
2023-01-28T11:52:25.569+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-28T11:52:25.569+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-28T11:52:25.569+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-28T11:52:25.569+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-28T11:52:25.569+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-28T11:52:25.569+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-28T11:52:25.569+0200 DEBUG Double exp(NUMERIC arg)
2023-01-28T11:52:25.569+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-28T11:52:25.569+0200 DEBUG first_valueANY value
2023-01-28T11:52:25.570+0200 DEBUG floor(NUMERIC arg)
2023-01-28T11:52:25.570+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-28T11:52:25.570+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T11:52:25.570+0200 DEBUG Integer hour(TIME arg)
2023-01-28T11:52:25.570+0200 DEBUG ifnull(arg0, arg1)
2023-01-28T11:52:25.570+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-28T11:52:25.570+0200 DEBUG Instant instant
2023-01-28T11:52:25.570+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-28T11:52:25.570+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-28T11:52:25.570+0200 DEBUG Date last_day(DATE arg)
2023-01-28T11:52:25.570+0200 DEBUG last_valueANY value
2023-01-28T11:52:25.570+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-28T11:52:25.570+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T11:52:25.571+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-28T11:52:25.571+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-28T11:52:25.571+0200 DEBUG Double ln(NUMERIC arg)
2023-01-28T11:52:25.571+0200 DEBUG LocalDate local_date
2023-01-28T11:52:25.571+0200 DEBUG LocalDateTime local_datetime
2023-01-28T11:52:25.571+0200 DEBUG LocalTime local_time
2023-01-28T11:52:25.571+0200 DEBUG Timestamp localtime
2023-01-28T11:52:25.571+0200 DEBUG Timestamp localtimestamp
2023-01-28T11:52:25.571+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-28T11:52:25.572+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-28T11:52:25.572+0200 DEBUG Double log10(NUMERIC arg)
2023-01-28T11:52:25.572+0200 DEBUG Double log2(NUMERIC arg)
2023-01-28T11:52:25.574+0200 DEBUG String lower(STRING string)
2023-01-28T11:52:25.574+0200 DEBUG String lpad(string, length[, padding])
2023-01-28T11:52:25.574+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-28T11:52:25.574+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-28T11:52:25.574+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-28T11:52:25.574+0200 DEBUG max(COMPARABLE arg)
2023-01-28T11:52:25.575+0200 DEBUG String md5(arg)
2023-01-28T11:52:25.575+0200 DEBUG Integer microsecond(TIME arg)
2023-01-28T11:52:25.575+0200 DEBUG min(COMPARABLE arg)
2023-01-28T11:52:25.575+0200 DEBUG Integer minute(TIME arg)
2023-01-28T11:52:25.575+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-28T11:52:25.575+0200 DEBUG Integer month(DATE arg)
2023-01-28T11:52:25.575+0200 DEBUG String monthname(DATE arg)
2023-01-28T11:52:25.575+0200 DEBUG Timestamp now()
2023-01-28T11:52:25.575+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-28T11:52:25.575+0200 DEBUG nullif(arg0, arg1)
2023-01-28T11:52:25.575+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-28T11:52:25.575+0200 DEBUG OffsetDateTime offset_datetime
2023-01-28T11:52:25.575+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-28T11:52:25.575+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-28T11:52:25.575+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-28T11:52:25.575+0200 DEBUG Double pi
2023-01-28T11:52:25.576+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-28T11:52:25.576+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-28T11:52:25.576+0200 DEBUG Integer quarter(DATE arg)
2023-01-28T11:52:25.576+0200 DEBUG Double radians(NUMERIC arg)
2023-01-28T11:52:25.576+0200 DEBUG Double rand([INTEGER seed])
2023-01-28T11:52:25.576+0200 DEBUG Long rank([arg0[, ...]])
2023-01-28T11:52:25.576+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-28T11:52:25.576+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-28T11:52:25.576+0200 DEBUG String reverse(STRING arg)
2023-01-28T11:52:25.576+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-28T11:52:25.576+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-28T11:52:25.576+0200 DEBUG Long row_number()
2023-01-28T11:52:25.576+0200 DEBUG String rpad(string, length[, padding])
2023-01-28T11:52:25.576+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-28T11:52:25.576+0200 DEBUG Integer second(TIME arg)
2023-01-28T11:52:25.577+0200 DEBUG String sha(arg)
2023-01-28T11:52:25.577+0200 DEBUG String sha1(arg)
2023-01-28T11:52:25.577+0200 DEBUG String sha2(arg0, arg1)
2023-01-28T11:52:25.577+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-28T11:52:25.577+0200 DEBUG Double sin(NUMERIC arg)
2023-01-28T11:52:25.577+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-28T11:52:25.577+0200 DEBUG String soundex(arg)
2023-01-28T11:52:25.577+0200 DEBUG String space(INTEGER arg)
2023-01-28T11:52:25.577+0200 DEBUG Object sql
2023-01-28T11:52:25.577+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-28T11:52:25.578+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-28T11:52:25.578+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-28T11:52:25.578+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-28T11:52:25.578+0200 DEBUG String str(arg)
2023-01-28T11:52:25.578+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-28T11:52:25.578+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-28T11:52:25.578+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-28T11:52:25.578+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-28T11:52:25.578+0200 DEBUG sum(arg)
2023-01-28T11:52:25.578+0200 DEBUG Timestamp sysdate()
2023-01-28T11:52:25.578+0200 DEBUG Double tan(NUMERIC arg)
2023-01-28T11:52:25.578+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-28T11:52:25.578+0200 DEBUG String time(arg)
2023-01-28T11:52:25.579+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-28T11:52:25.579+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T11:52:25.579+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-28T11:52:25.579+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-28T11:52:25.579+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-28T11:52:25.579+0200 DEBUG String upper(STRING string)
2023-01-28T11:52:25.579+0200 DEBUG Date utc_date
2023-01-28T11:52:25.579+0200 DEBUG Time utc_time
2023-01-28T11:52:25.580+0200 DEBUG Timestamp utc_timestamp
2023-01-28T11:52:25.580+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-28T11:52:25.580+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-28T11:52:25.580+0200 DEBUG Double variance(NUMERIC arg)
2023-01-28T11:52:25.580+0200 DEBUG Integer week(DATE arg)
2023-01-28T11:52:25.580+0200 DEBUG Integer year(DATE arg)
2023-01-28T11:52:25.581+0200 DEBUG Character char(INTEGER arg)
2023-01-28T11:52:25.581+0200 DEBUG Date current date
2023-01-28T11:52:25.581+0200 DEBUG Time current time
2023-01-28T11:52:25.581+0200 DEBUG Timestamp current timestamp
2023-01-28T11:52:25.582+0200 DEBUG Instant current_instant
2023-01-28T11:52:25.582+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T11:52:25.582+0200 DEBUG Integer day(DATE arg)
2023-01-28T11:52:25.582+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-28T11:52:25.582+0200 DEBUG LocalDate local date
2023-01-28T11:52:25.582+0200 DEBUG LocalDateTime local datetime
2023-01-28T11:52:25.582+0200 DEBUG LocalTime local time
2023-01-28T11:52:25.582+0200 DEBUG OffsetDateTime offset datetime
2023-01-28T11:52:25.582+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-28T11:52:25.585+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-28T11:52:25.839+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T11:52:25.840+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T11:52:26.249+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:22)
2023-01-28T11:52:26.300+0200 DEBUG Starting post-init callbacks
2023-01-28T11:52:26.300+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-28T11:52:26.301+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-28T11:52:26.378+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-28T11:52:26.378+0200 DEBUG  Version select: select id from users where id =?
2023-01-28T11:52:26.378+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-28T11:52:26.378+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-28T11:52:26.379+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-28T11:52:26.390+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T11:52:26.394+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T11:52:26.411+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-28T11:52:26.415+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T11:52:26.453+0200 DEBUG Checking 0 named HQL queries
2023-01-28T11:52:26.453+0200 DEBUG Checking 0 named SQL queries
2023-01-28T11:52:26.536+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-28T11:52:26.600+0200 DEBUG No alter strings for table : users
2023-01-28T11:52:26.601+0200 DEBUG No alter strings for table : users_SEQ
2023-01-28T11:52:26.618+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T11:52:26.619+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-28T11:52:26.630+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-28T11:52:26.633+0200 DEBUG Registering SessionFactory: 68d4daac-0ea7-42e3-a42e-54823a1219f6 (<unnamed>)
2023-01-28T11:52:26.634+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-28T11:52:26.699+0200 DEBUG Statistics initialized [enabled=false]
2023-01-28T11:52:26.711+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-28T11:52:26.718+0200 DEBUG begin
2023-01-28T11:52:26.778+0200 DEBUG HQL : from users
2023-01-28T11:52:27.023+0200 DEBUG Handling root path - users
2023-01-28T11:52:27.026+0200 DEBUG JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:323)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:434)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:751)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:654)
	at org.hibernate.internal.SessionImpl.createQuery(SessionImpl.java:189)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:35)
2023-01-28T11:53:01.337+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-28T11:53:01.367+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-28T11:53:01.377+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-28T11:53:01.423+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-28T11:53:01.425+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-28T11:53:01.428+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-28T11:53:01.826+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-28T11:53:01.844+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-28T11:53:02.313+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-28T11:53:02.320+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-28T11:53:02.321+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-28T11:53:02.323+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T11:53:02.323+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T11:53:02.324+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-28T11:53:02.325+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-28T11:53:02.326+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-28T11:53:02.328+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T11:53:02.329+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-28T11:53:02.330+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-28T11:53:02.330+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T11:53:02.331+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-28T11:53:02.343+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-28T11:53:02.344+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-28T11:53:02.622+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:53:02.622+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:53:02.623+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:53:02.623+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T11:53:02.623+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T11:53:02.623+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T11:53:02.624+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T11:53:02.624+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T11:53:02.624+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T11:53:02.624+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:53:02.624+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:53:02.625+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:53:02.625+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:53:02.625+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:53:02.625+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:53:02.625+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:53:02.626+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:53:02.626+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:53:02.626+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:53:02.626+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-28T11:53:02.627+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T11:53:02.627+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T11:53:02.627+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-28T11:53:02.627+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-28T11:53:02.627+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:53:02.627+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:53:02.628+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:53:02.628+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:53:02.628+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:53:02.628+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:53:02.628+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:53:02.628+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:53:02.629+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:53:02.629+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:53:02.629+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:53:02.629+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:53:02.629+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:53:02.630+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:53:02.630+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:53:02.630+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T11:53:02.630+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T11:53:02.630+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T11:53:02.630+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T11:53:02.631+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:53:02.631+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:53:02.631+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:53:02.631+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-28T11:53:02.631+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T11:53:02.631+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T11:53:02.632+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-28T11:53:02.632+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:53:02.633+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:53:02.634+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:53:02.634+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:53:02.634+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:53:02.634+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:53:02.635+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-28T11:53:02.635+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-28T11:53:02.635+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T11:53:02.635+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T11:53:02.636+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T11:53:02.636+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T11:53:02.636+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-28T11:53:02.636+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-28T11:53:02.636+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-28T11:53:02.637+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-28T11:53:02.637+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-28T11:53:02.637+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-28T11:53:02.637+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T11:53:02.637+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T11:53:02.638+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T11:53:02.638+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T11:53:02.638+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T11:53:02.638+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T11:53:02.638+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T11:53:02.639+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T11:53:02.639+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T11:53:02.639+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T11:53:02.639+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-28T11:53:02.639+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-28T11:53:02.640+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T11:53:02.640+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T11:53:02.640+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T11:53:02.640+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T11:53:02.641+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-28T11:53:02.641+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-28T11:53:02.641+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T11:53:02.641+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T11:53:02.641+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T11:53:02.641+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T11:53:02.641+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:53:02.642+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:53:02.642+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:53:02.642+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:53:02.642+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:53:02.642+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:53:02.642+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-28T11:53:02.643+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-28T11:53:02.643+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T11:53:02.643+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T11:53:02.643+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:53:02.643+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:53:02.643+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:53:02.644+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-28T11:53:02.644+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-28T11:53:02.644+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T11:53:02.644+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T11:53:02.644+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:53:02.645+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:53:02.645+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:53:02.645+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T11:53:02.645+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T11:53:02.645+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T11:53:02.645+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T11:53:02.646+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T11:53:02.646+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T11:53:02.646+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T11:53:02.646+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T11:53:02.646+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T11:53:02.646+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T11:53:02.647+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-28T11:53:02.656+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T11:53:02.656+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T11:53:02.658+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-28T11:53:02.658+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-28T11:53:02.659+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-28T11:53:02.659+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-28T11:53:02.659+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-28T11:53:02.659+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-28T11:53:02.659+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-28T11:53:02.659+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-28T11:53:02.660+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-28T11:53:02.716+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-28T11:53:02.725+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-28T11:53:02.725+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-28T11:53:02.726+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-28T11:53:02.726+0200 INFO HHH10001003: Autocommit mode: false
2023-01-28T11:53:02.730+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-28T11:53:02.730+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-28T11:53:03.420+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-28T11:53:03.420+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-28T11:53:03.421+0200 DEBUG JDBC version : 4.2
2023-01-28T11:53:03.496+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-28T11:53:03.506+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-28T11:53:03.506+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-28T11:53:03.534+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-28T11:53:03.534+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-28T11:53:03.535+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-28T11:53:03.535+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-28T11:53:03.535+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-28T11:53:03.535+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-28T11:53:03.536+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-28T11:53:03.536+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-28T11:53:03.536+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-28T11:53:03.538+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-28T11:53:03.539+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-28T11:53:03.539+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-28T11:53:03.543+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T11:53:03.543+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T11:53:03.548+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-28T11:53:03.548+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-28T11:53:03.559+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:53:03.560+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:53:03.560+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:53:03.560+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:53:03.560+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:53:03.560+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:53:03.563+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-28T11:53:03.619+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-28T11:53:03.674+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-28T11:53:03.690+0200 DEBUG Import with entity name Users
2023-01-28T11:53:03.704+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-28T11:53:03.722+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-28T11:53:03.748+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-28T11:53:03.756+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T11:53:03.756+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T11:53:03.757+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-28T11:53:03.764+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-28T11:53:03.774+0200 DEBUG building BasicValue for id
2023-01-28T11:53:03.780+0200 DEBUG Skipping column re-registration: users.id
2023-01-28T11:53:03.781+0200 DEBUG Building property id
2023-01-28T11:53:03.786+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-28T11:53:03.788+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-28T11:53:03.788+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-28T11:53:03.788+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-28T11:53:03.789+0200 DEBUG building BasicValue for password
2023-01-28T11:53:03.789+0200 DEBUG Skipping column re-registration: users.password
2023-01-28T11:53:03.789+0200 DEBUG Building property password
2023-01-28T11:53:03.789+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-28T11:53:03.790+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-28T11:53:03.790+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-28T11:53:03.790+0200 DEBUG building BasicValue for userName
2023-01-28T11:53:03.790+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-28T11:53:03.790+0200 DEBUG Building property userName
2023-01-28T11:53:03.801+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-28T11:53:03.801+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-28T11:53:03.803+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-28T11:53:03.807+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-28T11:53:03.906+0200 DEBUG Building session factory
2023-01-28T11:53:04.004+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T11:53:04.010+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-28T11:53:04.010+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-28T11:53:04.021+0200 DEBUG Instantiated session factory
2023-01-28T11:53:04.045+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-28T11:53:04.186+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-28T11:53:04.187+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-28T11:53:04.189+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-28T11:53:04.189+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-28T11:53:04.191+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-28T11:53:04.194+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-28T11:53:04.194+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-28T11:53:04.195+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-28T11:53:04.195+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-28T11:53:04.196+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-28T11:53:04.196+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-28T11:53:04.196+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-28T11:53:04.196+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-28T11:53:04.196+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-28T11:53:04.196+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-28T11:53:04.196+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-28T11:53:04.197+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-28T11:53:04.197+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-28T11:53:04.197+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-28T11:53:04.197+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-28T11:53:04.197+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-28T11:53:04.198+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-28T11:53:04.198+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-28T11:53:04.198+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-28T11:53:04.201+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-28T11:53:04.201+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-28T11:53:04.201+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-28T11:53:04.201+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-28T11:53:04.202+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-28T11:53:04.203+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-28T11:53:04.203+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-28T11:53:04.203+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-28T11:53:04.203+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-28T11:53:04.203+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-28T11:53:04.204+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-28T11:53:04.204+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-28T11:53:04.204+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-28T11:53:04.205+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-28T11:53:04.205+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-28T11:53:04.205+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-28T11:53:04.205+0200 DEBUG Registering alternate key : length -> character_length
2023-01-28T11:53:04.206+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-28T11:53:04.207+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-28T11:53:04.208+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-28T11:53:04.210+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-28T11:53:04.210+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-28T11:53:04.212+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-28T11:53:04.213+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-28T11:53:04.213+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-28T11:53:04.214+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-28T11:53:04.215+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-28T11:53:04.215+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-28T11:53:04.216+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-28T11:53:04.217+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-28T11:53:04.219+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-28T11:53:04.220+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-28T11:53:04.221+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-28T11:53:04.222+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-28T11:53:04.222+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-28T11:53:04.223+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-28T11:53:04.223+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-28T11:53:04.223+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-28T11:53:04.223+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-28T11:53:04.223+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-28T11:53:04.223+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-28T11:53:04.223+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-28T11:53:04.224+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-28T11:53:04.224+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-28T11:53:04.224+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-28T11:53:04.224+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-28T11:53:04.224+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-28T11:53:04.224+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-28T11:53:04.224+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-28T11:53:04.224+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-28T11:53:04.224+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-28T11:53:04.225+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-28T11:53:04.225+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-28T11:53:04.225+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-28T11:53:04.225+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-28T11:53:04.225+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-28T11:53:04.226+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-28T11:53:04.226+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-28T11:53:04.226+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-28T11:53:04.226+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-28T11:53:04.226+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-28T11:53:04.226+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-28T11:53:04.226+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-28T11:53:04.226+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-28T11:53:04.226+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-28T11:53:04.227+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-28T11:53:04.227+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-28T11:53:04.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-28T11:53:04.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-28T11:53:04.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-28T11:53:04.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-28T11:53:04.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-28T11:53:04.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-28T11:53:04.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-28T11:53:04.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-28T11:53:04.229+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-28T11:53:04.229+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-28T11:53:04.229+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-28T11:53:04.229+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-28T11:53:04.229+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-28T11:53:04.229+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-28T11:53:04.229+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-28T11:53:04.229+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-28T11:53:04.229+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-28T11:53:04.230+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-28T11:53:04.230+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-28T11:53:04.230+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-28T11:53:04.230+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-28T11:53:04.230+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-28T11:53:04.230+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-28T11:53:04.230+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-28T11:53:04.230+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-28T11:53:04.230+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-28T11:53:04.231+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-28T11:53:04.231+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-28T11:53:04.231+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-28T11:53:04.231+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-28T11:53:04.231+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-28T11:53:04.231+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-28T11:53:04.231+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-28T11:53:04.231+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-28T11:53:04.231+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-28T11:53:04.232+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-28T11:53:04.232+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-28T11:53:04.232+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-28T11:53:04.234+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-28T11:53:04.234+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-28T11:53:04.234+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-28T11:53:04.234+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-28T11:53:04.234+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-28T11:53:04.234+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-28T11:53:04.235+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-28T11:53:04.235+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-28T11:53:04.235+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-28T11:53:04.235+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-28T11:53:04.235+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-28T11:53:04.235+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-28T11:53:04.235+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-28T11:53:04.235+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-28T11:53:04.235+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-28T11:53:04.235+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-28T11:53:04.235+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-28T11:53:04.236+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-28T11:53:04.236+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-28T11:53:04.236+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-28T11:53:04.236+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-28T11:53:04.236+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-28T11:53:04.236+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-28T11:53:04.236+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-28T11:53:04.236+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-28T11:53:04.236+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-28T11:53:04.236+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-28T11:53:04.236+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-28T11:53:04.237+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-28T11:53:04.237+0200 DEBUG Registering alternate key : char -> chr
2023-01-28T11:53:04.237+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-28T11:53:04.237+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-28T11:53:04.238+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-28T11:53:04.238+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-28T11:53:04.238+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-28T11:53:04.239+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-28T11:53:04.239+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-28T11:53:04.241+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-28T11:53:04.241+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-28T11:53:04.241+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-28T11:53:04.241+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-28T11:53:04.243+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-28T11:53:04.255+0200 DEBUG abs(NUMERIC arg)
2023-01-28T11:53:04.255+0200 DEBUG Double acos(NUMERIC arg)
2023-01-28T11:53:04.255+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-28T11:53:04.255+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-28T11:53:04.255+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-28T11:53:04.255+0200 DEBUG Integer ascii(STRING arg)
2023-01-28T11:53:04.256+0200 DEBUG Double asin(NUMERIC arg)
2023-01-28T11:53:04.256+0200 DEBUG Double atan(NUMERIC arg)
2023-01-28T11:53:04.259+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-28T11:53:04.259+0200 DEBUG Double avg(NUMERIC arg)
2023-01-28T11:53:04.259+0200 DEBUG bit_and(arg)
2023-01-28T11:53:04.260+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-28T11:53:04.260+0200 DEBUG bit_or(arg)
2023-01-28T11:53:04.260+0200 DEBUG bitand(arg0, arg1)
2023-01-28T11:53:04.260+0200 DEBUG bitnot(arg)
2023-01-28T11:53:04.260+0200 DEBUG bitor(arg0, arg1)
2023-01-28T11:53:04.260+0200 DEBUG bitxor(arg0, arg1)
2023-01-28T11:53:04.260+0200 DEBUG cast(arg as Type)
2023-01-28T11:53:04.260+0200 DEBUG ceiling(NUMERIC arg)
2023-01-28T11:53:04.260+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-28T11:53:04.260+0200 DEBUG Character chr(INTEGER arg)
2023-01-28T11:53:04.260+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-28T11:53:04.260+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-28T11:53:04.260+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-28T11:53:04.260+0200 DEBUG Double cos(NUMERIC arg)
2023-01-28T11:53:04.261+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-28T11:53:04.261+0200 DEBUG Double cot(NUMERIC arg)
2023-01-28T11:53:04.261+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-28T11:53:04.261+0200 DEBUG Integer crc32(arg)
2023-01-28T11:53:04.261+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-28T11:53:04.261+0200 DEBUG Date curdate()
2023-01-28T11:53:04.261+0200 DEBUG Date current_date
2023-01-28T11:53:04.261+0200 DEBUG Time current_time
2023-01-28T11:53:04.262+0200 DEBUG Timestamp current_timestamp
2023-01-28T11:53:04.262+0200 DEBUG Time curtime()
2023-01-28T11:53:04.262+0200 DEBUG Date date(arg)
2023-01-28T11:53:04.262+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-28T11:53:04.262+0200 DEBUG Integer day(DATE arg)
2023-01-28T11:53:04.262+0200 DEBUG String dayname(DATE arg)
2023-01-28T11:53:04.262+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-28T11:53:04.262+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-28T11:53:04.262+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-28T11:53:04.263+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-28T11:53:04.263+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-28T11:53:04.263+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-28T11:53:04.263+0200 DEBUG Double exp(NUMERIC arg)
2023-01-28T11:53:04.263+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-28T11:53:04.263+0200 DEBUG first_valueANY value
2023-01-28T11:53:04.263+0200 DEBUG floor(NUMERIC arg)
2023-01-28T11:53:04.263+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-28T11:53:04.263+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T11:53:04.263+0200 DEBUG Integer hour(TIME arg)
2023-01-28T11:53:04.263+0200 DEBUG ifnull(arg0, arg1)
2023-01-28T11:53:04.263+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-28T11:53:04.263+0200 DEBUG Instant instant
2023-01-28T11:53:04.264+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-28T11:53:04.264+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-28T11:53:04.264+0200 DEBUG Date last_day(DATE arg)
2023-01-28T11:53:04.264+0200 DEBUG last_valueANY value
2023-01-28T11:53:04.264+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-28T11:53:04.264+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T11:53:04.264+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-28T11:53:04.264+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-28T11:53:04.264+0200 DEBUG Double ln(NUMERIC arg)
2023-01-28T11:53:04.264+0200 DEBUG LocalDate local_date
2023-01-28T11:53:04.264+0200 DEBUG LocalDateTime local_datetime
2023-01-28T11:53:04.264+0200 DEBUG LocalTime local_time
2023-01-28T11:53:04.265+0200 DEBUG Timestamp localtime
2023-01-28T11:53:04.265+0200 DEBUG Timestamp localtimestamp
2023-01-28T11:53:04.265+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-28T11:53:04.265+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-28T11:53:04.265+0200 DEBUG Double log10(NUMERIC arg)
2023-01-28T11:53:04.265+0200 DEBUG Double log2(NUMERIC arg)
2023-01-28T11:53:04.265+0200 DEBUG String lower(STRING string)
2023-01-28T11:53:04.265+0200 DEBUG String lpad(string, length[, padding])
2023-01-28T11:53:04.266+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-28T11:53:04.266+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-28T11:53:04.266+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-28T11:53:04.266+0200 DEBUG max(COMPARABLE arg)
2023-01-28T11:53:04.266+0200 DEBUG String md5(arg)
2023-01-28T11:53:04.266+0200 DEBUG Integer microsecond(TIME arg)
2023-01-28T11:53:04.266+0200 DEBUG min(COMPARABLE arg)
2023-01-28T11:53:04.266+0200 DEBUG Integer minute(TIME arg)
2023-01-28T11:53:04.267+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-28T11:53:04.267+0200 DEBUG Integer month(DATE arg)
2023-01-28T11:53:04.267+0200 DEBUG String monthname(DATE arg)
2023-01-28T11:53:04.267+0200 DEBUG Timestamp now()
2023-01-28T11:53:04.267+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-28T11:53:04.267+0200 DEBUG nullif(arg0, arg1)
2023-01-28T11:53:04.267+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-28T11:53:04.267+0200 DEBUG OffsetDateTime offset_datetime
2023-01-28T11:53:04.267+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-28T11:53:04.267+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-28T11:53:04.267+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-28T11:53:04.267+0200 DEBUG Double pi
2023-01-28T11:53:04.267+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-28T11:53:04.267+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-28T11:53:04.267+0200 DEBUG Integer quarter(DATE arg)
2023-01-28T11:53:04.267+0200 DEBUG Double radians(NUMERIC arg)
2023-01-28T11:53:04.267+0200 DEBUG Double rand([INTEGER seed])
2023-01-28T11:53:04.272+0200 DEBUG Long rank([arg0[, ...]])
2023-01-28T11:53:04.273+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-28T11:53:04.274+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-28T11:53:04.274+0200 DEBUG String reverse(STRING arg)
2023-01-28T11:53:04.274+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-28T11:53:04.274+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-28T11:53:04.274+0200 DEBUG Long row_number()
2023-01-28T11:53:04.274+0200 DEBUG String rpad(string, length[, padding])
2023-01-28T11:53:04.274+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-28T11:53:04.274+0200 DEBUG Integer second(TIME arg)
2023-01-28T11:53:04.274+0200 DEBUG String sha(arg)
2023-01-28T11:53:04.275+0200 DEBUG String sha1(arg)
2023-01-28T11:53:04.275+0200 DEBUG String sha2(arg0, arg1)
2023-01-28T11:53:04.275+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-28T11:53:04.275+0200 DEBUG Double sin(NUMERIC arg)
2023-01-28T11:53:04.275+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-28T11:53:04.275+0200 DEBUG String soundex(arg)
2023-01-28T11:53:04.275+0200 DEBUG String space(INTEGER arg)
2023-01-28T11:53:04.275+0200 DEBUG Object sql
2023-01-28T11:53:04.275+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-28T11:53:04.275+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-28T11:53:04.275+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-28T11:53:04.276+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-28T11:53:04.276+0200 DEBUG String str(arg)
2023-01-28T11:53:04.276+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-28T11:53:04.276+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-28T11:53:04.276+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-28T11:53:04.276+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-28T11:53:04.276+0200 DEBUG sum(arg)
2023-01-28T11:53:04.276+0200 DEBUG Timestamp sysdate()
2023-01-28T11:53:04.276+0200 DEBUG Double tan(NUMERIC arg)
2023-01-28T11:53:04.276+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-28T11:53:04.277+0200 DEBUG String time(arg)
2023-01-28T11:53:04.277+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-28T11:53:04.277+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T11:53:04.277+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-28T11:53:04.277+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-28T11:53:04.277+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-28T11:53:04.277+0200 DEBUG String upper(STRING string)
2023-01-28T11:53:04.277+0200 DEBUG Date utc_date
2023-01-28T11:53:04.277+0200 DEBUG Time utc_time
2023-01-28T11:53:04.277+0200 DEBUG Timestamp utc_timestamp
2023-01-28T11:53:04.278+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-28T11:53:04.278+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-28T11:53:04.278+0200 DEBUG Double variance(NUMERIC arg)
2023-01-28T11:53:04.278+0200 DEBUG Integer week(DATE arg)
2023-01-28T11:53:04.278+0200 DEBUG Integer year(DATE arg)
2023-01-28T11:53:04.279+0200 DEBUG Character char(INTEGER arg)
2023-01-28T11:53:04.279+0200 DEBUG Date current date
2023-01-28T11:53:04.279+0200 DEBUG Time current time
2023-01-28T11:53:04.279+0200 DEBUG Timestamp current timestamp
2023-01-28T11:53:04.280+0200 DEBUG Instant current_instant
2023-01-28T11:53:04.280+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T11:53:04.280+0200 DEBUG Integer day(DATE arg)
2023-01-28T11:53:04.280+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-28T11:53:04.280+0200 DEBUG LocalDate local date
2023-01-28T11:53:04.280+0200 DEBUG LocalDateTime local datetime
2023-01-28T11:53:04.280+0200 DEBUG LocalTime local time
2023-01-28T11:53:04.280+0200 DEBUG OffsetDateTime offset datetime
2023-01-28T11:53:04.280+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-28T11:53:04.282+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-28T11:53:04.508+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T11:53:04.508+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T11:53:04.866+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:22)
2023-01-28T11:53:04.933+0200 DEBUG Starting post-init callbacks
2023-01-28T11:53:04.933+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-28T11:53:04.934+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-28T11:53:05.034+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-28T11:53:05.034+0200 DEBUG  Version select: select id from users where id =?
2023-01-28T11:53:05.035+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-28T11:53:05.035+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-28T11:53:05.035+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-28T11:53:05.053+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T11:53:05.060+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T11:53:05.090+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-28T11:53:05.096+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T11:53:05.159+0200 DEBUG Checking 0 named HQL queries
2023-01-28T11:53:05.162+0200 DEBUG Checking 0 named SQL queries
2023-01-28T11:53:05.219+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-28T11:53:05.269+0200 DEBUG No alter strings for table : users
2023-01-28T11:53:05.269+0200 DEBUG No alter strings for table : users_SEQ
2023-01-28T11:53:05.285+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T11:53:05.285+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-28T11:53:05.303+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-28T11:53:05.306+0200 DEBUG Registering SessionFactory: 4ad442e4-7b9f-4ea9-88cf-af560a791831 (<unnamed>)
2023-01-28T11:53:05.306+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-28T11:53:05.415+0200 DEBUG Statistics initialized [enabled=false]
2023-01-28T11:53:05.422+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-28T11:53:05.423+0200 DEBUG begin
2023-01-28T11:53:05.465+0200 DEBUG HQL : from Users
2023-01-28T11:53:05.705+0200 DEBUG Handling root path - Users
2023-01-28T11:53:05.749+0200 DEBUG Encountered implicit select clause : fromUsers
2023-01-28T11:53:05.761+0200 DEBUG SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `edu.itstep.sql.Users(61615448288800)`
            <- [root] - `edu.itstep.sql.Users(61615448288800)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `edu.itstep.sql.Users(61615448288800)`
          <- [root] - `edu.itstep.sql.Users(61615448288800)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-01-28T11:53:05.823+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T11:53:05.825+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users(61615448288800))] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T11:53:05.838+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users(61615448288800)]
 |  +-BasicFetch [edu.itstep.sql.Users(61615448288800).password]
 |  \-BasicFetch [edu.itstep.sql.Users(61615448288800).userName]

2023-01-28T11:53:05.838+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users(61615448288800)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T11:53:05.859+0200 DEBUG Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-01-28T11:53:05.876+0200 DEBUG Initializer list
2023-01-28T11:53:05.878+0200 DEBUG     edu.itstep.sql.Users(61615448288800) -> EntityResultInitializer(edu.itstep.sql.Users(61615448288800))@1659537713 (SingleTableEntityPersister(edu.itstep.sql.Users))
2023-01-28T11:53:05.886+0200 DEBUG 
    select
        u1_0.id,
        u1_0.password,
        u1_0.user_name 
    from
        users u1_0
2023-01-28T11:53:05.896+0200 DEBUG Extracted JDBC value [0] - [352]
2023-01-28T11:53:05.897+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(61615448288800)): 352
2023-01-28T11:53:05.906+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(61615448288800)#352] : Users{id=352, userName='null', password='null'}
2023-01-28T11:53:05.906+0200 DEBUG Extracted JDBC value [1] - [test]
2023-01-28T11:53:05.906+0200 DEBUG Extracted JDBC value [2] - [user104]
2023-01-28T11:53:05.916+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(61615448288800)#352
2023-01-28T11:53:05.916+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@787178b1
2023-01-28T11:53:05.917+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(61615448288800)#352] - using loading instance
2023-01-28T11:53:05.917+0200 DEBUG Extracted JDBC value [0] - [402]
2023-01-28T11:53:05.918+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(61615448288800)): 402
2023-01-28T11:53:05.918+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(61615448288800)#402] : Users{id=402, userName='null', password='null'}
2023-01-28T11:53:05.918+0200 DEBUG Extracted JDBC value [1] - [$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm]
2023-01-28T11:53:05.918+0200 DEBUG Extracted JDBC value [2] - [user105]
2023-01-28T11:53:05.918+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(61615448288800)#402
2023-01-28T11:53:05.918+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@787178b1
2023-01-28T11:53:05.918+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(61615448288800)#402] - using loading instance
2023-01-28T11:53:05.918+0200 DEBUG Extracted JDBC value [0] - [452]
2023-01-28T11:53:05.918+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(61615448288800)): 452
2023-01-28T11:53:05.918+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(61615448288800)#452] : Users{id=452, userName='null', password='null'}
2023-01-28T11:53:05.919+0200 DEBUG Extracted JDBC value [1] - [$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i]
2023-01-28T11:53:05.919+0200 DEBUG Extracted JDBC value [2] - [null]
2023-01-28T11:53:05.919+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(61615448288800)#452
2023-01-28T11:53:05.919+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@787178b1
2023-01-28T11:53:05.919+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(61615448288800)#452] - using loading instance
2023-01-28T11:53:05.923+0200 DEBUG committing
2023-01-28T11:53:05.923+0200 DEBUG Processing flush-time cascades
2023-01-28T11:53:05.928+0200 DEBUG Dirty checking collections
2023-01-28T11:53:05.946+0200 DEBUG Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2023-01-28T11:53:05.947+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-28T11:53:05.948+0200 DEBUG Listing entities:
2023-01-28T11:53:05.951+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i, id=452, userName=null}
2023-01-28T11:53:05.951+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm, id=402, userName=user105}
2023-01-28T11:53:05.952+0200 DEBUG edu.itstep.sql.Users{password=test, id=352, userName=user104}
2023-01-28T11:53:05.959+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T11:53:05.963+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T11:56:30.490+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-28T11:56:30.524+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-28T11:56:30.535+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-28T11:56:30.587+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-28T11:56:30.590+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-28T11:56:30.593+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-28T11:56:31.065+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-28T11:56:31.079+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-28T11:56:31.528+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-28T11:56:31.537+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-28T11:56:31.538+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-28T11:56:31.540+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T11:56:31.540+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T11:56:31.541+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-28T11:56:31.542+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-28T11:56:31.543+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-28T11:56:31.545+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T11:56:31.546+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-28T11:56:31.547+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-28T11:56:31.548+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T11:56:31.549+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-28T11:56:31.559+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-28T11:56:31.562+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-28T11:56:31.847+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:56:31.848+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:56:31.848+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:56:31.848+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T11:56:31.848+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T11:56:31.849+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T11:56:31.849+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T11:56:31.849+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T11:56:31.849+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T11:56:31.849+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:56:31.849+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:56:31.849+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:56:31.850+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:56:31.850+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:56:31.850+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:56:31.850+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:56:31.850+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:56:31.850+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:56:31.851+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:56:31.851+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-28T11:56:31.851+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T11:56:31.852+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T11:56:31.852+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-28T11:56:31.852+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-28T11:56:31.853+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:56:31.853+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:56:31.853+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:56:31.854+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:56:31.854+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:56:31.854+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:56:31.854+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:56:31.854+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:56:31.854+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:56:31.855+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:56:31.855+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:56:31.855+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:56:31.855+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:56:31.855+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:56:31.856+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:56:31.856+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T11:56:31.856+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T11:56:31.856+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T11:56:31.856+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T11:56:31.856+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:56:31.857+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:56:31.857+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:56:31.857+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-28T11:56:31.857+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T11:56:31.857+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T11:56:31.858+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-28T11:56:31.858+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:56:31.858+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:56:31.858+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:56:31.858+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:56:31.859+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:56:31.859+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:56:31.859+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-28T11:56:31.859+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-28T11:56:31.860+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T11:56:31.860+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T11:56:31.860+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T11:56:31.860+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T11:56:31.860+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-28T11:56:31.860+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-28T11:56:31.861+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-28T11:56:31.861+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-28T11:56:31.861+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-28T11:56:31.861+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-28T11:56:31.862+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T11:56:31.862+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T11:56:31.862+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T11:56:31.862+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T11:56:31.862+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T11:56:31.863+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T11:56:31.863+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T11:56:31.863+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T11:56:31.863+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T11:56:31.863+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T11:56:31.863+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-28T11:56:31.864+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-28T11:56:31.864+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T11:56:31.864+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T11:56:31.864+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T11:56:31.864+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T11:56:31.864+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-28T11:56:31.865+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-28T11:56:31.865+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T11:56:31.865+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T11:56:31.865+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T11:56:31.865+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T11:56:31.865+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:56:31.866+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:56:31.866+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:56:31.866+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:56:31.866+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:56:31.867+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:56:31.867+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-28T11:56:31.867+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-28T11:56:31.867+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T11:56:31.868+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T11:56:31.868+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:56:31.868+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:56:31.868+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:56:31.868+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-28T11:56:31.868+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-28T11:56:31.869+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T11:56:31.869+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T11:56:31.869+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:56:31.869+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:56:31.869+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:56:31.869+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T11:56:31.870+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T11:56:31.870+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T11:56:31.870+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T11:56:31.870+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T11:56:31.870+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T11:56:31.870+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T11:56:31.870+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T11:56:31.870+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T11:56:31.871+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T11:56:31.871+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-28T11:56:31.880+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T11:56:31.880+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T11:56:31.882+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-28T11:56:31.883+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-28T11:56:31.883+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-28T11:56:31.883+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-28T11:56:31.883+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-28T11:56:31.883+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-28T11:56:31.884+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-28T11:56:31.884+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-28T11:56:31.884+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-28T11:56:31.944+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-28T11:56:31.960+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-28T11:56:31.961+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-28T11:56:31.961+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-28T11:56:31.962+0200 INFO HHH10001003: Autocommit mode: false
2023-01-28T11:56:31.967+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-28T11:56:31.968+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-28T11:56:32.824+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-28T11:56:32.825+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-28T11:56:32.826+0200 DEBUG JDBC version : 4.2
2023-01-28T11:56:32.905+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-28T11:56:32.914+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-28T11:56:32.915+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-28T11:56:32.941+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-28T11:56:32.941+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-28T11:56:32.942+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-28T11:56:32.942+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-28T11:56:32.942+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-28T11:56:32.942+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-28T11:56:32.943+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-28T11:56:32.943+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-28T11:56:32.943+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-28T11:56:32.945+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-28T11:56:32.945+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-28T11:56:32.946+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-28T11:56:32.950+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T11:56:32.950+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T11:56:32.955+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-28T11:56:32.956+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-28T11:56:32.966+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:56:32.966+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:56:32.966+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:56:32.966+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:56:32.966+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:56:32.966+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:56:32.968+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-28T11:56:33.022+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-28T11:56:33.085+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-28T11:56:33.105+0200 DEBUG Import with entity name Users
2023-01-28T11:56:33.122+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-28T11:56:33.147+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-28T11:56:33.174+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-28T11:56:33.180+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T11:56:33.180+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T11:56:33.182+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-28T11:56:33.189+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-28T11:56:33.200+0200 DEBUG building BasicValue for id
2023-01-28T11:56:33.206+0200 DEBUG Skipping column re-registration: users.id
2023-01-28T11:56:33.207+0200 DEBUG Building property id
2023-01-28T11:56:33.212+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-28T11:56:33.214+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-28T11:56:33.215+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-28T11:56:33.215+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-28T11:56:33.215+0200 DEBUG building BasicValue for password
2023-01-28T11:56:33.215+0200 DEBUG Skipping column re-registration: users.password
2023-01-28T11:56:33.215+0200 DEBUG Building property password
2023-01-28T11:56:33.216+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-28T11:56:33.216+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-28T11:56:33.216+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-28T11:56:33.216+0200 DEBUG building BasicValue for userName
2023-01-28T11:56:33.217+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-28T11:56:33.217+0200 DEBUG Building property userName
2023-01-28T11:56:33.226+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-28T11:56:33.226+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-28T11:56:33.228+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-28T11:56:33.233+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-28T11:56:33.383+0200 DEBUG Building session factory
2023-01-28T11:56:33.562+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T11:56:33.569+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-28T11:56:33.570+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-28T11:56:33.583+0200 DEBUG Instantiated session factory
2023-01-28T11:56:33.617+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-28T11:56:33.752+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-28T11:56:33.753+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-28T11:56:33.755+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-28T11:56:33.756+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-28T11:56:33.757+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-28T11:56:33.758+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-28T11:56:33.759+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-28T11:56:33.759+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-28T11:56:33.760+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-28T11:56:33.760+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-28T11:56:33.760+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-28T11:56:33.760+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-28T11:56:33.760+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-28T11:56:33.760+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-28T11:56:33.760+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-28T11:56:33.760+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-28T11:56:33.761+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-28T11:56:33.762+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-28T11:56:33.762+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-28T11:56:33.762+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-28T11:56:33.762+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-28T11:56:33.762+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-28T11:56:33.762+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-28T11:56:33.762+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-28T11:56:33.764+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-28T11:56:33.764+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-28T11:56:33.765+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-28T11:56:33.765+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-28T11:56:33.765+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-28T11:56:33.766+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-28T11:56:33.766+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-28T11:56:33.766+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-28T11:56:33.766+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-28T11:56:33.767+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-28T11:56:33.768+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-28T11:56:33.768+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-28T11:56:33.768+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-28T11:56:33.768+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-28T11:56:33.768+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-28T11:56:33.768+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-28T11:56:33.768+0200 DEBUG Registering alternate key : length -> character_length
2023-01-28T11:56:33.770+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-28T11:56:33.771+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-28T11:56:33.774+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-28T11:56:33.775+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-28T11:56:33.776+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-28T11:56:33.777+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-28T11:56:33.777+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-28T11:56:33.777+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-28T11:56:33.777+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-28T11:56:33.777+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-28T11:56:33.777+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-28T11:56:33.778+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-28T11:56:33.779+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-28T11:56:33.781+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-28T11:56:33.782+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-28T11:56:33.783+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-28T11:56:33.783+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-28T11:56:33.783+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-28T11:56:33.784+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-28T11:56:33.784+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-28T11:56:33.784+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-28T11:56:33.784+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-28T11:56:33.784+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-28T11:56:33.784+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-28T11:56:33.785+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-28T11:56:33.785+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-28T11:56:33.785+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-28T11:56:33.785+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-28T11:56:33.785+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-28T11:56:33.785+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-28T11:56:33.785+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-28T11:56:33.785+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-28T11:56:33.785+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-28T11:56:33.785+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-28T11:56:33.786+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-28T11:56:33.786+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-28T11:56:33.786+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-28T11:56:33.786+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-28T11:56:33.786+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-28T11:56:33.786+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-28T11:56:33.786+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-28T11:56:33.787+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-28T11:56:33.787+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-28T11:56:33.787+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-28T11:56:33.787+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-28T11:56:33.787+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-28T11:56:33.787+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-28T11:56:33.787+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-28T11:56:33.788+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-28T11:56:33.788+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-28T11:56:33.789+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-28T11:56:33.789+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-28T11:56:33.789+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-28T11:56:33.789+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-28T11:56:33.789+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-28T11:56:33.789+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-28T11:56:33.789+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-28T11:56:33.789+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-28T11:56:33.789+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-28T11:56:33.790+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-28T11:56:33.790+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-28T11:56:33.790+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-28T11:56:33.790+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-28T11:56:33.790+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-28T11:56:33.790+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-28T11:56:33.790+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-28T11:56:33.790+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-28T11:56:33.791+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-28T11:56:33.791+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-28T11:56:33.791+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-28T11:56:33.794+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-28T11:56:33.794+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-28T11:56:33.794+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-28T11:56:33.794+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-28T11:56:33.794+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-28T11:56:33.794+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-28T11:56:33.794+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-28T11:56:33.794+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-28T11:56:33.795+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-28T11:56:33.795+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-28T11:56:33.795+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-28T11:56:33.795+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-28T11:56:33.795+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-28T11:56:33.795+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-28T11:56:33.795+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-28T11:56:33.795+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-28T11:56:33.795+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-28T11:56:33.796+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-28T11:56:33.796+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-28T11:56:33.796+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-28T11:56:33.796+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-28T11:56:33.796+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-28T11:56:33.796+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-28T11:56:33.796+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-28T11:56:33.796+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-28T11:56:33.796+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-28T11:56:33.796+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-28T11:56:33.796+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-28T11:56:33.796+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-28T11:56:33.796+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-28T11:56:33.797+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-28T11:56:33.797+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-28T11:56:33.797+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-28T11:56:33.797+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-28T11:56:33.797+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-28T11:56:33.797+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-28T11:56:33.797+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-28T11:56:33.797+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-28T11:56:33.797+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-28T11:56:33.797+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-28T11:56:33.797+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-28T11:56:33.798+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-28T11:56:33.798+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-28T11:56:33.798+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-28T11:56:33.798+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-28T11:56:33.798+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-28T11:56:33.798+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-28T11:56:33.798+0200 DEBUG Registering alternate key : char -> chr
2023-01-28T11:56:33.798+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-28T11:56:33.798+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-28T11:56:33.800+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-28T11:56:33.800+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-28T11:56:33.801+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-28T11:56:33.801+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-28T11:56:33.801+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-28T11:56:33.804+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-28T11:56:33.804+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-28T11:56:33.804+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-28T11:56:33.804+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-28T11:56:33.805+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-28T11:56:33.813+0200 DEBUG abs(NUMERIC arg)
2023-01-28T11:56:33.813+0200 DEBUG Double acos(NUMERIC arg)
2023-01-28T11:56:33.813+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-28T11:56:33.813+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-28T11:56:33.814+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-28T11:56:33.814+0200 DEBUG Integer ascii(STRING arg)
2023-01-28T11:56:33.814+0200 DEBUG Double asin(NUMERIC arg)
2023-01-28T11:56:33.814+0200 DEBUG Double atan(NUMERIC arg)
2023-01-28T11:56:33.818+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-28T11:56:33.818+0200 DEBUG Double avg(NUMERIC arg)
2023-01-28T11:56:33.818+0200 DEBUG bit_and(arg)
2023-01-28T11:56:33.818+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-28T11:56:33.819+0200 DEBUG bit_or(arg)
2023-01-28T11:56:33.819+0200 DEBUG bitand(arg0, arg1)
2023-01-28T11:56:33.819+0200 DEBUG bitnot(arg)
2023-01-28T11:56:33.819+0200 DEBUG bitor(arg0, arg1)
2023-01-28T11:56:33.819+0200 DEBUG bitxor(arg0, arg1)
2023-01-28T11:56:33.820+0200 DEBUG cast(arg as Type)
2023-01-28T11:56:33.820+0200 DEBUG ceiling(NUMERIC arg)
2023-01-28T11:56:33.820+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-28T11:56:33.820+0200 DEBUG Character chr(INTEGER arg)
2023-01-28T11:56:33.820+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-28T11:56:33.820+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-28T11:56:33.820+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-28T11:56:33.820+0200 DEBUG Double cos(NUMERIC arg)
2023-01-28T11:56:33.821+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-28T11:56:33.821+0200 DEBUG Double cot(NUMERIC arg)
2023-01-28T11:56:33.821+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-28T11:56:33.821+0200 DEBUG Integer crc32(arg)
2023-01-28T11:56:33.826+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-28T11:56:33.834+0200 DEBUG Date curdate()
2023-01-28T11:56:33.834+0200 DEBUG Date current_date
2023-01-28T11:56:33.834+0200 DEBUG Time current_time
2023-01-28T11:56:33.834+0200 DEBUG Timestamp current_timestamp
2023-01-28T11:56:33.834+0200 DEBUG Time curtime()
2023-01-28T11:56:33.835+0200 DEBUG Date date(arg)
2023-01-28T11:56:33.835+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-28T11:56:33.835+0200 DEBUG Integer day(DATE arg)
2023-01-28T11:56:33.835+0200 DEBUG String dayname(DATE arg)
2023-01-28T11:56:33.836+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-28T11:56:33.836+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-28T11:56:33.836+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-28T11:56:33.836+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-28T11:56:33.836+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-28T11:56:33.836+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-28T11:56:33.836+0200 DEBUG Double exp(NUMERIC arg)
2023-01-28T11:56:33.836+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-28T11:56:33.836+0200 DEBUG first_valueANY value
2023-01-28T11:56:33.837+0200 DEBUG floor(NUMERIC arg)
2023-01-28T11:56:33.837+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-28T11:56:33.837+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T11:56:33.838+0200 DEBUG Integer hour(TIME arg)
2023-01-28T11:56:33.838+0200 DEBUG ifnull(arg0, arg1)
2023-01-28T11:56:33.838+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-28T11:56:33.838+0200 DEBUG Instant instant
2023-01-28T11:56:33.838+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-28T11:56:33.838+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-28T11:56:33.838+0200 DEBUG Date last_day(DATE arg)
2023-01-28T11:56:33.838+0200 DEBUG last_valueANY value
2023-01-28T11:56:33.839+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-28T11:56:33.839+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T11:56:33.839+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-28T11:56:33.839+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-28T11:56:33.839+0200 DEBUG Double ln(NUMERIC arg)
2023-01-28T11:56:33.839+0200 DEBUG LocalDate local_date
2023-01-28T11:56:33.839+0200 DEBUG LocalDateTime local_datetime
2023-01-28T11:56:33.840+0200 DEBUG LocalTime local_time
2023-01-28T11:56:33.840+0200 DEBUG Timestamp localtime
2023-01-28T11:56:33.840+0200 DEBUG Timestamp localtimestamp
2023-01-28T11:56:33.840+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-28T11:56:33.840+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-28T11:56:33.840+0200 DEBUG Double log10(NUMERIC arg)
2023-01-28T11:56:33.840+0200 DEBUG Double log2(NUMERIC arg)
2023-01-28T11:56:33.841+0200 DEBUG String lower(STRING string)
2023-01-28T11:56:33.841+0200 DEBUG String lpad(string, length[, padding])
2023-01-28T11:56:33.841+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-28T11:56:33.842+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-28T11:56:33.842+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-28T11:56:33.842+0200 DEBUG max(COMPARABLE arg)
2023-01-28T11:56:33.842+0200 DEBUG String md5(arg)
2023-01-28T11:56:33.842+0200 DEBUG Integer microsecond(TIME arg)
2023-01-28T11:56:33.842+0200 DEBUG min(COMPARABLE arg)
2023-01-28T11:56:33.842+0200 DEBUG Integer minute(TIME arg)
2023-01-28T11:56:33.843+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-28T11:56:33.843+0200 DEBUG Integer month(DATE arg)
2023-01-28T11:56:33.843+0200 DEBUG String monthname(DATE arg)
2023-01-28T11:56:33.843+0200 DEBUG Timestamp now()
2023-01-28T11:56:33.843+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-28T11:56:33.843+0200 DEBUG nullif(arg0, arg1)
2023-01-28T11:56:33.843+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-28T11:56:33.843+0200 DEBUG OffsetDateTime offset_datetime
2023-01-28T11:56:33.843+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-28T11:56:33.843+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-28T11:56:33.843+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-28T11:56:33.844+0200 DEBUG Double pi
2023-01-28T11:56:33.844+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-28T11:56:33.844+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-28T11:56:33.844+0200 DEBUG Integer quarter(DATE arg)
2023-01-28T11:56:33.844+0200 DEBUG Double radians(NUMERIC arg)
2023-01-28T11:56:33.844+0200 DEBUG Double rand([INTEGER seed])
2023-01-28T11:56:33.844+0200 DEBUG Long rank([arg0[, ...]])
2023-01-28T11:56:33.845+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-28T11:56:33.845+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-28T11:56:33.845+0200 DEBUG String reverse(STRING arg)
2023-01-28T11:56:33.845+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-28T11:56:33.845+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-28T11:56:33.845+0200 DEBUG Long row_number()
2023-01-28T11:56:33.846+0200 DEBUG String rpad(string, length[, padding])
2023-01-28T11:56:33.846+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-28T11:56:33.846+0200 DEBUG Integer second(TIME arg)
2023-01-28T11:56:33.846+0200 DEBUG String sha(arg)
2023-01-28T11:56:33.846+0200 DEBUG String sha1(arg)
2023-01-28T11:56:33.846+0200 DEBUG String sha2(arg0, arg1)
2023-01-28T11:56:33.856+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-28T11:56:33.857+0200 DEBUG Double sin(NUMERIC arg)
2023-01-28T11:56:33.858+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-28T11:56:33.858+0200 DEBUG String soundex(arg)
2023-01-28T11:56:33.859+0200 DEBUG String space(INTEGER arg)
2023-01-28T11:56:33.859+0200 DEBUG Object sql
2023-01-28T11:56:33.859+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-28T11:56:33.859+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-28T11:56:33.859+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-28T11:56:33.859+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-28T11:56:33.859+0200 DEBUG String str(arg)
2023-01-28T11:56:33.859+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-28T11:56:33.859+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-28T11:56:33.860+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-28T11:56:33.860+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-28T11:56:33.861+0200 DEBUG sum(arg)
2023-01-28T11:56:33.861+0200 DEBUG Timestamp sysdate()
2023-01-28T11:56:33.862+0200 DEBUG Double tan(NUMERIC arg)
2023-01-28T11:56:33.862+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-28T11:56:33.862+0200 DEBUG String time(arg)
2023-01-28T11:56:33.862+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-28T11:56:33.862+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T11:56:33.862+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-28T11:56:33.863+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-28T11:56:33.863+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-28T11:56:33.863+0200 DEBUG String upper(STRING string)
2023-01-28T11:56:33.863+0200 DEBUG Date utc_date
2023-01-28T11:56:33.863+0200 DEBUG Time utc_time
2023-01-28T11:56:33.863+0200 DEBUG Timestamp utc_timestamp
2023-01-28T11:56:33.863+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-28T11:56:33.863+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-28T11:56:33.863+0200 DEBUG Double variance(NUMERIC arg)
2023-01-28T11:56:33.864+0200 DEBUG Integer week(DATE arg)
2023-01-28T11:56:33.864+0200 DEBUG Integer year(DATE arg)
2023-01-28T11:56:33.865+0200 DEBUG Character char(INTEGER arg)
2023-01-28T11:56:33.865+0200 DEBUG Date current date
2023-01-28T11:56:33.865+0200 DEBUG Time current time
2023-01-28T11:56:33.865+0200 DEBUG Timestamp current timestamp
2023-01-28T11:56:33.865+0200 DEBUG Instant current_instant
2023-01-28T11:56:33.865+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T11:56:33.866+0200 DEBUG Integer day(DATE arg)
2023-01-28T11:56:33.866+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-28T11:56:33.866+0200 DEBUG LocalDate local date
2023-01-28T11:56:33.866+0200 DEBUG LocalDateTime local datetime
2023-01-28T11:56:33.866+0200 DEBUG LocalTime local time
2023-01-28T11:56:33.866+0200 DEBUG OffsetDateTime offset datetime
2023-01-28T11:56:33.866+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-28T11:56:33.869+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-28T11:56:34.087+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T11:56:34.087+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T11:56:34.397+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:22)
2023-01-28T11:56:34.456+0200 DEBUG Starting post-init callbacks
2023-01-28T11:56:34.456+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-28T11:56:34.456+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-28T11:56:34.526+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-28T11:56:34.526+0200 DEBUG  Version select: select id from users where id =?
2023-01-28T11:56:34.526+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-28T11:56:34.527+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-28T11:56:34.527+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-28T11:56:34.539+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T11:56:34.542+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T11:56:34.560+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-28T11:56:34.563+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T11:56:34.597+0200 DEBUG Checking 0 named HQL queries
2023-01-28T11:56:34.597+0200 DEBUG Checking 0 named SQL queries
2023-01-28T11:56:34.665+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-28T11:56:34.747+0200 DEBUG No alter strings for table : users
2023-01-28T11:56:34.747+0200 DEBUG No alter strings for table : users_SEQ
2023-01-28T11:56:34.767+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T11:56:34.767+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-28T11:56:34.800+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-28T11:56:34.802+0200 DEBUG Registering SessionFactory: 4cfa937c-b222-41de-b953-bb17faea5be2 (<unnamed>)
2023-01-28T11:56:34.802+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-28T11:56:34.902+0200 DEBUG Statistics initialized [enabled=false]
2023-01-28T11:56:34.933+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-28T11:56:34.934+0200 DEBUG begin
2023-01-28T11:56:34.988+0200 DEBUG HQL : from Users
2023-01-28T11:56:35.189+0200 DEBUG Handling root path - Users
2023-01-28T11:56:35.197+0200 DEBUG Encountered implicit select clause : fromUsers
2023-01-28T11:56:35.208+0200 DEBUG SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `edu.itstep.sql.Users(61824897086200)`
            <- [root] - `edu.itstep.sql.Users(61824897086200)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `edu.itstep.sql.Users(61824897086200)`
          <- [root] - `edu.itstep.sql.Users(61824897086200)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-01-28T11:56:35.239+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T11:56:35.239+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users(61824897086200))] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T11:56:35.246+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users(61824897086200)]
 |  +-BasicFetch [edu.itstep.sql.Users(61824897086200).password]
 |  \-BasicFetch [edu.itstep.sql.Users(61824897086200).userName]

2023-01-28T11:56:35.246+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users(61824897086200)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T11:56:35.263+0200 DEBUG Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-01-28T11:56:35.273+0200 DEBUG Initializer list
2023-01-28T11:56:35.274+0200 DEBUG     edu.itstep.sql.Users(61824897086200) -> EntityResultInitializer(edu.itstep.sql.Users(61824897086200))@1659537713 (SingleTableEntityPersister(edu.itstep.sql.Users))
2023-01-28T11:56:35.278+0200 DEBUG 
    select
        u1_0.id,
        u1_0.password,
        u1_0.user_name 
    from
        users u1_0
2023-01-28T11:56:35.286+0200 DEBUG Extracted JDBC value [0] - [352]
2023-01-28T11:56:35.287+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(61824897086200)): 352
2023-01-28T11:56:35.297+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(61824897086200)#352] : Users{id=352, userName='null', password='null'}
2023-01-28T11:56:35.298+0200 DEBUG Extracted JDBC value [1] - [test]
2023-01-28T11:56:35.298+0200 DEBUG Extracted JDBC value [2] - [user104]
2023-01-28T11:56:35.308+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(61824897086200)#352
2023-01-28T11:56:35.308+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@787178b1
2023-01-28T11:56:35.308+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(61824897086200)#352] - using loading instance
2023-01-28T11:56:35.309+0200 DEBUG Extracted JDBC value [0] - [402]
2023-01-28T11:56:35.309+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(61824897086200)): 402
2023-01-28T11:56:35.310+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(61824897086200)#402] : Users{id=402, userName='null', password='null'}
2023-01-28T11:56:35.310+0200 DEBUG Extracted JDBC value [1] - [$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm]
2023-01-28T11:56:35.310+0200 DEBUG Extracted JDBC value [2] - [user105]
2023-01-28T11:56:35.310+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(61824897086200)#402
2023-01-28T11:56:35.310+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@787178b1
2023-01-28T11:56:35.310+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(61824897086200)#402] - using loading instance
2023-01-28T11:56:35.310+0200 DEBUG Extracted JDBC value [0] - [452]
2023-01-28T11:56:35.310+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(61824897086200)): 452
2023-01-28T11:56:35.310+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(61824897086200)#452] : Users{id=452, userName='null', password='null'}
2023-01-28T11:56:35.310+0200 DEBUG Extracted JDBC value [1] - [$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i]
2023-01-28T11:56:35.310+0200 DEBUG Extracted JDBC value [2] - [null]
2023-01-28T11:56:35.311+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(61824897086200)#452
2023-01-28T11:56:35.311+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@787178b1
2023-01-28T11:56:35.311+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(61824897086200)#452] - using loading instance
2023-01-28T11:56:35.317+0200 DEBUG committing
2023-01-28T11:56:35.318+0200 DEBUG Processing flush-time cascades
2023-01-28T11:56:35.321+0200 DEBUG Dirty checking collections
2023-01-28T11:56:35.331+0200 DEBUG Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2023-01-28T11:56:35.334+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-28T11:56:35.335+0200 DEBUG Listing entities:
2023-01-28T11:56:35.337+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i, id=452, userName=null}
2023-01-28T11:56:35.337+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm, id=402, userName=user105}
2023-01-28T11:56:35.337+0200 DEBUG edu.itstep.sql.Users{password=test, id=352, userName=user104}
2023-01-28T11:56:35.343+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T11:56:35.347+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T11:57:13.222+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-28T11:57:13.248+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-28T11:57:13.259+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-28T11:57:13.294+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-28T11:57:13.297+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-28T11:57:13.299+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-28T11:57:13.638+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-28T11:57:13.660+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-28T11:57:14.080+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-28T11:57:14.087+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-28T11:57:14.088+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-28T11:57:14.089+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T11:57:14.089+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T11:57:14.090+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-28T11:57:14.091+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-28T11:57:14.092+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-28T11:57:14.094+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T11:57:14.095+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-28T11:57:14.096+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-28T11:57:14.096+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T11:57:14.097+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-28T11:57:14.106+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-28T11:57:14.108+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-28T11:57:14.307+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:57:14.307+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:57:14.307+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:57:14.307+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T11:57:14.308+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T11:57:14.308+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T11:57:14.308+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T11:57:14.308+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T11:57:14.308+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T11:57:14.309+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:57:14.309+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:57:14.309+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:57:14.309+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:57:14.309+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:57:14.310+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:57:14.310+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:57:14.310+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:57:14.310+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:57:14.310+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:57:14.310+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-28T11:57:14.311+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T11:57:14.311+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T11:57:14.311+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-28T11:57:14.313+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-28T11:57:14.313+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:57:14.314+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:57:14.314+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:57:14.314+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:57:14.314+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:57:14.314+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:57:14.315+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:57:14.315+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:57:14.315+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:57:14.315+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:57:14.316+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:57:14.316+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:57:14.316+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:57:14.316+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:57:14.317+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:57:14.317+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T11:57:14.317+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T11:57:14.318+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T11:57:14.318+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T11:57:14.318+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:57:14.318+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:57:14.318+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:57:14.318+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-28T11:57:14.319+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T11:57:14.319+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T11:57:14.319+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-28T11:57:14.319+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:57:14.320+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:57:14.320+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:57:14.320+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:57:14.320+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:57:14.320+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:57:14.320+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-28T11:57:14.320+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-28T11:57:14.321+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T11:57:14.321+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T11:57:14.321+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T11:57:14.321+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T11:57:14.322+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-28T11:57:14.322+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-28T11:57:14.322+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-28T11:57:14.322+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-28T11:57:14.323+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-28T11:57:14.323+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-28T11:57:14.323+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T11:57:14.323+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T11:57:14.323+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T11:57:14.324+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T11:57:14.324+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T11:57:14.324+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T11:57:14.324+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T11:57:14.324+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T11:57:14.324+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T11:57:14.325+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T11:57:14.325+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-28T11:57:14.325+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-28T11:57:14.325+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T11:57:14.325+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T11:57:14.325+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T11:57:14.325+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T11:57:14.326+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-28T11:57:14.326+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-28T11:57:14.326+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T11:57:14.326+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T11:57:14.326+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T11:57:14.326+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T11:57:14.327+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:57:14.327+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:57:14.327+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:57:14.327+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:57:14.328+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:57:14.328+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:57:14.328+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-28T11:57:14.328+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-28T11:57:14.328+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T11:57:14.328+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T11:57:14.329+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:57:14.329+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:57:14.330+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:57:14.330+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-28T11:57:14.330+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-28T11:57:14.330+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T11:57:14.330+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T11:57:14.330+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:57:14.330+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:57:14.331+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:57:14.331+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T11:57:14.331+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T11:57:14.331+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T11:57:14.334+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T11:57:14.334+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T11:57:14.335+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T11:57:14.335+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T11:57:14.335+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T11:57:14.335+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T11:57:14.336+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T11:57:14.336+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-28T11:57:14.342+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T11:57:14.343+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T11:57:14.345+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-28T11:57:14.345+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-28T11:57:14.345+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-28T11:57:14.345+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-28T11:57:14.346+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-28T11:57:14.346+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-28T11:57:14.346+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-28T11:57:14.347+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-28T11:57:14.347+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-28T11:57:14.409+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-28T11:57:14.418+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-28T11:57:14.418+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-28T11:57:14.419+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-28T11:57:14.419+0200 INFO HHH10001003: Autocommit mode: false
2023-01-28T11:57:14.422+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-28T11:57:14.422+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-28T11:57:15.009+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-28T11:57:15.009+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-28T11:57:15.009+0200 DEBUG JDBC version : 4.2
2023-01-28T11:57:15.064+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-28T11:57:15.071+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-28T11:57:15.071+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-28T11:57:15.092+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-28T11:57:15.092+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-28T11:57:15.093+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-28T11:57:15.093+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-28T11:57:15.094+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-28T11:57:15.094+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-28T11:57:15.094+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-28T11:57:15.094+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-28T11:57:15.094+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-28T11:57:15.096+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-28T11:57:15.096+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-28T11:57:15.096+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-28T11:57:15.099+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T11:57:15.099+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T11:57:15.101+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-28T11:57:15.102+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-28T11:57:15.109+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:57:15.109+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:57:15.109+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:57:15.109+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:57:15.109+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:57:15.109+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:57:15.111+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-28T11:57:15.147+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-28T11:57:15.176+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-28T11:57:15.184+0200 DEBUG Import with entity name Users
2023-01-28T11:57:15.192+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-28T11:57:15.200+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-28T11:57:15.220+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-28T11:57:15.224+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T11:57:15.225+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T11:57:15.226+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-28T11:57:15.234+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-28T11:57:15.243+0200 DEBUG building BasicValue for id
2023-01-28T11:57:15.251+0200 DEBUG Skipping column re-registration: users.id
2023-01-28T11:57:15.254+0200 DEBUG Building property id
2023-01-28T11:57:15.262+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-28T11:57:15.263+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-28T11:57:15.264+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-28T11:57:15.264+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-28T11:57:15.264+0200 DEBUG building BasicValue for password
2023-01-28T11:57:15.264+0200 DEBUG Skipping column re-registration: users.password
2023-01-28T11:57:15.265+0200 DEBUG Building property password
2023-01-28T11:57:15.267+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-28T11:57:15.269+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-28T11:57:15.269+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-28T11:57:15.269+0200 DEBUG building BasicValue for userName
2023-01-28T11:57:15.269+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-28T11:57:15.270+0200 DEBUG Building property userName
2023-01-28T11:57:15.286+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-28T11:57:15.286+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-28T11:57:15.288+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-28T11:57:15.293+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-28T11:57:15.361+0200 DEBUG Building session factory
2023-01-28T11:57:15.420+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T11:57:15.427+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-28T11:57:15.427+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-28T11:57:15.438+0200 DEBUG Instantiated session factory
2023-01-28T11:57:15.468+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-28T11:57:15.583+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-28T11:57:15.583+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-28T11:57:15.584+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-28T11:57:15.585+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-28T11:57:15.586+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-28T11:57:15.587+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-28T11:57:15.587+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-28T11:57:15.587+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-28T11:57:15.587+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-28T11:57:15.588+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-28T11:57:15.588+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-28T11:57:15.588+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-28T11:57:15.588+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-28T11:57:15.588+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-28T11:57:15.588+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-28T11:57:15.588+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-28T11:57:15.589+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-28T11:57:15.589+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-28T11:57:15.589+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-28T11:57:15.589+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-28T11:57:15.589+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-28T11:57:15.589+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-28T11:57:15.589+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-28T11:57:15.589+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-28T11:57:15.591+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-28T11:57:15.592+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-28T11:57:15.592+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-28T11:57:15.592+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-28T11:57:15.593+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-28T11:57:15.593+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-28T11:57:15.593+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-28T11:57:15.593+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-28T11:57:15.594+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-28T11:57:15.594+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-28T11:57:15.594+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-28T11:57:15.595+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-28T11:57:15.595+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-28T11:57:15.595+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-28T11:57:15.595+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-28T11:57:15.595+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-28T11:57:15.595+0200 DEBUG Registering alternate key : length -> character_length
2023-01-28T11:57:15.596+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-28T11:57:15.597+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-28T11:57:15.598+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-28T11:57:15.599+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-28T11:57:15.599+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-28T11:57:15.599+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-28T11:57:15.600+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-28T11:57:15.600+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-28T11:57:15.600+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-28T11:57:15.600+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-28T11:57:15.600+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-28T11:57:15.601+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-28T11:57:15.602+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-28T11:57:15.603+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-28T11:57:15.604+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-28T11:57:15.605+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-28T11:57:15.605+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-28T11:57:15.605+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-28T11:57:15.605+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-28T11:57:15.605+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-28T11:57:15.605+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-28T11:57:15.605+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-28T11:57:15.605+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-28T11:57:15.605+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-28T11:57:15.605+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-28T11:57:15.606+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-28T11:57:15.606+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-28T11:57:15.606+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-28T11:57:15.606+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-28T11:57:15.606+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-28T11:57:15.606+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-28T11:57:15.606+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-28T11:57:15.606+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-28T11:57:15.606+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-28T11:57:15.606+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-28T11:57:15.606+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-28T11:57:15.607+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-28T11:57:15.607+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-28T11:57:15.607+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-28T11:57:15.607+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-28T11:57:15.607+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-28T11:57:15.607+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-28T11:57:15.607+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-28T11:57:15.607+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-28T11:57:15.607+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-28T11:57:15.607+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-28T11:57:15.607+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-28T11:57:15.608+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-28T11:57:15.608+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-28T11:57:15.608+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-28T11:57:15.608+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-28T11:57:15.608+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-28T11:57:15.608+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-28T11:57:15.608+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-28T11:57:15.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-28T11:57:15.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-28T11:57:15.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-28T11:57:15.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-28T11:57:15.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-28T11:57:15.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-28T11:57:15.609+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-28T11:57:15.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-28T11:57:15.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-28T11:57:15.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-28T11:57:15.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-28T11:57:15.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-28T11:57:15.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-28T11:57:15.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-28T11:57:15.610+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-28T11:57:15.610+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-28T11:57:15.610+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-28T11:57:15.610+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-28T11:57:15.610+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-28T11:57:15.610+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-28T11:57:15.610+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-28T11:57:15.611+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-28T11:57:15.611+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-28T11:57:15.611+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-28T11:57:15.611+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-28T11:57:15.613+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-28T11:57:15.613+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-28T11:57:15.613+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-28T11:57:15.613+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-28T11:57:15.613+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-28T11:57:15.613+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-28T11:57:15.614+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-28T11:57:15.614+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-28T11:57:15.614+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-28T11:57:15.614+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-28T11:57:15.614+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-28T11:57:15.614+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-28T11:57:15.614+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-28T11:57:15.614+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-28T11:57:15.614+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-28T11:57:15.614+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-28T11:57:15.615+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-28T11:57:15.615+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-28T11:57:15.615+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-28T11:57:15.615+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-28T11:57:15.615+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-28T11:57:15.615+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-28T11:57:15.615+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-28T11:57:15.615+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-28T11:57:15.615+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-28T11:57:15.615+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-28T11:57:15.616+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-28T11:57:15.616+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-28T11:57:15.616+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-28T11:57:15.616+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-28T11:57:15.616+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-28T11:57:15.616+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-28T11:57:15.616+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-28T11:57:15.616+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-28T11:57:15.616+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-28T11:57:15.616+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-28T11:57:15.616+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-28T11:57:15.617+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-28T11:57:15.617+0200 DEBUG Registering alternate key : char -> chr
2023-01-28T11:57:15.617+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-28T11:57:15.617+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-28T11:57:15.618+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-28T11:57:15.618+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-28T11:57:15.618+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-28T11:57:15.618+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-28T11:57:15.618+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-28T11:57:15.620+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-28T11:57:15.620+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-28T11:57:15.620+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-28T11:57:15.620+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-28T11:57:15.621+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-28T11:57:15.626+0200 DEBUG abs(NUMERIC arg)
2023-01-28T11:57:15.626+0200 DEBUG Double acos(NUMERIC arg)
2023-01-28T11:57:15.626+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-28T11:57:15.627+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-28T11:57:15.627+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-28T11:57:15.627+0200 DEBUG Integer ascii(STRING arg)
2023-01-28T11:57:15.627+0200 DEBUG Double asin(NUMERIC arg)
2023-01-28T11:57:15.627+0200 DEBUG Double atan(NUMERIC arg)
2023-01-28T11:57:15.630+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-28T11:57:15.630+0200 DEBUG Double avg(NUMERIC arg)
2023-01-28T11:57:15.630+0200 DEBUG bit_and(arg)
2023-01-28T11:57:15.630+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-28T11:57:15.631+0200 DEBUG bit_or(arg)
2023-01-28T11:57:15.633+0200 DEBUG bitand(arg0, arg1)
2023-01-28T11:57:15.633+0200 DEBUG bitnot(arg)
2023-01-28T11:57:15.633+0200 DEBUG bitor(arg0, arg1)
2023-01-28T11:57:15.633+0200 DEBUG bitxor(arg0, arg1)
2023-01-28T11:57:15.633+0200 DEBUG cast(arg as Type)
2023-01-28T11:57:15.633+0200 DEBUG ceiling(NUMERIC arg)
2023-01-28T11:57:15.633+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-28T11:57:15.633+0200 DEBUG Character chr(INTEGER arg)
2023-01-28T11:57:15.634+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-28T11:57:15.634+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-28T11:57:15.634+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-28T11:57:15.634+0200 DEBUG Double cos(NUMERIC arg)
2023-01-28T11:57:15.634+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-28T11:57:15.635+0200 DEBUG Double cot(NUMERIC arg)
2023-01-28T11:57:15.635+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-28T11:57:15.635+0200 DEBUG Integer crc32(arg)
2023-01-28T11:57:15.635+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-28T11:57:15.635+0200 DEBUG Date curdate()
2023-01-28T11:57:15.635+0200 DEBUG Date current_date
2023-01-28T11:57:15.636+0200 DEBUG Time current_time
2023-01-28T11:57:15.636+0200 DEBUG Timestamp current_timestamp
2023-01-28T11:57:15.636+0200 DEBUG Time curtime()
2023-01-28T11:57:15.636+0200 DEBUG Date date(arg)
2023-01-28T11:57:15.636+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-28T11:57:15.636+0200 DEBUG Integer day(DATE arg)
2023-01-28T11:57:15.636+0200 DEBUG String dayname(DATE arg)
2023-01-28T11:57:15.636+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-28T11:57:15.636+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-28T11:57:15.636+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-28T11:57:15.636+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-28T11:57:15.637+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-28T11:57:15.637+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-28T11:57:15.637+0200 DEBUG Double exp(NUMERIC arg)
2023-01-28T11:57:15.637+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-28T11:57:15.637+0200 DEBUG first_valueANY value
2023-01-28T11:57:15.637+0200 DEBUG floor(NUMERIC arg)
2023-01-28T11:57:15.637+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-28T11:57:15.637+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T11:57:15.637+0200 DEBUG Integer hour(TIME arg)
2023-01-28T11:57:15.638+0200 DEBUG ifnull(arg0, arg1)
2023-01-28T11:57:15.638+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-28T11:57:15.638+0200 DEBUG Instant instant
2023-01-28T11:57:15.638+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-28T11:57:15.638+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-28T11:57:15.638+0200 DEBUG Date last_day(DATE arg)
2023-01-28T11:57:15.638+0200 DEBUG last_valueANY value
2023-01-28T11:57:15.638+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-28T11:57:15.638+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T11:57:15.638+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-28T11:57:15.639+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-28T11:57:15.639+0200 DEBUG Double ln(NUMERIC arg)
2023-01-28T11:57:15.639+0200 DEBUG LocalDate local_date
2023-01-28T11:57:15.640+0200 DEBUG LocalDateTime local_datetime
2023-01-28T11:57:15.640+0200 DEBUG LocalTime local_time
2023-01-28T11:57:15.640+0200 DEBUG Timestamp localtime
2023-01-28T11:57:15.640+0200 DEBUG Timestamp localtimestamp
2023-01-28T11:57:15.640+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-28T11:57:15.640+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-28T11:57:15.640+0200 DEBUG Double log10(NUMERIC arg)
2023-01-28T11:57:15.641+0200 DEBUG Double log2(NUMERIC arg)
2023-01-28T11:57:15.641+0200 DEBUG String lower(STRING string)
2023-01-28T11:57:15.641+0200 DEBUG String lpad(string, length[, padding])
2023-01-28T11:57:15.641+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-28T11:57:15.641+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-28T11:57:15.642+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-28T11:57:15.642+0200 DEBUG max(COMPARABLE arg)
2023-01-28T11:57:15.642+0200 DEBUG String md5(arg)
2023-01-28T11:57:15.643+0200 DEBUG Integer microsecond(TIME arg)
2023-01-28T11:57:15.643+0200 DEBUG min(COMPARABLE arg)
2023-01-28T11:57:15.643+0200 DEBUG Integer minute(TIME arg)
2023-01-28T11:57:15.643+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-28T11:57:15.643+0200 DEBUG Integer month(DATE arg)
2023-01-28T11:57:15.644+0200 DEBUG String monthname(DATE arg)
2023-01-28T11:57:15.644+0200 DEBUG Timestamp now()
2023-01-28T11:57:15.644+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-28T11:57:15.644+0200 DEBUG nullif(arg0, arg1)
2023-01-28T11:57:15.644+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-28T11:57:15.644+0200 DEBUG OffsetDateTime offset_datetime
2023-01-28T11:57:15.644+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-28T11:57:15.644+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-28T11:57:15.644+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-28T11:57:15.644+0200 DEBUG Double pi
2023-01-28T11:57:15.644+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-28T11:57:15.644+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-28T11:57:15.644+0200 DEBUG Integer quarter(DATE arg)
2023-01-28T11:57:15.644+0200 DEBUG Double radians(NUMERIC arg)
2023-01-28T11:57:15.644+0200 DEBUG Double rand([INTEGER seed])
2023-01-28T11:57:15.644+0200 DEBUG Long rank([arg0[, ...]])
2023-01-28T11:57:15.644+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-28T11:57:15.644+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-28T11:57:15.644+0200 DEBUG String reverse(STRING arg)
2023-01-28T11:57:15.644+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-28T11:57:15.644+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-28T11:57:15.644+0200 DEBUG Long row_number()
2023-01-28T11:57:15.644+0200 DEBUG String rpad(string, length[, padding])
2023-01-28T11:57:15.645+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-28T11:57:15.645+0200 DEBUG Integer second(TIME arg)
2023-01-28T11:57:15.645+0200 DEBUG String sha(arg)
2023-01-28T11:57:15.645+0200 DEBUG String sha1(arg)
2023-01-28T11:57:15.645+0200 DEBUG String sha2(arg0, arg1)
2023-01-28T11:57:15.645+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-28T11:57:15.645+0200 DEBUG Double sin(NUMERIC arg)
2023-01-28T11:57:15.645+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-28T11:57:15.646+0200 DEBUG String soundex(arg)
2023-01-28T11:57:15.646+0200 DEBUG String space(INTEGER arg)
2023-01-28T11:57:15.646+0200 DEBUG Object sql
2023-01-28T11:57:15.647+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-28T11:57:15.647+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-28T11:57:15.647+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-28T11:57:15.647+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-28T11:57:15.647+0200 DEBUG String str(arg)
2023-01-28T11:57:15.647+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-28T11:57:15.647+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-28T11:57:15.647+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-28T11:57:15.647+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-28T11:57:15.647+0200 DEBUG sum(arg)
2023-01-28T11:57:15.647+0200 DEBUG Timestamp sysdate()
2023-01-28T11:57:15.647+0200 DEBUG Double tan(NUMERIC arg)
2023-01-28T11:57:15.647+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-28T11:57:15.647+0200 DEBUG String time(arg)
2023-01-28T11:57:15.647+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-28T11:57:15.647+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T11:57:15.648+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-28T11:57:15.648+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-28T11:57:15.649+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-28T11:57:15.649+0200 DEBUG String upper(STRING string)
2023-01-28T11:57:15.649+0200 DEBUG Date utc_date
2023-01-28T11:57:15.649+0200 DEBUG Time utc_time
2023-01-28T11:57:15.649+0200 DEBUG Timestamp utc_timestamp
2023-01-28T11:57:15.649+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-28T11:57:15.649+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-28T11:57:15.650+0200 DEBUG Double variance(NUMERIC arg)
2023-01-28T11:57:15.650+0200 DEBUG Integer week(DATE arg)
2023-01-28T11:57:15.650+0200 DEBUG Integer year(DATE arg)
2023-01-28T11:57:15.652+0200 DEBUG Character char(INTEGER arg)
2023-01-28T11:57:15.653+0200 DEBUG Date current date
2023-01-28T11:57:15.653+0200 DEBUG Time current time
2023-01-28T11:57:15.653+0200 DEBUG Timestamp current timestamp
2023-01-28T11:57:15.653+0200 DEBUG Instant current_instant
2023-01-28T11:57:15.653+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T11:57:15.653+0200 DEBUG Integer day(DATE arg)
2023-01-28T11:57:15.653+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-28T11:57:15.653+0200 DEBUG LocalDate local date
2023-01-28T11:57:15.653+0200 DEBUG LocalDateTime local datetime
2023-01-28T11:57:15.653+0200 DEBUG LocalTime local time
2023-01-28T11:57:15.653+0200 DEBUG OffsetDateTime offset datetime
2023-01-28T11:57:15.654+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-28T11:57:15.656+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-28T11:57:15.907+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T11:57:15.907+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T11:57:16.266+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:22)
2023-01-28T11:57:16.328+0200 DEBUG Starting post-init callbacks
2023-01-28T11:57:16.328+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-28T11:57:16.329+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-28T11:57:16.424+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-28T11:57:16.424+0200 DEBUG  Version select: select id from users where id =?
2023-01-28T11:57:16.424+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-28T11:57:16.425+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-28T11:57:16.425+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-28T11:57:16.441+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T11:57:16.446+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T11:57:16.466+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-28T11:57:16.469+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T11:57:16.514+0200 DEBUG Checking 0 named HQL queries
2023-01-28T11:57:16.514+0200 DEBUG Checking 0 named SQL queries
2023-01-28T11:57:16.575+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-28T11:57:16.640+0200 DEBUG No alter strings for table : users
2023-01-28T11:57:16.640+0200 DEBUG No alter strings for table : users_SEQ
2023-01-28T11:57:16.653+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T11:57:16.654+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-28T11:57:16.663+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-28T11:57:16.665+0200 DEBUG Registering SessionFactory: cd158af3-850b-4ccc-b5fb-fc9c64788c80 (<unnamed>)
2023-01-28T11:57:16.665+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-28T11:57:16.764+0200 DEBUG Statistics initialized [enabled=false]
2023-01-28T11:57:16.778+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-28T11:57:16.778+0200 DEBUG begin
2023-01-28T11:57:16.821+0200 DEBUG HQL : from Users
2023-01-28T11:57:16.996+0200 DEBUG Handling root path - Users
2023-01-28T11:57:17.004+0200 DEBUG Encountered implicit select clause : fromUsers
2023-01-28T11:57:17.011+0200 DEBUG SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `edu.itstep.sql.Users(61866704071700)`
            <- [root] - `edu.itstep.sql.Users(61866704071700)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `edu.itstep.sql.Users(61866704071700)`
          <- [root] - `edu.itstep.sql.Users(61866704071700)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-01-28T11:57:17.042+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T11:57:17.043+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users(61866704071700))] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T11:57:17.050+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users(61866704071700)]
 |  +-BasicFetch [edu.itstep.sql.Users(61866704071700).password]
 |  \-BasicFetch [edu.itstep.sql.Users(61866704071700).userName]

2023-01-28T11:57:17.050+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users(61866704071700)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T11:57:17.062+0200 DEBUG Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-01-28T11:57:17.070+0200 DEBUG Initializer list
2023-01-28T11:57:17.071+0200 DEBUG     edu.itstep.sql.Users(61866704071700) -> EntityResultInitializer(edu.itstep.sql.Users(61866704071700))@1659537713 (SingleTableEntityPersister(edu.itstep.sql.Users))
2023-01-28T11:57:17.075+0200 DEBUG 
    select
        u1_0.id,
        u1_0.password,
        u1_0.user_name 
    from
        users u1_0
2023-01-28T11:57:17.081+0200 DEBUG Extracted JDBC value [0] - [352]
2023-01-28T11:57:17.081+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(61866704071700)): 352
2023-01-28T11:57:17.088+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(61866704071700)#352] : Users{id=352, userName='null', password='null'}
2023-01-28T11:57:17.088+0200 DEBUG Extracted JDBC value [1] - [test]
2023-01-28T11:57:17.088+0200 DEBUG Extracted JDBC value [2] - [user104]
2023-01-28T11:57:17.095+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(61866704071700)#352
2023-01-28T11:57:17.095+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@787178b1
2023-01-28T11:57:17.096+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(61866704071700)#352] - using loading instance
2023-01-28T11:57:17.096+0200 DEBUG Extracted JDBC value [0] - [402]
2023-01-28T11:57:17.096+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(61866704071700)): 402
2023-01-28T11:57:17.096+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(61866704071700)#402] : Users{id=402, userName='null', password='null'}
2023-01-28T11:57:17.096+0200 DEBUG Extracted JDBC value [1] - [$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm]
2023-01-28T11:57:17.096+0200 DEBUG Extracted JDBC value [2] - [user105]
2023-01-28T11:57:17.097+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(61866704071700)#402
2023-01-28T11:57:17.097+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@787178b1
2023-01-28T11:57:17.097+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(61866704071700)#402] - using loading instance
2023-01-28T11:57:17.097+0200 DEBUG Extracted JDBC value [0] - [452]
2023-01-28T11:57:17.097+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(61866704071700)): 452
2023-01-28T11:57:17.097+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(61866704071700)#452] : Users{id=452, userName='null', password='null'}
2023-01-28T11:57:17.097+0200 DEBUG Extracted JDBC value [1] - [$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i]
2023-01-28T11:57:17.097+0200 DEBUG Extracted JDBC value [2] - [null]
2023-01-28T11:57:17.097+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(61866704071700)#452
2023-01-28T11:57:17.097+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@787178b1
2023-01-28T11:57:17.097+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(61866704071700)#452] - using loading instance
2023-01-28T11:57:17.100+0200 DEBUG committing
2023-01-28T11:57:17.100+0200 DEBUG Processing flush-time cascades
2023-01-28T11:57:17.103+0200 DEBUG Dirty checking collections
2023-01-28T11:57:17.108+0200 DEBUG Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2023-01-28T11:57:17.109+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-28T11:57:17.109+0200 DEBUG Listing entities:
2023-01-28T11:57:17.110+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i, id=452, userName=null}
2023-01-28T11:57:17.111+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm, id=402, userName=user105}
2023-01-28T11:57:17.111+0200 DEBUG edu.itstep.sql.Users{password=test, id=352, userName=user104}
2023-01-28T11:57:17.116+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T11:57:17.119+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T11:59:33.277+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-28T11:59:33.313+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-28T11:59:33.322+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-28T11:59:33.363+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-28T11:59:33.365+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-28T11:59:33.367+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-28T11:59:33.758+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-28T11:59:33.777+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-28T11:59:34.246+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-28T11:59:34.255+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-28T11:59:34.255+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-28T11:59:34.257+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T11:59:34.257+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T11:59:34.258+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-28T11:59:34.260+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-28T11:59:34.260+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-28T11:59:34.263+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T11:59:34.264+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-28T11:59:34.265+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-28T11:59:34.265+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T11:59:34.266+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-28T11:59:34.278+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-28T11:59:34.280+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-28T11:59:34.578+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:59:34.578+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:59:34.578+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T11:59:34.578+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T11:59:34.579+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T11:59:34.579+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T11:59:34.579+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T11:59:34.579+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T11:59:34.579+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T11:59:34.580+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:59:34.580+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:59:34.580+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T11:59:34.580+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:59:34.581+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:59:34.581+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T11:59:34.581+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:59:34.581+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:59:34.582+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:59:34.582+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T11:59:34.582+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-28T11:59:34.582+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T11:59:34.582+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T11:59:34.582+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-28T11:59:34.583+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-28T11:59:34.583+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:59:34.583+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:59:34.585+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T11:59:34.585+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:59:34.585+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:59:34.586+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T11:59:34.586+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:59:34.586+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:59:34.587+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T11:59:34.588+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:59:34.589+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:59:34.589+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T11:59:34.589+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:59:34.589+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:59:34.589+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T11:59:34.590+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T11:59:34.590+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T11:59:34.590+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T11:59:34.591+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T11:59:34.591+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:59:34.592+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:59:34.593+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T11:59:34.593+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-28T11:59:34.593+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T11:59:34.594+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T11:59:34.594+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-28T11:59:34.594+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:59:34.594+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:59:34.594+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T11:59:34.595+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:59:34.595+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:59:34.595+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T11:59:34.595+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-28T11:59:34.595+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-28T11:59:34.595+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T11:59:34.595+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T11:59:34.596+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T11:59:34.596+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T11:59:34.596+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-28T11:59:34.596+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-28T11:59:34.596+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-28T11:59:34.597+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-28T11:59:34.597+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-28T11:59:34.597+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-28T11:59:34.597+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T11:59:34.597+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T11:59:34.597+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T11:59:34.598+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T11:59:34.598+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T11:59:34.598+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T11:59:34.598+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T11:59:34.598+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T11:59:34.598+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T11:59:34.598+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T11:59:34.598+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-28T11:59:34.599+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-28T11:59:34.599+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T11:59:34.599+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T11:59:34.599+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T11:59:34.599+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T11:59:34.600+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-28T11:59:34.600+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-28T11:59:34.600+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T11:59:34.600+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T11:59:34.600+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T11:59:34.600+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T11:59:34.601+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:59:34.601+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:59:34.601+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T11:59:34.601+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:59:34.601+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:59:34.602+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T11:59:34.602+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-28T11:59:34.602+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-28T11:59:34.602+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T11:59:34.602+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T11:59:34.602+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:59:34.603+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:59:34.603+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T11:59:34.603+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-28T11:59:34.603+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-28T11:59:34.603+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T11:59:34.604+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T11:59:34.604+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:59:34.604+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:59:34.604+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T11:59:34.604+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T11:59:34.604+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T11:59:34.605+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T11:59:34.605+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T11:59:34.605+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T11:59:34.605+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T11:59:34.605+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T11:59:34.605+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T11:59:34.606+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T11:59:34.606+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T11:59:34.606+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-28T11:59:34.615+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T11:59:34.615+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T11:59:34.617+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-28T11:59:34.618+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-28T11:59:34.618+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-28T11:59:34.618+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-28T11:59:34.618+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-28T11:59:34.619+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-28T11:59:34.619+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-28T11:59:34.619+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-28T11:59:34.619+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-28T11:59:34.678+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-28T11:59:34.688+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-28T11:59:34.688+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-28T11:59:34.689+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-28T11:59:34.689+0200 INFO HHH10001003: Autocommit mode: false
2023-01-28T11:59:34.696+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-28T11:59:34.696+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-28T11:59:35.363+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-28T11:59:35.364+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-28T11:59:35.364+0200 DEBUG JDBC version : 4.2
2023-01-28T11:59:35.453+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-28T11:59:35.464+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-28T11:59:35.464+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-28T11:59:35.493+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-28T11:59:35.494+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-28T11:59:35.494+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-28T11:59:35.494+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-28T11:59:35.495+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-28T11:59:35.495+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-28T11:59:35.495+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-28T11:59:35.495+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-28T11:59:35.496+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-28T11:59:35.497+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-28T11:59:35.497+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-28T11:59:35.498+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-28T11:59:35.501+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T11:59:35.502+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T11:59:35.506+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-28T11:59:35.506+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-28T11:59:35.517+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:59:35.517+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:59:35.517+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T11:59:35.518+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:59:35.518+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:59:35.518+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T11:59:35.520+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-28T11:59:35.580+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-28T11:59:35.640+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-28T11:59:35.659+0200 DEBUG Import with entity name Users
2023-01-28T11:59:35.682+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-28T11:59:35.696+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-28T11:59:35.723+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-28T11:59:35.730+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T11:59:35.730+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T11:59:35.733+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-28T11:59:35.740+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-28T11:59:35.750+0200 DEBUG building BasicValue for id
2023-01-28T11:59:35.757+0200 DEBUG Skipping column re-registration: users.id
2023-01-28T11:59:35.758+0200 DEBUG Building property id
2023-01-28T11:59:35.764+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-28T11:59:35.766+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-28T11:59:35.767+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-28T11:59:35.767+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-28T11:59:35.767+0200 DEBUG building BasicValue for password
2023-01-28T11:59:35.767+0200 DEBUG Skipping column re-registration: users.password
2023-01-28T11:59:35.767+0200 DEBUG Building property password
2023-01-28T11:59:35.768+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-28T11:59:35.768+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-28T11:59:35.769+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-28T11:59:35.769+0200 DEBUG building BasicValue for userName
2023-01-28T11:59:35.769+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-28T11:59:35.769+0200 DEBUG Building property userName
2023-01-28T11:59:35.782+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-28T11:59:35.783+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-28T11:59:35.786+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-28T11:59:35.795+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-28T11:59:35.927+0200 DEBUG Building session factory
2023-01-28T11:59:36.041+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T11:59:36.049+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-28T11:59:36.049+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=true, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=true, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-28T11:59:36.067+0200 DEBUG Instantiated session factory
2023-01-28T11:59:36.097+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-28T11:59:36.234+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-28T11:59:36.235+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-28T11:59:36.236+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-28T11:59:36.237+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-28T11:59:36.239+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-28T11:59:36.240+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-28T11:59:36.241+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-28T11:59:36.241+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-28T11:59:36.242+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-28T11:59:36.242+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-28T11:59:36.243+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-28T11:59:36.243+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-28T11:59:36.243+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-28T11:59:36.243+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-28T11:59:36.243+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-28T11:59:36.244+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-28T11:59:36.244+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-28T11:59:36.245+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-28T11:59:36.245+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-28T11:59:36.245+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-28T11:59:36.245+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-28T11:59:36.246+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-28T11:59:36.246+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-28T11:59:36.246+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-28T11:59:36.249+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-28T11:59:36.250+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-28T11:59:36.250+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-28T11:59:36.250+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-28T11:59:36.253+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-28T11:59:36.255+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-28T11:59:36.255+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-28T11:59:36.256+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-28T11:59:36.258+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-28T11:59:36.260+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-28T11:59:36.263+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-28T11:59:36.263+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-28T11:59:36.263+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-28T11:59:36.264+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-28T11:59:36.264+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-28T11:59:36.264+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-28T11:59:36.264+0200 DEBUG Registering alternate key : length -> character_length
2023-01-28T11:59:36.266+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-28T11:59:36.267+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-28T11:59:36.268+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-28T11:59:36.274+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-28T11:59:36.275+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-28T11:59:36.276+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-28T11:59:36.277+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-28T11:59:36.277+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-28T11:59:36.278+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-28T11:59:36.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-28T11:59:36.279+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-28T11:59:36.279+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-28T11:59:36.281+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-28T11:59:36.283+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-28T11:59:36.285+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-28T11:59:36.288+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-28T11:59:36.288+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-28T11:59:36.288+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-28T11:59:36.289+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-28T11:59:36.289+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-28T11:59:36.289+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-28T11:59:36.289+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-28T11:59:36.289+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-28T11:59:36.289+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-28T11:59:36.289+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-28T11:59:36.290+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-28T11:59:36.290+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-28T11:59:36.290+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-28T11:59:36.290+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-28T11:59:36.290+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-28T11:59:36.291+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-28T11:59:36.294+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-28T11:59:36.294+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-28T11:59:36.294+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-28T11:59:36.299+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-28T11:59:36.303+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-28T11:59:36.305+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-28T11:59:36.306+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-28T11:59:36.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-28T11:59:36.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-28T11:59:36.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-28T11:59:36.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-28T11:59:36.307+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-28T11:59:36.308+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-28T11:59:36.318+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-28T11:59:36.318+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-28T11:59:36.318+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-28T11:59:36.322+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-28T11:59:36.324+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-28T11:59:36.324+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-28T11:59:36.325+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-28T11:59:36.326+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-28T11:59:36.326+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-28T11:59:36.326+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-28T11:59:36.327+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-28T11:59:36.327+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-28T11:59:36.327+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-28T11:59:36.327+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-28T11:59:36.327+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-28T11:59:36.327+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-28T11:59:36.328+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-28T11:59:36.328+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-28T11:59:36.328+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-28T11:59:36.328+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-28T11:59:36.328+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-28T11:59:36.328+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-28T11:59:36.328+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-28T11:59:36.328+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-28T11:59:36.329+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-28T11:59:36.329+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-28T11:59:36.329+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-28T11:59:36.329+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-28T11:59:36.330+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-28T11:59:36.330+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-28T11:59:36.330+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-28T11:59:36.330+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-28T11:59:36.330+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-28T11:59:36.330+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-28T11:59:36.330+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-28T11:59:36.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-28T11:59:36.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-28T11:59:36.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-28T11:59:36.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-28T11:59:36.331+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-28T11:59:36.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-28T11:59:36.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-28T11:59:36.331+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-28T11:59:36.335+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-28T11:59:36.335+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-28T11:59:36.335+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-28T11:59:36.335+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-28T11:59:36.336+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-28T11:59:36.336+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-28T11:59:36.338+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-28T11:59:36.338+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-28T11:59:36.339+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-28T11:59:36.339+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-28T11:59:36.339+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-28T11:59:36.339+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-28T11:59:36.339+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-28T11:59:36.339+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-28T11:59:36.340+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-28T11:59:36.340+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-28T11:59:36.340+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-28T11:59:36.340+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-28T11:59:36.340+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-28T11:59:36.340+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-28T11:59:36.341+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-28T11:59:36.341+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-28T11:59:36.341+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-28T11:59:36.341+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-28T11:59:36.341+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-28T11:59:36.341+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-28T11:59:36.342+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-28T11:59:36.342+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-28T11:59:36.343+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-28T11:59:36.344+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-28T11:59:36.344+0200 DEBUG Registering alternate key : char -> chr
2023-01-28T11:59:36.345+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-28T11:59:36.345+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-28T11:59:36.347+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-28T11:59:36.347+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-28T11:59:36.348+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-28T11:59:36.348+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-28T11:59:36.348+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-28T11:59:36.351+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-28T11:59:36.351+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-28T11:59:36.351+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-28T11:59:36.351+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-28T11:59:36.354+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-28T11:59:36.363+0200 DEBUG abs(NUMERIC arg)
2023-01-28T11:59:36.364+0200 DEBUG Double acos(NUMERIC arg)
2023-01-28T11:59:36.364+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-28T11:59:36.364+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-28T11:59:36.364+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-28T11:59:36.364+0200 DEBUG Integer ascii(STRING arg)
2023-01-28T11:59:36.365+0200 DEBUG Double asin(NUMERIC arg)
2023-01-28T11:59:36.365+0200 DEBUG Double atan(NUMERIC arg)
2023-01-28T11:59:36.368+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-28T11:59:36.368+0200 DEBUG Double avg(NUMERIC arg)
2023-01-28T11:59:36.369+0200 DEBUG bit_and(arg)
2023-01-28T11:59:36.369+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-28T11:59:36.369+0200 DEBUG bit_or(arg)
2023-01-28T11:59:36.369+0200 DEBUG bitand(arg0, arg1)
2023-01-28T11:59:36.369+0200 DEBUG bitnot(arg)
2023-01-28T11:59:36.369+0200 DEBUG bitor(arg0, arg1)
2023-01-28T11:59:36.369+0200 DEBUG bitxor(arg0, arg1)
2023-01-28T11:59:36.370+0200 DEBUG cast(arg as Type)
2023-01-28T11:59:36.370+0200 DEBUG ceiling(NUMERIC arg)
2023-01-28T11:59:36.370+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-28T11:59:36.370+0200 DEBUG Character chr(INTEGER arg)
2023-01-28T11:59:36.370+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-28T11:59:36.371+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-28T11:59:36.371+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-28T11:59:36.371+0200 DEBUG Double cos(NUMERIC arg)
2023-01-28T11:59:36.371+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-28T11:59:36.371+0200 DEBUG Double cot(NUMERIC arg)
2023-01-28T11:59:36.371+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-28T11:59:36.371+0200 DEBUG Integer crc32(arg)
2023-01-28T11:59:36.371+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-28T11:59:36.371+0200 DEBUG Date curdate()
2023-01-28T11:59:36.374+0200 DEBUG Date current_date
2023-01-28T11:59:36.374+0200 DEBUG Time current_time
2023-01-28T11:59:36.374+0200 DEBUG Timestamp current_timestamp
2023-01-28T11:59:36.374+0200 DEBUG Time curtime()
2023-01-28T11:59:36.374+0200 DEBUG Date date(arg)
2023-01-28T11:59:36.374+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-28T11:59:36.374+0200 DEBUG Integer day(DATE arg)
2023-01-28T11:59:36.374+0200 DEBUG String dayname(DATE arg)
2023-01-28T11:59:36.374+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-28T11:59:36.374+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-28T11:59:36.375+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-28T11:59:36.375+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-28T11:59:36.375+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-28T11:59:36.375+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-28T11:59:36.375+0200 DEBUG Double exp(NUMERIC arg)
2023-01-28T11:59:36.375+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-28T11:59:36.375+0200 DEBUG first_valueANY value
2023-01-28T11:59:36.375+0200 DEBUG floor(NUMERIC arg)
2023-01-28T11:59:36.375+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-28T11:59:36.375+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T11:59:36.376+0200 DEBUG Integer hour(TIME arg)
2023-01-28T11:59:36.376+0200 DEBUG ifnull(arg0, arg1)
2023-01-28T11:59:36.376+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-28T11:59:36.376+0200 DEBUG Instant instant
2023-01-28T11:59:36.376+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-28T11:59:36.376+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-28T11:59:36.376+0200 DEBUG Date last_day(DATE arg)
2023-01-28T11:59:36.376+0200 DEBUG last_valueANY value
2023-01-28T11:59:36.376+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-28T11:59:36.376+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T11:59:36.376+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-28T11:59:36.376+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-28T11:59:36.376+0200 DEBUG Double ln(NUMERIC arg)
2023-01-28T11:59:36.376+0200 DEBUG LocalDate local_date
2023-01-28T11:59:36.377+0200 DEBUG LocalDateTime local_datetime
2023-01-28T11:59:36.377+0200 DEBUG LocalTime local_time
2023-01-28T11:59:36.377+0200 DEBUG Timestamp localtime
2023-01-28T11:59:36.377+0200 DEBUG Timestamp localtimestamp
2023-01-28T11:59:36.377+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-28T11:59:36.377+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-28T11:59:36.377+0200 DEBUG Double log10(NUMERIC arg)
2023-01-28T11:59:36.377+0200 DEBUG Double log2(NUMERIC arg)
2023-01-28T11:59:36.377+0200 DEBUG String lower(STRING string)
2023-01-28T11:59:36.377+0200 DEBUG String lpad(string, length[, padding])
2023-01-28T11:59:36.378+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-28T11:59:36.378+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-28T11:59:36.378+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-28T11:59:36.378+0200 DEBUG max(COMPARABLE arg)
2023-01-28T11:59:36.378+0200 DEBUG String md5(arg)
2023-01-28T11:59:36.378+0200 DEBUG Integer microsecond(TIME arg)
2023-01-28T11:59:36.378+0200 DEBUG min(COMPARABLE arg)
2023-01-28T11:59:36.378+0200 DEBUG Integer minute(TIME arg)
2023-01-28T11:59:36.378+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-28T11:59:36.378+0200 DEBUG Integer month(DATE arg)
2023-01-28T11:59:36.378+0200 DEBUG String monthname(DATE arg)
2023-01-28T11:59:36.378+0200 DEBUG Timestamp now()
2023-01-28T11:59:36.378+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-28T11:59:36.378+0200 DEBUG nullif(arg0, arg1)
2023-01-28T11:59:36.378+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-28T11:59:36.379+0200 DEBUG OffsetDateTime offset_datetime
2023-01-28T11:59:36.379+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-28T11:59:36.379+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-28T11:59:36.379+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-28T11:59:36.379+0200 DEBUG Double pi
2023-01-28T11:59:36.379+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-28T11:59:36.379+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-28T11:59:36.379+0200 DEBUG Integer quarter(DATE arg)
2023-01-28T11:59:36.379+0200 DEBUG Double radians(NUMERIC arg)
2023-01-28T11:59:36.379+0200 DEBUG Double rand([INTEGER seed])
2023-01-28T11:59:36.379+0200 DEBUG Long rank([arg0[, ...]])
2023-01-28T11:59:36.379+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-28T11:59:36.379+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-28T11:59:36.379+0200 DEBUG String reverse(STRING arg)
2023-01-28T11:59:36.379+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-28T11:59:36.379+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-28T11:59:36.380+0200 DEBUG Long row_number()
2023-01-28T11:59:36.380+0200 DEBUG String rpad(string, length[, padding])
2023-01-28T11:59:36.380+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-28T11:59:36.380+0200 DEBUG Integer second(TIME arg)
2023-01-28T11:59:36.380+0200 DEBUG String sha(arg)
2023-01-28T11:59:36.380+0200 DEBUG String sha1(arg)
2023-01-28T11:59:36.380+0200 DEBUG String sha2(arg0, arg1)
2023-01-28T11:59:36.380+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-28T11:59:36.380+0200 DEBUG Double sin(NUMERIC arg)
2023-01-28T11:59:36.380+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-28T11:59:36.380+0200 DEBUG String soundex(arg)
2023-01-28T11:59:36.381+0200 DEBUG String space(INTEGER arg)
2023-01-28T11:59:36.381+0200 DEBUG Object sql
2023-01-28T11:59:36.381+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-28T11:59:36.381+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-28T11:59:36.381+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-28T11:59:36.381+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-28T11:59:36.381+0200 DEBUG String str(arg)
2023-01-28T11:59:36.381+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-28T11:59:36.381+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-28T11:59:36.381+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-28T11:59:36.381+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-28T11:59:36.382+0200 DEBUG sum(arg)
2023-01-28T11:59:36.382+0200 DEBUG Timestamp sysdate()
2023-01-28T11:59:36.382+0200 DEBUG Double tan(NUMERIC arg)
2023-01-28T11:59:36.383+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-28T11:59:36.383+0200 DEBUG String time(arg)
2023-01-28T11:59:36.383+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-28T11:59:36.383+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T11:59:36.384+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-28T11:59:36.384+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-28T11:59:36.384+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-28T11:59:36.384+0200 DEBUG String upper(STRING string)
2023-01-28T11:59:36.384+0200 DEBUG Date utc_date
2023-01-28T11:59:36.384+0200 DEBUG Time utc_time
2023-01-28T11:59:36.384+0200 DEBUG Timestamp utc_timestamp
2023-01-28T11:59:36.384+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-28T11:59:36.385+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-28T11:59:36.385+0200 DEBUG Double variance(NUMERIC arg)
2023-01-28T11:59:36.385+0200 DEBUG Integer week(DATE arg)
2023-01-28T11:59:36.385+0200 DEBUG Integer year(DATE arg)
2023-01-28T11:59:36.387+0200 DEBUG Character char(INTEGER arg)
2023-01-28T11:59:36.388+0200 DEBUG Date current date
2023-01-28T11:59:36.388+0200 DEBUG Time current time
2023-01-28T11:59:36.388+0200 DEBUG Timestamp current timestamp
2023-01-28T11:59:36.388+0200 DEBUG Instant current_instant
2023-01-28T11:59:36.389+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T11:59:36.389+0200 DEBUG Integer day(DATE arg)
2023-01-28T11:59:36.389+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-28T11:59:36.389+0200 DEBUG LocalDate local date
2023-01-28T11:59:36.389+0200 DEBUG LocalDateTime local datetime
2023-01-28T11:59:36.389+0200 DEBUG LocalTime local time
2023-01-28T11:59:36.389+0200 DEBUG OffsetDateTime offset datetime
2023-01-28T11:59:36.389+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-28T11:59:36.391+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-28T11:59:36.628+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T11:59:36.629+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T11:59:36.942+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:24)
2023-01-28T11:59:37.022+0200 DEBUG Starting post-init callbacks
2023-01-28T11:59:37.022+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-28T11:59:37.023+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-28T11:59:37.143+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-28T11:59:37.144+0200 DEBUG  Version select: select id from users where id =?
2023-01-28T11:59:37.145+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-28T11:59:37.146+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-28T11:59:37.146+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-28T11:59:37.204+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T11:59:37.210+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T11:59:37.251+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-28T11:59:37.265+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T11:59:37.335+0200 DEBUG Checking 0 named HQL queries
2023-01-28T11:59:37.335+0200 DEBUG Checking 0 named SQL queries
2023-01-28T11:59:37.396+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-28T11:59:37.465+0200 DEBUG No alter strings for table : users
2023-01-28T11:59:37.465+0200 DEBUG No alter strings for table : users_SEQ
2023-01-28T11:59:37.520+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T11:59:37.521+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-28T11:59:37.540+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-28T11:59:37.542+0200 DEBUG Registering SessionFactory: 15dba166-2f66-4597-8610-2401968d1c41 (<unnamed>)
2023-01-28T11:59:37.542+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-28T11:59:37.642+0200 DEBUG Statistics initialized [enabled=false]
2023-01-28T11:59:37.651+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-28T11:59:37.651+0200 DEBUG begin
2023-01-28T11:59:37.694+0200 DEBUG HQL : from Users
2023-01-28T11:59:37.943+0200 DEBUG Handling root path - Users
2023-01-28T11:59:37.954+0200 DEBUG Encountered implicit select clause : fromUsers
2023-01-28T11:59:37.964+0200 DEBUG SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `edu.itstep.sql.Users(62007653271000)`
            <- [root] - `edu.itstep.sql.Users(62007653271000)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `edu.itstep.sql.Users(62007653271000)`
          <- [root] - `edu.itstep.sql.Users(62007653271000)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-01-28T11:59:38.001+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T11:59:38.002+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users(62007653271000))] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T11:59:38.009+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users(62007653271000)]
 |  +-BasicFetch [edu.itstep.sql.Users(62007653271000).password]
 |  \-BasicFetch [edu.itstep.sql.Users(62007653271000).userName]

2023-01-28T11:59:38.009+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users(62007653271000)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T11:59:38.021+0200 DEBUG Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-01-28T11:59:38.030+0200 DEBUG Initializer list
2023-01-28T11:59:38.031+0200 DEBUG     edu.itstep.sql.Users(62007653271000) -> EntityResultInitializer(edu.itstep.sql.Users(62007653271000))@1659537713 (SingleTableEntityPersister(edu.itstep.sql.Users))
2023-01-28T11:59:38.035+0200 DEBUG 
    select
        u1_0.id,
        u1_0.password,
        u1_0.user_name 
    from
        users u1_0
2023-01-28T11:59:38.043+0200 DEBUG Extracted JDBC value [0] - [352]
2023-01-28T11:59:38.043+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(62007653271000)): 352
2023-01-28T11:59:38.054+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(62007653271000)#352] : Users{id=352, userName='null', password='null'}
2023-01-28T11:59:38.055+0200 DEBUG Extracted JDBC value [1] - [test]
2023-01-28T11:59:38.055+0200 DEBUG Extracted JDBC value [2] - [user104]
2023-01-28T11:59:38.062+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(62007653271000)#352
2023-01-28T11:59:38.063+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@787178b1
2023-01-28T11:59:38.063+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(62007653271000)#352] - using loading instance
2023-01-28T11:59:38.063+0200 DEBUG Extracted JDBC value [0] - [402]
2023-01-28T11:59:38.063+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(62007653271000)): 402
2023-01-28T11:59:38.064+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(62007653271000)#402] : Users{id=402, userName='null', password='null'}
2023-01-28T11:59:38.064+0200 DEBUG Extracted JDBC value [1] - [$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm]
2023-01-28T11:59:38.064+0200 DEBUG Extracted JDBC value [2] - [user105]
2023-01-28T11:59:38.064+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(62007653271000)#402
2023-01-28T11:59:38.064+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@787178b1
2023-01-28T11:59:38.064+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(62007653271000)#402] - using loading instance
2023-01-28T11:59:38.064+0200 DEBUG Extracted JDBC value [0] - [452]
2023-01-28T11:59:38.064+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(62007653271000)): 452
2023-01-28T11:59:38.064+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(62007653271000)#452] : Users{id=452, userName='null', password='null'}
2023-01-28T11:59:38.064+0200 DEBUG Extracted JDBC value [1] - [$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i]
2023-01-28T11:59:38.064+0200 DEBUG Extracted JDBC value [2] - [null]
2023-01-28T11:59:38.064+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(62007653271000)#452
2023-01-28T11:59:38.064+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@787178b1
2023-01-28T11:59:38.065+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(62007653271000)#452] - using loading instance
2023-01-28T11:59:38.068+0200 DEBUG committing
2023-01-28T11:59:38.069+0200 DEBUG Processing flush-time cascades
2023-01-28T11:59:38.072+0200 DEBUG Dirty checking collections
2023-01-28T11:59:38.081+0200 DEBUG Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2023-01-28T11:59:38.081+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-28T11:59:38.082+0200 DEBUG Listing entities:
2023-01-28T11:59:38.083+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i, id=452, userName=null}
2023-01-28T11:59:38.083+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm, id=402, userName=user105}
2023-01-28T11:59:38.083+0200 DEBUG edu.itstep.sql.Users{password=test, id=352, userName=user104}
2023-01-28T11:59:38.087+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T11:59:38.090+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T12:01:20.738+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-28T12:01:20.773+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-28T12:01:20.787+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-28T12:01:20.855+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-28T12:01:20.860+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-28T12:01:20.863+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-28T12:01:21.314+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-28T12:01:21.329+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-28T12:01:21.759+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-28T12:01:21.769+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-28T12:01:21.770+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-28T12:01:21.772+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T12:01:21.773+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T12:01:21.774+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-28T12:01:21.776+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-28T12:01:21.776+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-28T12:01:21.780+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T12:01:21.781+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-28T12:01:21.782+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-28T12:01:21.783+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T12:01:21.784+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-28T12:01:21.796+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-28T12:01:21.797+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-28T12:01:22.085+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T12:01:22.085+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T12:01:22.086+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T12:01:22.086+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T12:01:22.086+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T12:01:22.087+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T12:01:22.087+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T12:01:22.087+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T12:01:22.087+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T12:01:22.088+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T12:01:22.088+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T12:01:22.088+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T12:01:22.088+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T12:01:22.088+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T12:01:22.088+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T12:01:22.089+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T12:01:22.089+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T12:01:22.089+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T12:01:22.089+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T12:01:22.089+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-28T12:01:22.090+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T12:01:22.090+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T12:01:22.090+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-28T12:01:22.090+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-28T12:01:22.090+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T12:01:22.090+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T12:01:22.091+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T12:01:22.091+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T12:01:22.091+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T12:01:22.092+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T12:01:22.092+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T12:01:22.092+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T12:01:22.093+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T12:01:22.093+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T12:01:22.093+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T12:01:22.093+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T12:01:22.093+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T12:01:22.094+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T12:01:22.094+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T12:01:22.094+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T12:01:22.094+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T12:01:22.094+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T12:01:22.095+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T12:01:22.095+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T12:01:22.095+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T12:01:22.095+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T12:01:22.095+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-28T12:01:22.095+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T12:01:22.096+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T12:01:22.096+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-28T12:01:22.096+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T12:01:22.096+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T12:01:22.096+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T12:01:22.097+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T12:01:22.097+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T12:01:22.097+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T12:01:22.097+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-28T12:01:22.097+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-28T12:01:22.097+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T12:01:22.098+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T12:01:22.098+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T12:01:22.098+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T12:01:22.098+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-28T12:01:22.099+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-28T12:01:22.099+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-28T12:01:22.099+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-28T12:01:22.099+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-28T12:01:22.099+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-28T12:01:22.100+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T12:01:22.100+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T12:01:22.100+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T12:01:22.100+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T12:01:22.100+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T12:01:22.100+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T12:01:22.101+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T12:01:22.101+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T12:01:22.101+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T12:01:22.101+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T12:01:22.101+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-28T12:01:22.102+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-28T12:01:22.102+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T12:01:22.102+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T12:01:22.102+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T12:01:22.102+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T12:01:22.103+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-28T12:01:22.103+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-28T12:01:22.103+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T12:01:22.103+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T12:01:22.103+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T12:01:22.103+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T12:01:22.104+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T12:01:22.104+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T12:01:22.104+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T12:01:22.104+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T12:01:22.104+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T12:01:22.104+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T12:01:22.105+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-28T12:01:22.105+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-28T12:01:22.105+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T12:01:22.105+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T12:01:22.105+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T12:01:22.105+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T12:01:22.106+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T12:01:22.106+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-28T12:01:22.106+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-28T12:01:22.106+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T12:01:22.106+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T12:01:22.106+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T12:01:22.107+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T12:01:22.107+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T12:01:22.107+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T12:01:22.107+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T12:01:22.107+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T12:01:22.107+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T12:01:22.108+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T12:01:22.108+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T12:01:22.108+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T12:01:22.108+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T12:01:22.108+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T12:01:22.108+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T12:01:22.108+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-28T12:01:22.117+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T12:01:22.118+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T12:01:22.120+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-28T12:01:22.120+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-28T12:01:22.120+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-28T12:01:22.120+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-28T12:01:22.121+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-28T12:01:22.121+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-28T12:01:22.121+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-28T12:01:22.121+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-28T12:01:22.122+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-28T12:01:22.184+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-28T12:01:22.195+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-28T12:01:22.195+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-28T12:01:22.196+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-28T12:01:22.196+0200 INFO HHH10001003: Autocommit mode: false
2023-01-28T12:01:22.201+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-28T12:01:22.201+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-28T12:01:22.896+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-28T12:01:22.896+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-28T12:01:22.896+0200 DEBUG JDBC version : 4.2
2023-01-28T12:01:22.975+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-28T12:01:22.986+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-28T12:01:22.986+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-28T12:01:23.015+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-28T12:01:23.015+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-28T12:01:23.015+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-28T12:01:23.016+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-28T12:01:23.016+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-28T12:01:23.016+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-28T12:01:23.016+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-28T12:01:23.016+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-28T12:01:23.017+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-28T12:01:23.018+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-28T12:01:23.019+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-28T12:01:23.019+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-28T12:01:23.023+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T12:01:23.023+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T12:01:23.028+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-28T12:01:23.028+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-28T12:01:23.038+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T12:01:23.038+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T12:01:23.039+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T12:01:23.039+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T12:01:23.039+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T12:01:23.039+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T12:01:23.041+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-28T12:01:23.090+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-28T12:01:23.143+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-28T12:01:23.160+0200 DEBUG Import with entity name Users
2023-01-28T12:01:23.177+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-28T12:01:23.193+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-28T12:01:23.220+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-28T12:01:23.224+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T12:01:23.225+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T12:01:23.226+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-28T12:01:23.235+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-28T12:01:23.244+0200 DEBUG building BasicValue for id
2023-01-28T12:01:23.249+0200 DEBUG Skipping column re-registration: users.id
2023-01-28T12:01:23.250+0200 DEBUG Building property id
2023-01-28T12:01:23.256+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-28T12:01:23.258+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-28T12:01:23.258+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-28T12:01:23.259+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-28T12:01:23.259+0200 DEBUG building BasicValue for password
2023-01-28T12:01:23.259+0200 DEBUG Skipping column re-registration: users.password
2023-01-28T12:01:23.259+0200 DEBUG Building property password
2023-01-28T12:01:23.260+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-28T12:01:23.260+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-28T12:01:23.260+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-28T12:01:23.260+0200 DEBUG building BasicValue for userName
2023-01-28T12:01:23.260+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-28T12:01:23.260+0200 DEBUG Building property userName
2023-01-28T12:01:23.270+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-28T12:01:23.270+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-28T12:01:23.273+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-28T12:01:23.278+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-28T12:01:23.364+0200 DEBUG Building session factory
2023-01-28T12:01:23.485+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T12:01:23.493+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-28T12:01:23.493+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, hibernate.use_sql_comments=false, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=false, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, use_sql_comments=false, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-28T12:01:23.503+0200 DEBUG Instantiated session factory
2023-01-28T12:01:23.525+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-28T12:01:23.687+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-28T12:01:23.687+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-28T12:01:23.689+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-28T12:01:23.690+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-28T12:01:23.694+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-28T12:01:23.696+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-28T12:01:23.696+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-28T12:01:23.696+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-28T12:01:23.697+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-28T12:01:23.697+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-28T12:01:23.697+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-28T12:01:23.697+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-28T12:01:23.697+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-28T12:01:23.697+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-28T12:01:23.698+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-28T12:01:23.698+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-28T12:01:23.699+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-28T12:01:23.699+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-28T12:01:23.699+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-28T12:01:23.699+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-28T12:01:23.699+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-28T12:01:23.699+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-28T12:01:23.699+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-28T12:01:23.699+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-28T12:01:23.702+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-28T12:01:23.702+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-28T12:01:23.703+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-28T12:01:23.703+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-28T12:01:23.703+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-28T12:01:23.704+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-28T12:01:23.704+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-28T12:01:23.704+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-28T12:01:23.705+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-28T12:01:23.705+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-28T12:01:23.706+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-28T12:01:23.706+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-28T12:01:23.706+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-28T12:01:23.706+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-28T12:01:23.706+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-28T12:01:23.707+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-28T12:01:23.707+0200 DEBUG Registering alternate key : length -> character_length
2023-01-28T12:01:23.708+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-28T12:01:23.710+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-28T12:01:23.711+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-28T12:01:23.713+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-28T12:01:23.714+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-28T12:01:23.715+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-28T12:01:23.716+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-28T12:01:23.716+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-28T12:01:23.717+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-28T12:01:23.717+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-28T12:01:23.717+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-28T12:01:23.718+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-28T12:01:23.718+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-28T12:01:23.720+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-28T12:01:23.721+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-28T12:01:23.722+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-28T12:01:23.723+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-28T12:01:23.723+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-28T12:01:23.723+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-28T12:01:23.724+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-28T12:01:23.724+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-28T12:01:23.724+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-28T12:01:23.724+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-28T12:01:23.724+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-28T12:01:23.724+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-28T12:01:23.724+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-28T12:01:23.724+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-28T12:01:23.724+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-28T12:01:23.724+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-28T12:01:23.724+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-28T12:01:23.724+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-28T12:01:23.725+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-28T12:01:23.725+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-28T12:01:23.725+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-28T12:01:23.725+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-28T12:01:23.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-28T12:01:23.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-28T12:01:23.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-28T12:01:23.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-28T12:01:23.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-28T12:01:23.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-28T12:01:23.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-28T12:01:23.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-28T12:01:23.726+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-28T12:01:23.727+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-28T12:01:23.727+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-28T12:01:23.727+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-28T12:01:23.727+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-28T12:01:23.728+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-28T12:01:23.728+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-28T12:01:23.728+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-28T12:01:23.728+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-28T12:01:23.728+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-28T12:01:23.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-28T12:01:23.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-28T12:01:23.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-28T12:01:23.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-28T12:01:23.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-28T12:01:23.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-28T12:01:23.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-28T12:01:23.729+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-28T12:01:23.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-28T12:01:23.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-28T12:01:23.729+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-28T12:01:23.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-28T12:01:23.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-28T12:01:23.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-28T12:01:23.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-28T12:01:23.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-28T12:01:23.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-28T12:01:23.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-28T12:01:23.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-28T12:01:23.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-28T12:01:23.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-28T12:01:23.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-28T12:01:23.730+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-28T12:01:23.731+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-28T12:01:23.731+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-28T12:01:23.731+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-28T12:01:23.731+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-28T12:01:23.733+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-28T12:01:23.733+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-28T12:01:23.733+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-28T12:01:23.733+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-28T12:01:23.734+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-28T12:01:23.734+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-28T12:01:23.734+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-28T12:01:23.734+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-28T12:01:23.734+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-28T12:01:23.734+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-28T12:01:23.734+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-28T12:01:23.734+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-28T12:01:23.734+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-28T12:01:23.735+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-28T12:01:23.735+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-28T12:01:23.735+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-28T12:01:23.735+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-28T12:01:23.735+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-28T12:01:23.735+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-28T12:01:23.735+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-28T12:01:23.735+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-28T12:01:23.735+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-28T12:01:23.735+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-28T12:01:23.736+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-28T12:01:23.736+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-28T12:01:23.736+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-28T12:01:23.736+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-28T12:01:23.736+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-28T12:01:23.736+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-28T12:01:23.736+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-28T12:01:23.736+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-28T12:01:23.736+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-28T12:01:23.736+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-28T12:01:23.737+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-28T12:01:23.737+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-28T12:01:23.737+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-28T12:01:23.737+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-28T12:01:23.737+0200 DEBUG Registering alternate key : char -> chr
2023-01-28T12:01:23.737+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-28T12:01:23.737+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-28T12:01:23.738+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-28T12:01:23.739+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-28T12:01:23.739+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-28T12:01:23.739+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-28T12:01:23.739+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-28T12:01:23.741+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-28T12:01:23.742+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-28T12:01:23.742+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-28T12:01:23.742+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-28T12:01:23.743+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-28T12:01:23.750+0200 DEBUG abs(NUMERIC arg)
2023-01-28T12:01:23.750+0200 DEBUG Double acos(NUMERIC arg)
2023-01-28T12:01:23.750+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-28T12:01:23.750+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-28T12:01:23.750+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-28T12:01:23.750+0200 DEBUG Integer ascii(STRING arg)
2023-01-28T12:01:23.750+0200 DEBUG Double asin(NUMERIC arg)
2023-01-28T12:01:23.750+0200 DEBUG Double atan(NUMERIC arg)
2023-01-28T12:01:23.755+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-28T12:01:23.755+0200 DEBUG Double avg(NUMERIC arg)
2023-01-28T12:01:23.755+0200 DEBUG bit_and(arg)
2023-01-28T12:01:23.755+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-28T12:01:23.755+0200 DEBUG bit_or(arg)
2023-01-28T12:01:23.755+0200 DEBUG bitand(arg0, arg1)
2023-01-28T12:01:23.756+0200 DEBUG bitnot(arg)
2023-01-28T12:01:23.756+0200 DEBUG bitor(arg0, arg1)
2023-01-28T12:01:23.756+0200 DEBUG bitxor(arg0, arg1)
2023-01-28T12:01:23.756+0200 DEBUG cast(arg as Type)
2023-01-28T12:01:23.756+0200 DEBUG ceiling(NUMERIC arg)
2023-01-28T12:01:23.756+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-28T12:01:23.756+0200 DEBUG Character chr(INTEGER arg)
2023-01-28T12:01:23.756+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-28T12:01:23.756+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-28T12:01:23.756+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-28T12:01:23.756+0200 DEBUG Double cos(NUMERIC arg)
2023-01-28T12:01:23.756+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-28T12:01:23.756+0200 DEBUG Double cot(NUMERIC arg)
2023-01-28T12:01:23.756+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-28T12:01:23.756+0200 DEBUG Integer crc32(arg)
2023-01-28T12:01:23.757+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-28T12:01:23.757+0200 DEBUG Date curdate()
2023-01-28T12:01:23.757+0200 DEBUG Date current_date
2023-01-28T12:01:23.757+0200 DEBUG Time current_time
2023-01-28T12:01:23.757+0200 DEBUG Timestamp current_timestamp
2023-01-28T12:01:23.757+0200 DEBUG Time curtime()
2023-01-28T12:01:23.757+0200 DEBUG Date date(arg)
2023-01-28T12:01:23.757+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-28T12:01:23.757+0200 DEBUG Integer day(DATE arg)
2023-01-28T12:01:23.757+0200 DEBUG String dayname(DATE arg)
2023-01-28T12:01:23.757+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-28T12:01:23.757+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-28T12:01:23.757+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-28T12:01:23.757+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-28T12:01:23.758+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-28T12:01:23.758+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-28T12:01:23.758+0200 DEBUG Double exp(NUMERIC arg)
2023-01-28T12:01:23.758+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-28T12:01:23.758+0200 DEBUG first_valueANY value
2023-01-28T12:01:23.758+0200 DEBUG floor(NUMERIC arg)
2023-01-28T12:01:23.758+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-28T12:01:23.758+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T12:01:23.758+0200 DEBUG Integer hour(TIME arg)
2023-01-28T12:01:23.758+0200 DEBUG ifnull(arg0, arg1)
2023-01-28T12:01:23.758+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-28T12:01:23.758+0200 DEBUG Instant instant
2023-01-28T12:01:23.759+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-28T12:01:23.759+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-28T12:01:23.759+0200 DEBUG Date last_day(DATE arg)
2023-01-28T12:01:23.759+0200 DEBUG last_valueANY value
2023-01-28T12:01:23.759+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-28T12:01:23.759+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T12:01:23.759+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-28T12:01:23.759+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-28T12:01:23.759+0200 DEBUG Double ln(NUMERIC arg)
2023-01-28T12:01:23.759+0200 DEBUG LocalDate local_date
2023-01-28T12:01:23.759+0200 DEBUG LocalDateTime local_datetime
2023-01-28T12:01:23.759+0200 DEBUG LocalTime local_time
2023-01-28T12:01:23.759+0200 DEBUG Timestamp localtime
2023-01-28T12:01:23.759+0200 DEBUG Timestamp localtimestamp
2023-01-28T12:01:23.759+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-28T12:01:23.760+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-28T12:01:23.760+0200 DEBUG Double log10(NUMERIC arg)
2023-01-28T12:01:23.760+0200 DEBUG Double log2(NUMERIC arg)
2023-01-28T12:01:23.760+0200 DEBUG String lower(STRING string)
2023-01-28T12:01:23.760+0200 DEBUG String lpad(string, length[, padding])
2023-01-28T12:01:23.760+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-28T12:01:23.760+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-28T12:01:23.760+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-28T12:01:23.760+0200 DEBUG max(COMPARABLE arg)
2023-01-28T12:01:23.760+0200 DEBUG String md5(arg)
2023-01-28T12:01:23.760+0200 DEBUG Integer microsecond(TIME arg)
2023-01-28T12:01:23.760+0200 DEBUG min(COMPARABLE arg)
2023-01-28T12:01:23.761+0200 DEBUG Integer minute(TIME arg)
2023-01-28T12:01:23.761+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-28T12:01:23.761+0200 DEBUG Integer month(DATE arg)
2023-01-28T12:01:23.761+0200 DEBUG String monthname(DATE arg)
2023-01-28T12:01:23.761+0200 DEBUG Timestamp now()
2023-01-28T12:01:23.761+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-28T12:01:23.761+0200 DEBUG nullif(arg0, arg1)
2023-01-28T12:01:23.761+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-28T12:01:23.761+0200 DEBUG OffsetDateTime offset_datetime
2023-01-28T12:01:23.761+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-28T12:01:23.762+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-28T12:01:23.762+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-28T12:01:23.762+0200 DEBUG Double pi
2023-01-28T12:01:23.762+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-28T12:01:23.762+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-28T12:01:23.762+0200 DEBUG Integer quarter(DATE arg)
2023-01-28T12:01:23.762+0200 DEBUG Double radians(NUMERIC arg)
2023-01-28T12:01:23.762+0200 DEBUG Double rand([INTEGER seed])
2023-01-28T12:01:23.762+0200 DEBUG Long rank([arg0[, ...]])
2023-01-28T12:01:23.762+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-28T12:01:23.762+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-28T12:01:23.762+0200 DEBUG String reverse(STRING arg)
2023-01-28T12:01:23.762+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-28T12:01:23.762+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-28T12:01:23.762+0200 DEBUG Long row_number()
2023-01-28T12:01:23.762+0200 DEBUG String rpad(string, length[, padding])
2023-01-28T12:01:23.763+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-28T12:01:23.763+0200 DEBUG Integer second(TIME arg)
2023-01-28T12:01:23.763+0200 DEBUG String sha(arg)
2023-01-28T12:01:23.763+0200 DEBUG String sha1(arg)
2023-01-28T12:01:23.763+0200 DEBUG String sha2(arg0, arg1)
2023-01-28T12:01:23.763+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-28T12:01:23.763+0200 DEBUG Double sin(NUMERIC arg)
2023-01-28T12:01:23.763+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-28T12:01:23.763+0200 DEBUG String soundex(arg)
2023-01-28T12:01:23.763+0200 DEBUG String space(INTEGER arg)
2023-01-28T12:01:23.763+0200 DEBUG Object sql
2023-01-28T12:01:23.763+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-28T12:01:23.763+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-28T12:01:23.764+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-28T12:01:23.764+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-28T12:01:23.764+0200 DEBUG String str(arg)
2023-01-28T12:01:23.764+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-28T12:01:23.764+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-28T12:01:23.764+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-28T12:01:23.764+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-28T12:01:23.764+0200 DEBUG sum(arg)
2023-01-28T12:01:23.764+0200 DEBUG Timestamp sysdate()
2023-01-28T12:01:23.764+0200 DEBUG Double tan(NUMERIC arg)
2023-01-28T12:01:23.764+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-28T12:01:23.764+0200 DEBUG String time(arg)
2023-01-28T12:01:23.765+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-28T12:01:23.765+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T12:01:23.765+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-28T12:01:23.765+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-28T12:01:23.765+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-28T12:01:23.766+0200 DEBUG String upper(STRING string)
2023-01-28T12:01:23.766+0200 DEBUG Date utc_date
2023-01-28T12:01:23.766+0200 DEBUG Time utc_time
2023-01-28T12:01:23.766+0200 DEBUG Timestamp utc_timestamp
2023-01-28T12:01:23.766+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-28T12:01:23.766+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-28T12:01:23.766+0200 DEBUG Double variance(NUMERIC arg)
2023-01-28T12:01:23.766+0200 DEBUG Integer week(DATE arg)
2023-01-28T12:01:23.766+0200 DEBUG Integer year(DATE arg)
2023-01-28T12:01:23.768+0200 DEBUG Character char(INTEGER arg)
2023-01-28T12:01:23.768+0200 DEBUG Date current date
2023-01-28T12:01:23.768+0200 DEBUG Time current time
2023-01-28T12:01:23.768+0200 DEBUG Timestamp current timestamp
2023-01-28T12:01:23.768+0200 DEBUG Instant current_instant
2023-01-28T12:01:23.768+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T12:01:23.768+0200 DEBUG Integer day(DATE arg)
2023-01-28T12:01:23.768+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-28T12:01:23.768+0200 DEBUG LocalDate local date
2023-01-28T12:01:23.768+0200 DEBUG LocalDateTime local datetime
2023-01-28T12:01:23.768+0200 DEBUG LocalTime local time
2023-01-28T12:01:23.768+0200 DEBUG OffsetDateTime offset datetime
2023-01-28T12:01:23.768+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-28T12:01:23.770+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-28T12:01:23.943+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T12:01:23.943+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T12:01:24.320+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:25)
2023-01-28T12:01:24.383+0200 DEBUG Starting post-init callbacks
2023-01-28T12:01:24.383+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-28T12:01:24.384+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-28T12:01:24.487+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-28T12:01:24.487+0200 DEBUG  Version select: select id from users where id =?
2023-01-28T12:01:24.488+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-28T12:01:24.488+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-28T12:01:24.489+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-28T12:01:24.504+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T12:01:24.509+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T12:01:24.538+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-28T12:01:24.544+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T12:01:24.610+0200 DEBUG Checking 0 named HQL queries
2023-01-28T12:01:24.614+0200 DEBUG Checking 0 named SQL queries
2023-01-28T12:01:24.669+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-28T12:01:24.719+0200 DEBUG No alter strings for table : users
2023-01-28T12:01:24.720+0200 DEBUG No alter strings for table : users_SEQ
2023-01-28T12:01:24.738+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T12:01:24.738+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-28T12:01:24.759+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-28T12:01:24.761+0200 DEBUG Registering SessionFactory: 21919b9f-b923-4309-91a6-a2318e4bfc6c (<unnamed>)
2023-01-28T12:01:24.762+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-28T12:01:24.868+0200 DEBUG Statistics initialized [enabled=false]
2023-01-28T12:01:24.876+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-28T12:01:24.876+0200 DEBUG begin
2023-01-28T12:01:24.918+0200 DEBUG HQL : from Users
2023-01-28T12:01:25.138+0200 DEBUG Handling root path - Users
2023-01-28T12:01:25.144+0200 DEBUG Encountered implicit select clause : fromUsers
2023-01-28T12:01:25.151+0200 DEBUG SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `edu.itstep.sql.Users(62114843931600)`
            <- [root] - `edu.itstep.sql.Users(62114843931600)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `edu.itstep.sql.Users(62114843931600)`
          <- [root] - `edu.itstep.sql.Users(62114843931600)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-01-28T12:01:25.180+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T12:01:25.180+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users(62114843931600))] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T12:01:25.187+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users(62114843931600)]
 |  +-BasicFetch [edu.itstep.sql.Users(62114843931600).password]
 |  \-BasicFetch [edu.itstep.sql.Users(62114843931600).userName]

2023-01-28T12:01:25.187+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users(62114843931600)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T12:01:25.198+0200 DEBUG Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-01-28T12:01:25.207+0200 DEBUG Initializer list
2023-01-28T12:01:25.208+0200 DEBUG     edu.itstep.sql.Users(62114843931600) -> EntityResultInitializer(edu.itstep.sql.Users(62114843931600))@1659537713 (SingleTableEntityPersister(edu.itstep.sql.Users))
2023-01-28T12:01:25.210+0200 DEBUG select u1_0.id,u1_0.password,u1_0.user_name from users u1_0
2023-01-28T12:01:25.217+0200 DEBUG Extracted JDBC value [0] - [352]
2023-01-28T12:01:25.217+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(62114843931600)): 352
2023-01-28T12:01:25.223+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(62114843931600)#352] : Users{id=352, userName='null', password='null'}
2023-01-28T12:01:25.224+0200 DEBUG Extracted JDBC value [1] - [test]
2023-01-28T12:01:25.224+0200 DEBUG Extracted JDBC value [2] - [user104]
2023-01-28T12:01:25.228+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(62114843931600)#352
2023-01-28T12:01:25.228+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-01-28T12:01:25.228+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(62114843931600)#352] - using loading instance
2023-01-28T12:01:25.229+0200 DEBUG Extracted JDBC value [0] - [402]
2023-01-28T12:01:25.229+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(62114843931600)): 402
2023-01-28T12:01:25.229+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(62114843931600)#402] : Users{id=402, userName='null', password='null'}
2023-01-28T12:01:25.229+0200 DEBUG Extracted JDBC value [1] - [$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm]
2023-01-28T12:01:25.229+0200 DEBUG Extracted JDBC value [2] - [user105]
2023-01-28T12:01:25.229+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(62114843931600)#402
2023-01-28T12:01:25.229+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-01-28T12:01:25.229+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(62114843931600)#402] - using loading instance
2023-01-28T12:01:25.229+0200 DEBUG Extracted JDBC value [0] - [452]
2023-01-28T12:01:25.229+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(62114843931600)): 452
2023-01-28T12:01:25.230+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(62114843931600)#452] : Users{id=452, userName='null', password='null'}
2023-01-28T12:01:25.230+0200 DEBUG Extracted JDBC value [1] - [$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i]
2023-01-28T12:01:25.230+0200 DEBUG Extracted JDBC value [2] - [null]
2023-01-28T12:01:25.230+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(62114843931600)#452
2023-01-28T12:01:25.230+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-01-28T12:01:25.230+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(62114843931600)#452] - using loading instance
2023-01-28T12:01:25.234+0200 DEBUG committing
2023-01-28T12:01:25.234+0200 DEBUG Processing flush-time cascades
2023-01-28T12:01:25.236+0200 DEBUG Dirty checking collections
2023-01-28T12:01:25.240+0200 DEBUG Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2023-01-28T12:01:25.240+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-28T12:01:25.241+0200 DEBUG Listing entities:
2023-01-28T12:01:25.242+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i, id=452, userName=null}
2023-01-28T12:01:25.242+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm, id=402, userName=user105}
2023-01-28T12:01:25.242+0200 DEBUG edu.itstep.sql.Users{password=test, id=352, userName=user104}
2023-01-28T12:01:25.245+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T12:01:25.246+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T12:01:52.651+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-28T12:01:52.700+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-28T12:01:52.709+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-28T12:01:52.755+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-28T12:01:52.758+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-28T12:01:52.761+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-28T12:01:53.170+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-28T12:01:53.184+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-28T12:01:53.630+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-28T12:01:53.645+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-28T12:01:53.646+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-28T12:01:53.648+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T12:01:53.648+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-28T12:01:53.649+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-28T12:01:53.654+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-28T12:01:53.655+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-28T12:01:53.657+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T12:01:53.660+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-28T12:01:53.661+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-28T12:01:53.662+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-28T12:01:53.664+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-28T12:01:53.678+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-28T12:01:53.679+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-28T12:01:53.971+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T12:01:53.972+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T12:01:53.973+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-28T12:01:53.973+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T12:01:53.974+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-28T12:01:53.974+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T12:01:53.974+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-28T12:01:53.974+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T12:01:53.975+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-28T12:01:53.975+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T12:01:53.975+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T12:01:53.975+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-28T12:01:53.976+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T12:01:53.976+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T12:01:53.976+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-28T12:01:53.976+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T12:01:53.977+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T12:01:53.977+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T12:01:53.977+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-28T12:01:53.977+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-28T12:01:53.977+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T12:01:53.978+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-28T12:01:53.978+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-28T12:01:53.978+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-28T12:01:53.978+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T12:01:53.978+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T12:01:53.978+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-28T12:01:53.979+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T12:01:53.979+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T12:01:53.979+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-28T12:01:53.979+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T12:01:53.979+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T12:01:53.980+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-28T12:01:53.980+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T12:01:53.980+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T12:01:53.980+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-28T12:01:53.980+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T12:01:53.981+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T12:01:53.981+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-28T12:01:53.981+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T12:01:53.982+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-28T12:01:53.982+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T12:01:53.982+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-28T12:01:53.982+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T12:01:53.982+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T12:01:53.983+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-28T12:01:53.983+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-28T12:01:53.983+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T12:01:53.983+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-28T12:01:53.983+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-28T12:01:53.983+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T12:01:53.984+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T12:01:53.984+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-28T12:01:53.984+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T12:01:53.984+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T12:01:53.984+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-28T12:01:53.984+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-28T12:01:53.985+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-28T12:01:53.985+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T12:01:53.985+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-28T12:01:53.985+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T12:01:53.985+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-28T12:01:53.985+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-28T12:01:53.986+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-28T12:01:53.986+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-28T12:01:53.986+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-28T12:01:53.986+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-28T12:01:53.986+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-28T12:01:53.986+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T12:01:53.987+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-28T12:01:53.987+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T12:01:53.987+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-28T12:01:53.987+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T12:01:53.987+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-28T12:01:53.987+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T12:01:53.987+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-28T12:01:53.988+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T12:01:53.988+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-28T12:01:53.988+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-28T12:01:53.988+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-28T12:01:53.988+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T12:01:53.988+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-28T12:01:53.989+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T12:01:53.989+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-28T12:01:53.989+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-28T12:01:53.989+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-28T12:01:53.989+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T12:01:53.989+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-28T12:01:53.990+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T12:01:53.990+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-28T12:01:53.990+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T12:01:53.990+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T12:01:53.990+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-28T12:01:53.990+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T12:01:53.990+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T12:01:53.991+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-28T12:01:53.991+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-28T12:01:53.991+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-28T12:01:53.992+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T12:01:53.992+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-28T12:01:53.992+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T12:01:53.993+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T12:01:53.993+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-28T12:01:53.993+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-28T12:01:53.993+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-28T12:01:53.993+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T12:01:53.994+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-28T12:01:53.994+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T12:01:53.994+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T12:01:53.994+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-28T12:01:53.994+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T12:01:53.994+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-28T12:01:53.995+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T12:01:53.995+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-28T12:01:53.995+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T12:01:53.995+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-28T12:01:53.996+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T12:01:53.996+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-28T12:01:53.996+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T12:01:53.996+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-28T12:01:53.996+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-28T12:01:54.005+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T12:01:54.006+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-28T12:01:54.008+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-28T12:01:54.008+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-28T12:01:54.008+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-28T12:01:54.009+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-28T12:01:54.009+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-28T12:01:54.009+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-28T12:01:54.009+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-28T12:01:54.010+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-28T12:01:54.010+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-28T12:01:54.075+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-28T12:01:54.085+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-28T12:01:54.085+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-28T12:01:54.086+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-28T12:01:54.086+0200 INFO HHH10001003: Autocommit mode: false
2023-01-28T12:01:54.091+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-28T12:01:54.093+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-28T12:01:54.798+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-28T12:01:54.798+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-28T12:01:54.799+0200 DEBUG JDBC version : 4.2
2023-01-28T12:01:54.875+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-28T12:01:54.885+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-28T12:01:54.885+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-28T12:01:54.912+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-28T12:01:54.913+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-28T12:01:54.913+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-28T12:01:54.914+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-28T12:01:54.914+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-28T12:01:54.914+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-28T12:01:54.914+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-28T12:01:54.914+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-28T12:01:54.915+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-28T12:01:54.917+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-28T12:01:54.917+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-28T12:01:54.918+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-28T12:01:54.921+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T12:01:54.921+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-28T12:01:54.925+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-28T12:01:54.926+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-28T12:01:54.938+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T12:01:54.938+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T12:01:54.938+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-28T12:01:54.938+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T12:01:54.939+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T12:01:54.939+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-28T12:01:54.941+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-28T12:01:54.999+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-28T12:01:55.065+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-28T12:01:55.084+0200 DEBUG Import with entity name Users
2023-01-28T12:01:55.099+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-28T12:01:55.116+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-28T12:01:55.137+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-28T12:01:55.142+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T12:01:55.142+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T12:01:55.144+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-28T12:01:55.149+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-28T12:01:55.158+0200 DEBUG building BasicValue for id
2023-01-28T12:01:55.164+0200 DEBUG Skipping column re-registration: users.id
2023-01-28T12:01:55.165+0200 DEBUG Building property id
2023-01-28T12:01:55.170+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-28T12:01:55.172+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-28T12:01:55.173+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-28T12:01:55.173+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-28T12:01:55.173+0200 DEBUG building BasicValue for password
2023-01-28T12:01:55.174+0200 DEBUG Skipping column re-registration: users.password
2023-01-28T12:01:55.174+0200 DEBUG Building property password
2023-01-28T12:01:55.174+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-28T12:01:55.174+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-28T12:01:55.174+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-28T12:01:55.175+0200 DEBUG building BasicValue for userName
2023-01-28T12:01:55.175+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-28T12:01:55.175+0200 DEBUG Building property userName
2023-01-28T12:01:55.184+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-28T12:01:55.185+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-28T12:01:55.187+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-28T12:01:55.191+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-28T12:01:55.318+0200 DEBUG Building session factory
2023-01-28T12:01:55.395+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T12:01:55.402+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-28T12:01:55.403+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, hibernate.use_sql_comments=false, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=false, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, use_sql_comments=false, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-28T12:01:55.413+0200 DEBUG Instantiated session factory
2023-01-28T12:01:55.437+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-28T12:01:55.597+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-28T12:01:55.597+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-28T12:01:55.599+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-28T12:01:55.600+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-28T12:01:55.602+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-28T12:01:55.604+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-28T12:01:55.604+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-28T12:01:55.604+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-28T12:01:55.605+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-28T12:01:55.605+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-28T12:01:55.605+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-28T12:01:55.605+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-28T12:01:55.606+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-28T12:01:55.606+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-28T12:01:55.606+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-28T12:01:55.606+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-28T12:01:55.607+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-28T12:01:55.608+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-28T12:01:55.608+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-28T12:01:55.608+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-28T12:01:55.608+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-28T12:01:55.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-28T12:01:55.609+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-28T12:01:55.610+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-28T12:01:55.614+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-28T12:01:55.615+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-28T12:01:55.615+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-28T12:01:55.616+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-28T12:01:55.616+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-28T12:01:55.617+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-28T12:01:55.618+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-28T12:01:55.618+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-28T12:01:55.618+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-28T12:01:55.618+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-28T12:01:55.619+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-28T12:01:55.620+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-28T12:01:55.620+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-28T12:01:55.620+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-28T12:01:55.620+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-28T12:01:55.620+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-28T12:01:55.620+0200 DEBUG Registering alternate key : length -> character_length
2023-01-28T12:01:55.622+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-28T12:01:55.623+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-28T12:01:55.626+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-28T12:01:55.628+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-28T12:01:55.628+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-28T12:01:55.630+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-28T12:01:55.630+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-28T12:01:55.630+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-28T12:01:55.635+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-28T12:01:55.635+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-28T12:01:55.635+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-28T12:01:55.636+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-28T12:01:55.637+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-28T12:01:55.638+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-28T12:01:55.640+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-28T12:01:55.643+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-28T12:01:55.643+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-28T12:01:55.643+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-28T12:01:55.644+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-28T12:01:55.644+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-28T12:01:55.644+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-28T12:01:55.644+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-28T12:01:55.644+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-28T12:01:55.644+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-28T12:01:55.645+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-28T12:01:55.645+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-28T12:01:55.645+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-28T12:01:55.645+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-28T12:01:55.645+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-28T12:01:55.645+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-28T12:01:55.645+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-28T12:01:55.646+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-28T12:01:55.646+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-28T12:01:55.646+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-28T12:01:55.646+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-28T12:01:55.646+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-28T12:01:55.647+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-28T12:01:55.647+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-28T12:01:55.647+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-28T12:01:55.647+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-28T12:01:55.647+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-28T12:01:55.647+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-28T12:01:55.647+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-28T12:01:55.648+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-28T12:01:55.648+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-28T12:01:55.649+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-28T12:01:55.649+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-28T12:01:55.649+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-28T12:01:55.650+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-28T12:01:55.650+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-28T12:01:55.651+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-28T12:01:55.651+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-28T12:01:55.655+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-28T12:01:55.657+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-28T12:01:55.657+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-28T12:01:55.657+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-28T12:01:55.657+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-28T12:01:55.657+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-28T12:01:55.658+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-28T12:01:55.658+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-28T12:01:55.658+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-28T12:01:55.658+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-28T12:01:55.658+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-28T12:01:55.658+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-28T12:01:55.658+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-28T12:01:55.658+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-28T12:01:55.658+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-28T12:01:55.658+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-28T12:01:55.658+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-28T12:01:55.658+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-28T12:01:55.659+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-28T12:01:55.659+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-28T12:01:55.659+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-28T12:01:55.659+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-28T12:01:55.659+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-28T12:01:55.659+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-28T12:01:55.659+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-28T12:01:55.660+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-28T12:01:55.660+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-28T12:01:55.660+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-28T12:01:55.660+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-28T12:01:55.660+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-28T12:01:55.660+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-28T12:01:55.660+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-28T12:01:55.661+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-28T12:01:55.661+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-28T12:01:55.661+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-28T12:01:55.661+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-28T12:01:55.661+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-28T12:01:55.661+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-28T12:01:55.662+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-28T12:01:55.662+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-28T12:01:55.662+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-28T12:01:55.662+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-28T12:01:55.662+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-28T12:01:55.662+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-28T12:01:55.662+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-28T12:01:55.662+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-28T12:01:55.662+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-28T12:01:55.663+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-28T12:01:55.663+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-28T12:01:55.663+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-28T12:01:55.664+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-28T12:01:55.664+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-28T12:01:55.664+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-28T12:01:55.664+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-28T12:01:55.664+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-28T12:01:55.665+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-28T12:01:55.665+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-28T12:01:55.665+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-28T12:01:55.665+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-28T12:01:55.665+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-28T12:01:55.665+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-28T12:01:55.665+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-28T12:01:55.665+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-28T12:01:55.667+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-28T12:01:55.668+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-28T12:01:55.668+0200 DEBUG Registering alternate key : char -> chr
2023-01-28T12:01:55.668+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-28T12:01:55.668+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-28T12:01:55.673+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-28T12:01:55.673+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-28T12:01:55.674+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-28T12:01:55.674+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-28T12:01:55.674+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-28T12:01:55.676+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-28T12:01:55.676+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-28T12:01:55.676+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-28T12:01:55.676+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-28T12:01:55.677+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-28T12:01:55.684+0200 DEBUG abs(NUMERIC arg)
2023-01-28T12:01:55.684+0200 DEBUG Double acos(NUMERIC arg)
2023-01-28T12:01:55.684+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-28T12:01:55.684+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-28T12:01:55.685+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-28T12:01:55.685+0200 DEBUG Integer ascii(STRING arg)
2023-01-28T12:01:55.685+0200 DEBUG Double asin(NUMERIC arg)
2023-01-28T12:01:55.685+0200 DEBUG Double atan(NUMERIC arg)
2023-01-28T12:01:55.689+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-28T12:01:55.689+0200 DEBUG Double avg(NUMERIC arg)
2023-01-28T12:01:55.690+0200 DEBUG bit_and(arg)
2023-01-28T12:01:55.690+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-28T12:01:55.690+0200 DEBUG bit_or(arg)
2023-01-28T12:01:55.690+0200 DEBUG bitand(arg0, arg1)
2023-01-28T12:01:55.690+0200 DEBUG bitnot(arg)
2023-01-28T12:01:55.690+0200 DEBUG bitor(arg0, arg1)
2023-01-28T12:01:55.690+0200 DEBUG bitxor(arg0, arg1)
2023-01-28T12:01:55.690+0200 DEBUG cast(arg as Type)
2023-01-28T12:01:55.690+0200 DEBUG ceiling(NUMERIC arg)
2023-01-28T12:01:55.691+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-28T12:01:55.691+0200 DEBUG Character chr(INTEGER arg)
2023-01-28T12:01:55.691+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-28T12:01:55.691+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-28T12:01:55.691+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-28T12:01:55.691+0200 DEBUG Double cos(NUMERIC arg)
2023-01-28T12:01:55.691+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-28T12:01:55.692+0200 DEBUG Double cot(NUMERIC arg)
2023-01-28T12:01:55.693+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-28T12:01:55.693+0200 DEBUG Integer crc32(arg)
2023-01-28T12:01:55.693+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-28T12:01:55.693+0200 DEBUG Date curdate()
2023-01-28T12:01:55.693+0200 DEBUG Date current_date
2023-01-28T12:01:55.694+0200 DEBUG Time current_time
2023-01-28T12:01:55.694+0200 DEBUG Timestamp current_timestamp
2023-01-28T12:01:55.694+0200 DEBUG Time curtime()
2023-01-28T12:01:55.694+0200 DEBUG Date date(arg)
2023-01-28T12:01:55.694+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-28T12:01:55.694+0200 DEBUG Integer day(DATE arg)
2023-01-28T12:01:55.694+0200 DEBUG String dayname(DATE arg)
2023-01-28T12:01:55.694+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-28T12:01:55.694+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-28T12:01:55.695+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-28T12:01:55.695+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-28T12:01:55.695+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-28T12:01:55.695+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-28T12:01:55.695+0200 DEBUG Double exp(NUMERIC arg)
2023-01-28T12:01:55.695+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-28T12:01:55.695+0200 DEBUG first_valueANY value
2023-01-28T12:01:55.696+0200 DEBUG floor(NUMERIC arg)
2023-01-28T12:01:55.696+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-28T12:01:55.696+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T12:01:55.696+0200 DEBUG Integer hour(TIME arg)
2023-01-28T12:01:55.696+0200 DEBUG ifnull(arg0, arg1)
2023-01-28T12:01:55.696+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-28T12:01:55.696+0200 DEBUG Instant instant
2023-01-28T12:01:55.696+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-28T12:01:55.696+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-28T12:01:55.696+0200 DEBUG Date last_day(DATE arg)
2023-01-28T12:01:55.697+0200 DEBUG last_valueANY value
2023-01-28T12:01:55.697+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-28T12:01:55.697+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-28T12:01:55.697+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-28T12:01:55.697+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-28T12:01:55.697+0200 DEBUG Double ln(NUMERIC arg)
2023-01-28T12:01:55.697+0200 DEBUG LocalDate local_date
2023-01-28T12:01:55.697+0200 DEBUG LocalDateTime local_datetime
2023-01-28T12:01:55.697+0200 DEBUG LocalTime local_time
2023-01-28T12:01:55.697+0200 DEBUG Timestamp localtime
2023-01-28T12:01:55.697+0200 DEBUG Timestamp localtimestamp
2023-01-28T12:01:55.698+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-28T12:01:55.698+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-28T12:01:55.698+0200 DEBUG Double log10(NUMERIC arg)
2023-01-28T12:01:55.698+0200 DEBUG Double log2(NUMERIC arg)
2023-01-28T12:01:55.698+0200 DEBUG String lower(STRING string)
2023-01-28T12:01:55.698+0200 DEBUG String lpad(string, length[, padding])
2023-01-28T12:01:55.698+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-28T12:01:55.698+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-28T12:01:55.698+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-28T12:01:55.698+0200 DEBUG max(COMPARABLE arg)
2023-01-28T12:01:55.698+0200 DEBUG String md5(arg)
2023-01-28T12:01:55.699+0200 DEBUG Integer microsecond(TIME arg)
2023-01-28T12:01:55.699+0200 DEBUG min(COMPARABLE arg)
2023-01-28T12:01:55.699+0200 DEBUG Integer minute(TIME arg)
2023-01-28T12:01:55.699+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-28T12:01:55.699+0200 DEBUG Integer month(DATE arg)
2023-01-28T12:01:55.699+0200 DEBUG String monthname(DATE arg)
2023-01-28T12:01:55.699+0200 DEBUG Timestamp now()
2023-01-28T12:01:55.699+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-28T12:01:55.699+0200 DEBUG nullif(arg0, arg1)
2023-01-28T12:01:55.699+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-28T12:01:55.699+0200 DEBUG OffsetDateTime offset_datetime
2023-01-28T12:01:55.700+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-28T12:01:55.701+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-28T12:01:55.701+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-28T12:01:55.701+0200 DEBUG Double pi
2023-01-28T12:01:55.701+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-28T12:01:55.701+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-28T12:01:55.702+0200 DEBUG Integer quarter(DATE arg)
2023-01-28T12:01:55.702+0200 DEBUG Double radians(NUMERIC arg)
2023-01-28T12:01:55.702+0200 DEBUG Double rand([INTEGER seed])
2023-01-28T12:01:55.702+0200 DEBUG Long rank([arg0[, ...]])
2023-01-28T12:01:55.703+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-28T12:01:55.703+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-28T12:01:55.703+0200 DEBUG String reverse(STRING arg)
2023-01-28T12:01:55.703+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-28T12:01:55.704+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-28T12:01:55.704+0200 DEBUG Long row_number()
2023-01-28T12:01:55.704+0200 DEBUG String rpad(string, length[, padding])
2023-01-28T12:01:55.704+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-28T12:01:55.705+0200 DEBUG Integer second(TIME arg)
2023-01-28T12:01:55.705+0200 DEBUG String sha(arg)
2023-01-28T12:01:55.705+0200 DEBUG String sha1(arg)
2023-01-28T12:01:55.705+0200 DEBUG String sha2(arg0, arg1)
2023-01-28T12:01:55.706+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-28T12:01:55.706+0200 DEBUG Double sin(NUMERIC arg)
2023-01-28T12:01:55.706+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-28T12:01:55.707+0200 DEBUG String soundex(arg)
2023-01-28T12:01:55.707+0200 DEBUG String space(INTEGER arg)
2023-01-28T12:01:55.707+0200 DEBUG Object sql
2023-01-28T12:01:55.707+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-28T12:01:55.707+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-28T12:01:55.707+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-28T12:01:55.707+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-28T12:01:55.708+0200 DEBUG String str(arg)
2023-01-28T12:01:55.708+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-28T12:01:55.708+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-28T12:01:55.708+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-28T12:01:55.709+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-28T12:01:55.709+0200 DEBUG sum(arg)
2023-01-28T12:01:55.709+0200 DEBUG Timestamp sysdate()
2023-01-28T12:01:55.710+0200 DEBUG Double tan(NUMERIC arg)
2023-01-28T12:01:55.710+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-28T12:01:55.710+0200 DEBUG String time(arg)
2023-01-28T12:01:55.710+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-28T12:01:55.710+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T12:01:55.710+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-28T12:01:55.711+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-28T12:01:55.711+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-28T12:01:55.711+0200 DEBUG String upper(STRING string)
2023-01-28T12:01:55.711+0200 DEBUG Date utc_date
2023-01-28T12:01:55.713+0200 DEBUG Time utc_time
2023-01-28T12:01:55.713+0200 DEBUG Timestamp utc_timestamp
2023-01-28T12:01:55.713+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-28T12:01:55.713+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-28T12:01:55.713+0200 DEBUG Double variance(NUMERIC arg)
2023-01-28T12:01:55.713+0200 DEBUG Integer week(DATE arg)
2023-01-28T12:01:55.714+0200 DEBUG Integer year(DATE arg)
2023-01-28T12:01:55.715+0200 DEBUG Character char(INTEGER arg)
2023-01-28T12:01:55.715+0200 DEBUG Date current date
2023-01-28T12:01:55.715+0200 DEBUG Time current time
2023-01-28T12:01:55.715+0200 DEBUG Timestamp current timestamp
2023-01-28T12:01:55.715+0200 DEBUG Instant current_instant
2023-01-28T12:01:55.715+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-28T12:01:55.715+0200 DEBUG Integer day(DATE arg)
2023-01-28T12:01:55.715+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-28T12:01:55.715+0200 DEBUG LocalDate local date
2023-01-28T12:01:55.715+0200 DEBUG LocalDateTime local datetime
2023-01-28T12:01:55.715+0200 DEBUG LocalTime local time
2023-01-28T12:01:55.715+0200 DEBUG OffsetDateTime offset datetime
2023-01-28T12:01:55.715+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-28T12:01:55.718+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-28T12:01:55.966+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-28T12:01:55.966+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-28T12:01:56.335+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:25)
2023-01-28T12:01:56.418+0200 DEBUG Starting post-init callbacks
2023-01-28T12:01:56.418+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-28T12:01:56.418+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-28T12:01:56.546+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-28T12:01:56.547+0200 DEBUG  Version select: select id from users where id =?
2023-01-28T12:01:56.548+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-28T12:01:56.549+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-28T12:01:56.549+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-28T12:01:56.586+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T12:01:56.595+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T12:01:56.636+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-28T12:01:56.644+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T12:01:56.694+0200 DEBUG Checking 0 named HQL queries
2023-01-28T12:01:56.695+0200 DEBUG Checking 0 named SQL queries
2023-01-28T12:01:56.790+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-28T12:01:56.895+0200 DEBUG No alter strings for table : users
2023-01-28T12:01:56.896+0200 DEBUG No alter strings for table : users_SEQ
2023-01-28T12:01:56.915+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-28T12:01:56.916+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-28T12:01:56.938+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-28T12:01:56.946+0200 DEBUG Registering SessionFactory: 943ed581-731d-4da5-b57f-7cfe009c9e2d (<unnamed>)
2023-01-28T12:01:56.946+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-28T12:01:57.048+0200 DEBUG Statistics initialized [enabled=false]
2023-01-28T12:01:57.070+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-28T12:01:57.070+0200 DEBUG begin
2023-01-28T12:01:57.120+0200 DEBUG HQL : from Users
2023-01-28T12:01:57.350+0200 DEBUG Handling root path - Users
2023-01-28T12:01:57.362+0200 DEBUG Encountered implicit select clause : fromUsers
2023-01-28T12:01:57.375+0200 DEBUG SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `edu.itstep.sql.Users(62147060714900)`
            <- [root] - `edu.itstep.sql.Users(62147060714900)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `edu.itstep.sql.Users(62147060714900)`
          <- [root] - `edu.itstep.sql.Users(62147060714900)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-01-28T12:01:57.428+0200 DEBUG Created new SQL alias : u1_0
2023-01-28T12:01:57.429+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users(62147060714900))] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-28T12:01:57.439+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users(62147060714900)]
 |  +-BasicFetch [edu.itstep.sql.Users(62147060714900).password]
 |  \-BasicFetch [edu.itstep.sql.Users(62147060714900).userName]

2023-01-28T12:01:57.439+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users(62147060714900)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-28T12:01:57.459+0200 DEBUG Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-01-28T12:01:57.472+0200 DEBUG Initializer list
2023-01-28T12:01:57.474+0200 DEBUG     edu.itstep.sql.Users(62147060714900) -> EntityResultInitializer(edu.itstep.sql.Users(62147060714900))@1659537713 (SingleTableEntityPersister(edu.itstep.sql.Users))
2023-01-28T12:01:57.485+0200 DEBUG select u1_0.id,u1_0.password,u1_0.user_name from users u1_0
2023-01-28T12:01:57.493+0200 DEBUG Extracted JDBC value [0] - [352]
2023-01-28T12:01:57.494+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(62147060714900)): 352
2023-01-28T12:01:57.501+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(62147060714900)#352] : Users{id=352, userName='null', password='null'}
2023-01-28T12:01:57.502+0200 DEBUG Extracted JDBC value [1] - [test]
2023-01-28T12:01:57.502+0200 DEBUG Extracted JDBC value [2] - [user104]
2023-01-28T12:01:57.507+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(62147060714900)#352
2023-01-28T12:01:57.507+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-01-28T12:01:57.507+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(62147060714900)#352] - using loading instance
2023-01-28T12:01:57.508+0200 DEBUG Extracted JDBC value [0] - [402]
2023-01-28T12:01:57.508+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(62147060714900)): 402
2023-01-28T12:01:57.508+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(62147060714900)#402] : Users{id=402, userName='null', password='null'}
2023-01-28T12:01:57.508+0200 DEBUG Extracted JDBC value [1] - [$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm]
2023-01-28T12:01:57.508+0200 DEBUG Extracted JDBC value [2] - [user105]
2023-01-28T12:01:57.509+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(62147060714900)#402
2023-01-28T12:01:57.509+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-01-28T12:01:57.509+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(62147060714900)#402] - using loading instance
2023-01-28T12:01:57.509+0200 DEBUG Extracted JDBC value [0] - [452]
2023-01-28T12:01:57.509+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(62147060714900)): 452
2023-01-28T12:01:57.509+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(62147060714900)#452] : Users{id=452, userName='null', password='null'}
2023-01-28T12:01:57.509+0200 DEBUG Extracted JDBC value [1] - [$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i]
2023-01-28T12:01:57.510+0200 DEBUG Extracted JDBC value [2] - [null]
2023-01-28T12:01:57.510+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(62147060714900)#452
2023-01-28T12:01:57.510+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-01-28T12:01:57.510+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(62147060714900)#452] - using loading instance
2023-01-28T12:01:57.514+0200 DEBUG committing
2023-01-28T12:01:57.515+0200 DEBUG Processing flush-time cascades
2023-01-28T12:01:57.517+0200 DEBUG Dirty checking collections
2023-01-28T12:01:57.522+0200 DEBUG Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2023-01-28T12:01:57.522+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-28T12:01:57.523+0200 DEBUG Listing entities:
2023-01-28T12:01:57.524+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i, id=452, userName=null}
2023-01-28T12:01:57.524+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm, id=402, userName=user105}
2023-01-28T12:01:57.524+0200 DEBUG edu.itstep.sql.Users{password=test, id=352, userName=user104}
2023-01-28T12:01:57.529+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T12:01:57.533+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-28T12:07:46.203+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-28T12:07:46.286+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-28T12:07:46.293+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-28T12:07:47.493+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-28T12:07:47.503+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-28T12:07:47.503+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-28T12:07:47.504+0200 INFO HHH10001001: Connection properties: {password=****, user=root}
2023-01-28T12:07:47.504+0200 INFO HHH10001003: Autocommit mode: false
2023-01-28T12:07:47.509+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-28T12:07:48.209+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-28T12:07:49.583+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f171912] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-28T12:09:44.185+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-28T12:09:45.376+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-28T12:09:46.141+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-28T12:10:10.515+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-28T12:10:11.246+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-28T12:11:10.496+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-28T12:11:10.501+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-28T12:11:11.578+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-28T12:11:11.585+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-28T12:11:11.585+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-28T12:11:11.586+0200 INFO HHH10001001: Connection properties: {password=****, user=root}
2023-01-28T12:11:11.586+0200 INFO HHH10001003: Autocommit mode: false
2023-01-28T12:11:11.589+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-28T12:11:12.346+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-28T12:11:13.537+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f171912] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-28T12:11:29.365+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-28T12:11:29.984+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-29T18:57:39.457+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-29T18:57:39.551+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-29T18:57:39.595+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-29T18:57:39.692+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-29T18:57:39.695+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-29T18:57:39.700+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-29T18:57:40.265+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-29T18:57:40.287+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-29T18:57:41.184+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-29T18:57:41.194+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-29T18:57:41.195+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-29T18:57:41.196+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-29T18:57:41.197+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-29T18:57:41.197+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-29T18:57:41.199+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-29T18:57:41.200+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-29T18:57:41.202+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-29T18:57:41.203+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-29T18:57:41.204+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-29T18:57:41.205+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-29T18:57:41.206+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-29T18:57:41.238+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-29T18:57:41.240+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-29T18:57:41.666+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-29T18:57:41.666+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-29T18:57:41.666+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-29T18:57:41.666+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-29T18:57:41.667+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-29T18:57:41.667+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-29T18:57:41.667+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-29T18:57:41.667+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-29T18:57:41.667+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-29T18:57:41.668+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-29T18:57:41.668+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-29T18:57:41.668+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-29T18:57:41.668+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-29T18:57:41.668+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-29T18:57:41.669+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-29T18:57:41.669+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-29T18:57:41.669+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-29T18:57:41.669+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-29T18:57:41.669+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-29T18:57:41.670+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-29T18:57:41.670+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-29T18:57:41.670+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-29T18:57:41.670+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-29T18:57:41.670+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-29T18:57:41.670+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-29T18:57:41.671+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-29T18:57:41.671+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-29T18:57:41.671+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-29T18:57:41.671+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-29T18:57:41.671+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-29T18:57:41.672+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-29T18:57:41.672+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-29T18:57:41.672+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-29T18:57:41.672+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-29T18:57:41.672+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-29T18:57:41.673+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-29T18:57:41.673+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-29T18:57:41.673+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-29T18:57:41.673+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-29T18:57:41.673+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-29T18:57:41.674+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-29T18:57:41.674+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-29T18:57:41.674+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-29T18:57:41.674+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-29T18:57:41.674+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-29T18:57:41.675+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-29T18:57:41.675+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-29T18:57:41.675+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-29T18:57:41.675+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-29T18:57:41.675+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-29T18:57:41.676+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-29T18:57:41.676+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-29T18:57:41.676+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-29T18:57:41.676+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-29T18:57:41.676+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-29T18:57:41.677+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-29T18:57:41.677+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-29T18:57:41.677+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-29T18:57:41.677+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-29T18:57:41.677+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-29T18:57:41.677+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-29T18:57:41.678+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-29T18:57:41.678+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-29T18:57:41.678+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-29T18:57:41.678+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-29T18:57:41.678+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-29T18:57:41.678+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-29T18:57:41.679+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-29T18:57:41.679+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-29T18:57:41.679+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-29T18:57:41.679+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-29T18:57:41.679+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-29T18:57:41.680+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-29T18:57:41.680+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-29T18:57:41.680+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-29T18:57:41.680+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-29T18:57:41.680+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-29T18:57:41.680+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-29T18:57:41.680+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-29T18:57:41.681+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-29T18:57:41.681+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-29T18:57:41.681+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-29T18:57:41.681+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-29T18:57:41.681+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-29T18:57:41.682+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-29T18:57:41.682+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-29T18:57:41.682+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-29T18:57:41.682+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-29T18:57:41.682+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-29T18:57:41.683+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-29T18:57:41.683+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-29T18:57:41.683+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-29T18:57:41.684+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-29T18:57:41.684+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-29T18:57:41.684+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-29T18:57:41.685+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-29T18:57:41.685+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-29T18:57:41.685+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-29T18:57:41.685+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-29T18:57:41.686+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-29T18:57:41.686+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-29T18:57:41.686+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-29T18:57:41.686+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-29T18:57:41.686+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-29T18:57:41.686+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-29T18:57:41.687+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-29T18:57:41.687+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-29T18:57:41.687+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-29T18:57:41.687+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-29T18:57:41.687+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-29T18:57:41.687+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-29T18:57:41.687+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-29T18:57:41.688+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-29T18:57:41.688+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-29T18:57:41.688+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-29T18:57:41.688+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-29T18:57:41.688+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-29T18:57:41.688+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-29T18:57:41.689+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-29T18:57:41.689+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-29T18:57:41.689+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-29T18:57:41.698+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-29T18:57:41.699+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-29T18:57:41.700+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-29T18:57:41.701+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-29T18:57:41.701+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-29T18:57:41.701+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-29T18:57:41.702+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-29T18:57:41.702+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-29T18:57:41.702+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-29T18:57:41.702+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-29T18:57:41.702+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-29T18:57:41.868+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-29T18:57:41.902+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-29T18:57:41.903+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-29T18:57:41.904+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-29T18:57:41.904+0200 INFO HHH10001003: Autocommit mode: false
2023-01-29T18:57:41.924+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-29T18:57:41.925+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-29T18:57:42.753+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-29T18:57:42.754+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-29T18:57:42.754+0200 DEBUG JDBC version : 4.2
2023-01-29T18:57:42.871+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-29T18:57:42.879+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-29T18:57:42.879+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-29T18:57:42.938+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-29T18:57:42.938+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-29T18:57:42.939+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-29T18:57:42.939+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-29T18:57:42.939+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-29T18:57:42.939+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-29T18:57:42.939+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-29T18:57:42.939+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-29T18:57:42.939+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-29T18:57:42.954+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-29T18:57:42.954+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-29T18:57:42.955+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-29T18:57:42.966+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-29T18:57:42.966+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-29T18:57:42.977+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-29T18:57:42.977+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-29T18:57:42.993+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-29T18:57:42.994+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-29T18:57:42.994+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-29T18:57:42.994+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-29T18:57:42.995+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-29T18:57:42.995+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-29T18:57:42.999+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-29T18:57:43.133+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-29T18:57:43.174+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-29T18:57:43.191+0200 DEBUG Import with entity name Users
2023-01-29T18:57:43.206+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-29T18:57:43.229+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-29T18:57:43.251+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-29T18:57:43.257+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-29T18:57:43.257+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-29T18:57:43.259+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-29T18:57:43.268+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-29T18:57:43.291+0200 DEBUG building BasicValue for id
2023-01-29T18:57:43.296+0200 DEBUG Skipping column re-registration: users.id
2023-01-29T18:57:43.296+0200 DEBUG Building property id
2023-01-29T18:57:43.299+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-29T18:57:43.300+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-29T18:57:43.301+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-29T18:57:43.301+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-29T18:57:43.301+0200 DEBUG building BasicValue for password
2023-01-29T18:57:43.301+0200 DEBUG Skipping column re-registration: users.password
2023-01-29T18:57:43.301+0200 DEBUG Building property password
2023-01-29T18:57:43.302+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-29T18:57:43.302+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-29T18:57:43.302+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-29T18:57:43.302+0200 DEBUG building BasicValue for userName
2023-01-29T18:57:43.302+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-29T18:57:43.302+0200 DEBUG Building property userName
2023-01-29T18:57:43.311+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-29T18:57:43.311+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-29T18:57:43.312+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-29T18:57:43.315+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-29T18:57:43.460+0200 DEBUG Building session factory
2023-01-29T18:57:43.571+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-29T18:57:43.591+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-29T18:57:43.591+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, hibernate.use_sql_comments=false, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=false, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, use_sql_comments=false, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-29T18:57:43.600+0200 DEBUG Instantiated session factory
2023-01-29T18:57:43.641+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-29T18:57:43.864+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-29T18:57:43.864+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-29T18:57:43.866+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-29T18:57:43.867+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-29T18:57:43.870+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-29T18:57:43.871+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-29T18:57:43.872+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-29T18:57:43.872+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-29T18:57:43.872+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-29T18:57:43.873+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-29T18:57:43.873+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-29T18:57:43.873+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-29T18:57:43.873+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-29T18:57:43.873+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-29T18:57:43.873+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-29T18:57:43.873+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-29T18:57:43.874+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-29T18:57:43.874+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-29T18:57:43.874+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-29T18:57:43.874+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-29T18:57:43.874+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-29T18:57:43.875+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-29T18:57:43.875+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-29T18:57:43.875+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-29T18:57:43.877+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-29T18:57:43.877+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-29T18:57:43.877+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-29T18:57:43.877+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-29T18:57:43.878+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-29T18:57:43.878+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-29T18:57:43.878+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-29T18:57:43.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-29T18:57:43.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-29T18:57:43.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-29T18:57:43.879+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-29T18:57:43.880+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-29T18:57:43.880+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-29T18:57:43.880+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-29T18:57:43.880+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-29T18:57:43.880+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-29T18:57:43.880+0200 DEBUG Registering alternate key : length -> character_length
2023-01-29T18:57:43.883+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-29T18:57:43.885+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-29T18:57:43.886+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-29T18:57:43.889+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-29T18:57:43.889+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-29T18:57:43.890+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-29T18:57:43.890+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-29T18:57:43.891+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-29T18:57:43.891+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-29T18:57:43.891+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-29T18:57:43.891+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-29T18:57:43.892+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-29T18:57:43.893+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-29T18:57:43.896+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-29T18:57:43.898+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-29T18:57:43.900+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-29T18:57:43.900+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-29T18:57:43.900+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-29T18:57:43.901+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-29T18:57:43.901+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-29T18:57:43.901+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-29T18:57:43.901+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-29T18:57:43.901+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-29T18:57:43.901+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-29T18:57:43.901+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-29T18:57:43.902+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-29T18:57:43.902+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-29T18:57:43.902+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-29T18:57:43.902+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-29T18:57:43.903+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-29T18:57:43.904+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-29T18:57:43.905+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-29T18:57:43.905+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-29T18:57:43.905+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-29T18:57:43.907+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-29T18:57:43.908+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-29T18:57:43.908+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-29T18:57:43.908+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-29T18:57:43.908+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-29T18:57:43.908+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-29T18:57:43.908+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-29T18:57:43.908+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-29T18:57:43.908+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-29T18:57:43.908+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-29T18:57:43.908+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-29T18:57:43.909+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-29T18:57:43.909+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-29T18:57:43.909+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-29T18:57:43.910+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-29T18:57:43.911+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-29T18:57:43.911+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-29T18:57:43.911+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-29T18:57:43.911+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-29T18:57:43.912+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-29T18:57:43.912+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-29T18:57:43.912+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-29T18:57:43.912+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-29T18:57:43.912+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-29T18:57:43.913+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-29T18:57:43.913+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-29T18:57:43.913+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-29T18:57:43.913+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-29T18:57:43.913+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-29T18:57:43.913+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-29T18:57:43.913+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-29T18:57:43.914+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-29T18:57:43.914+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-29T18:57:43.914+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-29T18:57:43.914+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-29T18:57:43.914+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-29T18:57:43.914+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-29T18:57:43.914+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-29T18:57:43.914+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-29T18:57:43.914+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-29T18:57:43.914+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-29T18:57:43.915+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-29T18:57:43.915+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-29T18:57:43.915+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-29T18:57:43.915+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-29T18:57:43.915+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-29T18:57:43.915+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-29T18:57:43.916+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-29T18:57:43.916+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-29T18:57:43.916+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-29T18:57:43.916+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-29T18:57:43.916+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-29T18:57:43.916+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-29T18:57:43.916+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-29T18:57:43.916+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-29T18:57:43.917+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-29T18:57:43.917+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-29T18:57:43.917+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-29T18:57:43.917+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-29T18:57:43.917+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-29T18:57:43.917+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-29T18:57:43.917+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-29T18:57:43.917+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-29T18:57:43.917+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-29T18:57:43.917+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-29T18:57:43.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-29T18:57:43.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-29T18:57:43.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-29T18:57:43.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-29T18:57:43.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-29T18:57:43.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-29T18:57:43.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-29T18:57:43.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-29T18:57:43.918+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-29T18:57:43.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-29T18:57:43.918+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-29T18:57:43.919+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-29T18:57:43.919+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-29T18:57:43.919+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-29T18:57:43.919+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-29T18:57:43.919+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-29T18:57:43.919+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-29T18:57:43.919+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-29T18:57:43.919+0200 DEBUG Registering alternate key : char -> chr
2023-01-29T18:57:43.919+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-29T18:57:43.920+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-29T18:57:43.921+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-29T18:57:43.921+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-29T18:57:43.921+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-29T18:57:43.921+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-29T18:57:43.921+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-29T18:57:43.926+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-29T18:57:43.926+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-29T18:57:43.926+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-29T18:57:43.927+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-29T18:57:43.930+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-29T18:57:43.939+0200 DEBUG abs(NUMERIC arg)
2023-01-29T18:57:43.940+0200 DEBUG Double acos(NUMERIC arg)
2023-01-29T18:57:43.940+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-29T18:57:43.940+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-29T18:57:43.940+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-29T18:57:43.940+0200 DEBUG Integer ascii(STRING arg)
2023-01-29T18:57:43.940+0200 DEBUG Double asin(NUMERIC arg)
2023-01-29T18:57:43.940+0200 DEBUG Double atan(NUMERIC arg)
2023-01-29T18:57:43.946+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-29T18:57:43.946+0200 DEBUG Double avg(NUMERIC arg)
2023-01-29T18:57:43.946+0200 DEBUG bit_and(arg)
2023-01-29T18:57:43.946+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-29T18:57:43.946+0200 DEBUG bit_or(arg)
2023-01-29T18:57:43.946+0200 DEBUG bitand(arg0, arg1)
2023-01-29T18:57:43.946+0200 DEBUG bitnot(arg)
2023-01-29T18:57:43.947+0200 DEBUG bitor(arg0, arg1)
2023-01-29T18:57:43.947+0200 DEBUG bitxor(arg0, arg1)
2023-01-29T18:57:43.947+0200 DEBUG cast(arg as Type)
2023-01-29T18:57:43.947+0200 DEBUG ceiling(NUMERIC arg)
2023-01-29T18:57:43.947+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-29T18:57:43.947+0200 DEBUG Character chr(INTEGER arg)
2023-01-29T18:57:43.947+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-29T18:57:43.947+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-29T18:57:43.947+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-29T18:57:43.947+0200 DEBUG Double cos(NUMERIC arg)
2023-01-29T18:57:43.947+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-29T18:57:43.948+0200 DEBUG Double cot(NUMERIC arg)
2023-01-29T18:57:43.948+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-29T18:57:43.948+0200 DEBUG Integer crc32(arg)
2023-01-29T18:57:43.948+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-29T18:57:43.949+0200 DEBUG Date curdate()
2023-01-29T18:57:43.949+0200 DEBUG Date current_date
2023-01-29T18:57:43.949+0200 DEBUG Time current_time
2023-01-29T18:57:43.949+0200 DEBUG Timestamp current_timestamp
2023-01-29T18:57:43.949+0200 DEBUG Time curtime()
2023-01-29T18:57:43.949+0200 DEBUG Date date(arg)
2023-01-29T18:57:43.949+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-29T18:57:43.950+0200 DEBUG Integer day(DATE arg)
2023-01-29T18:57:43.950+0200 DEBUG String dayname(DATE arg)
2023-01-29T18:57:43.950+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-29T18:57:43.950+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-29T18:57:43.950+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-29T18:57:43.950+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-29T18:57:43.950+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-29T18:57:43.950+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-29T18:57:43.950+0200 DEBUG Double exp(NUMERIC arg)
2023-01-29T18:57:43.951+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-29T18:57:43.951+0200 DEBUG first_valueANY value
2023-01-29T18:57:43.951+0200 DEBUG floor(NUMERIC arg)
2023-01-29T18:57:43.951+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-29T18:57:43.951+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-29T18:57:43.951+0200 DEBUG Integer hour(TIME arg)
2023-01-29T18:57:43.951+0200 DEBUG ifnull(arg0, arg1)
2023-01-29T18:57:43.951+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-29T18:57:43.951+0200 DEBUG Instant instant
2023-01-29T18:57:43.951+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-29T18:57:43.951+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-29T18:57:43.952+0200 DEBUG Date last_day(DATE arg)
2023-01-29T18:57:43.952+0200 DEBUG last_valueANY value
2023-01-29T18:57:43.952+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-29T18:57:43.952+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-29T18:57:43.952+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-29T18:57:43.952+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-29T18:57:43.952+0200 DEBUG Double ln(NUMERIC arg)
2023-01-29T18:57:43.952+0200 DEBUG LocalDate local_date
2023-01-29T18:57:43.952+0200 DEBUG LocalDateTime local_datetime
2023-01-29T18:57:43.953+0200 DEBUG LocalTime local_time
2023-01-29T18:57:43.953+0200 DEBUG Timestamp localtime
2023-01-29T18:57:43.953+0200 DEBUG Timestamp localtimestamp
2023-01-29T18:57:43.953+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-29T18:57:43.953+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-29T18:57:43.953+0200 DEBUG Double log10(NUMERIC arg)
2023-01-29T18:57:43.953+0200 DEBUG Double log2(NUMERIC arg)
2023-01-29T18:57:43.953+0200 DEBUG String lower(STRING string)
2023-01-29T18:57:43.953+0200 DEBUG String lpad(string, length[, padding])
2023-01-29T18:57:43.953+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-29T18:57:43.953+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-29T18:57:43.954+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-29T18:57:43.954+0200 DEBUG max(COMPARABLE arg)
2023-01-29T18:57:43.954+0200 DEBUG String md5(arg)
2023-01-29T18:57:43.954+0200 DEBUG Integer microsecond(TIME arg)
2023-01-29T18:57:43.954+0200 DEBUG min(COMPARABLE arg)
2023-01-29T18:57:43.954+0200 DEBUG Integer minute(TIME arg)
2023-01-29T18:57:43.954+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-29T18:57:43.954+0200 DEBUG Integer month(DATE arg)
2023-01-29T18:57:43.955+0200 DEBUG String monthname(DATE arg)
2023-01-29T18:57:43.955+0200 DEBUG Timestamp now()
2023-01-29T18:57:43.955+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-29T18:57:43.955+0200 DEBUG nullif(arg0, arg1)
2023-01-29T18:57:43.955+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-29T18:57:43.955+0200 DEBUG OffsetDateTime offset_datetime
2023-01-29T18:57:43.955+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-29T18:57:43.955+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-29T18:57:43.955+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-29T18:57:43.955+0200 DEBUG Double pi
2023-01-29T18:57:43.956+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-29T18:57:43.956+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-29T18:57:43.956+0200 DEBUG Integer quarter(DATE arg)
2023-01-29T18:57:43.956+0200 DEBUG Double radians(NUMERIC arg)
2023-01-29T18:57:43.956+0200 DEBUG Double rand([INTEGER seed])
2023-01-29T18:57:43.956+0200 DEBUG Long rank([arg0[, ...]])
2023-01-29T18:57:43.956+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-29T18:57:43.956+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-29T18:57:43.956+0200 DEBUG String reverse(STRING arg)
2023-01-29T18:57:43.956+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-29T18:57:43.956+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-29T18:57:43.956+0200 DEBUG Long row_number()
2023-01-29T18:57:43.956+0200 DEBUG String rpad(string, length[, padding])
2023-01-29T18:57:43.957+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-29T18:57:43.957+0200 DEBUG Integer second(TIME arg)
2023-01-29T18:57:43.957+0200 DEBUG String sha(arg)
2023-01-29T18:57:43.957+0200 DEBUG String sha1(arg)
2023-01-29T18:57:43.957+0200 DEBUG String sha2(arg0, arg1)
2023-01-29T18:57:43.957+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-29T18:57:43.957+0200 DEBUG Double sin(NUMERIC arg)
2023-01-29T18:57:43.957+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-29T18:57:43.957+0200 DEBUG String soundex(arg)
2023-01-29T18:57:43.957+0200 DEBUG String space(INTEGER arg)
2023-01-29T18:57:43.957+0200 DEBUG Object sql
2023-01-29T18:57:43.957+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-29T18:57:43.958+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-29T18:57:43.958+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-29T18:57:43.958+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-29T18:57:43.958+0200 DEBUG String str(arg)
2023-01-29T18:57:43.958+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-29T18:57:43.958+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-29T18:57:43.958+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-29T18:57:43.958+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-29T18:57:43.958+0200 DEBUG sum(arg)
2023-01-29T18:57:43.958+0200 DEBUG Timestamp sysdate()
2023-01-29T18:57:43.958+0200 DEBUG Double tan(NUMERIC arg)
2023-01-29T18:57:43.959+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-29T18:57:43.959+0200 DEBUG String time(arg)
2023-01-29T18:57:43.959+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-29T18:57:43.959+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-29T18:57:43.959+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-29T18:57:43.959+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-29T18:57:43.959+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-29T18:57:43.959+0200 DEBUG String upper(STRING string)
2023-01-29T18:57:43.959+0200 DEBUG Date utc_date
2023-01-29T18:57:43.959+0200 DEBUG Time utc_time
2023-01-29T18:57:43.960+0200 DEBUG Timestamp utc_timestamp
2023-01-29T18:57:43.960+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-29T18:57:43.960+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-29T18:57:43.960+0200 DEBUG Double variance(NUMERIC arg)
2023-01-29T18:57:43.960+0200 DEBUG Integer week(DATE arg)
2023-01-29T18:57:43.960+0200 DEBUG Integer year(DATE arg)
2023-01-29T18:57:43.961+0200 DEBUG Character char(INTEGER arg)
2023-01-29T18:57:43.961+0200 DEBUG Date current date
2023-01-29T18:57:43.961+0200 DEBUG Time current time
2023-01-29T18:57:43.961+0200 DEBUG Timestamp current timestamp
2023-01-29T18:57:43.961+0200 DEBUG Instant current_instant
2023-01-29T18:57:43.961+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-29T18:57:43.962+0200 DEBUG Integer day(DATE arg)
2023-01-29T18:57:43.962+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-29T18:57:43.962+0200 DEBUG LocalDate local date
2023-01-29T18:57:43.962+0200 DEBUG LocalDateTime local datetime
2023-01-29T18:57:43.962+0200 DEBUG LocalTime local time
2023-01-29T18:57:43.962+0200 DEBUG OffsetDateTime offset datetime
2023-01-29T18:57:43.962+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-29T18:57:43.966+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-29T18:57:44.286+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-29T18:57:44.287+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-29T18:57:44.562+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:25)
2023-01-29T18:57:44.647+0200 DEBUG Starting post-init callbacks
2023-01-29T18:57:44.647+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-29T18:57:44.647+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-29T18:57:44.736+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-29T18:57:44.736+0200 DEBUG  Version select: select id from users where id =?
2023-01-29T18:57:44.737+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-29T18:57:44.737+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-29T18:57:44.737+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-29T18:57:44.757+0200 DEBUG Created new SQL alias : u1_0
2023-01-29T18:57:44.759+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-29T18:57:44.800+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-29T18:57:44.810+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-29T18:57:44.981+0200 DEBUG Checking 0 named HQL queries
2023-01-29T18:57:44.981+0200 DEBUG Checking 0 named SQL queries
2023-01-29T18:57:45.045+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-29T18:57:45.142+0200 DEBUG No alter strings for table : users
2023-01-29T18:57:45.143+0200 DEBUG No alter strings for table : users_SEQ
2023-01-29T18:57:45.167+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-29T18:57:45.167+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-29T18:57:45.199+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-29T18:57:45.209+0200 DEBUG Registering SessionFactory: ee88c175-f3ae-4c83-ad39-8b54be87f6cc (<unnamed>)
2023-01-29T18:57:45.210+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-29T18:57:45.307+0200 DEBUG Statistics initialized [enabled=false]
2023-01-29T18:57:45.319+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-29T18:57:45.320+0200 DEBUG begin
2023-01-29T18:57:45.368+0200 DEBUG HQL : from Users
2023-01-29T18:57:45.623+0200 DEBUG Handling root path - Users
2023-01-29T18:57:45.632+0200 DEBUG Encountered implicit select clause : fromUsers
2023-01-29T18:57:45.640+0200 DEBUG SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `edu.itstep.sql.Users(24907579756300)`
            <- [root] - `edu.itstep.sql.Users(24907579756300)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `edu.itstep.sql.Users(24907579756300)`
          <- [root] - `edu.itstep.sql.Users(24907579756300)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-01-29T18:57:45.674+0200 DEBUG Created new SQL alias : u1_0
2023-01-29T18:57:45.675+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users(24907579756300))] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-29T18:57:45.685+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users(24907579756300)]
 |  +-BasicFetch [edu.itstep.sql.Users(24907579756300).password]
 |  \-BasicFetch [edu.itstep.sql.Users(24907579756300).userName]

2023-01-29T18:57:45.685+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users(24907579756300)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-29T18:57:45.697+0200 DEBUG Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-01-29T18:57:45.707+0200 DEBUG Initializer list
2023-01-29T18:57:45.708+0200 DEBUG     edu.itstep.sql.Users(24907579756300) -> EntityResultInitializer(edu.itstep.sql.Users(24907579756300))@1659537713 (SingleTableEntityPersister(edu.itstep.sql.Users))
2023-01-29T18:57:45.710+0200 DEBUG select u1_0.id,u1_0.password,u1_0.user_name from users u1_0
2023-01-29T18:57:45.717+0200 DEBUG Extracted JDBC value [0] - [352]
2023-01-29T18:57:45.717+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(24907579756300)): 352
2023-01-29T18:57:45.724+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(24907579756300)#352] : Users{id=352, userName='null', password='null'}
2023-01-29T18:57:45.724+0200 DEBUG Extracted JDBC value [1] - [test]
2023-01-29T18:57:45.724+0200 DEBUG Extracted JDBC value [2] - [user104]
2023-01-29T18:57:45.728+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(24907579756300)#352
2023-01-29T18:57:45.728+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-01-29T18:57:45.728+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(24907579756300)#352] - using loading instance
2023-01-29T18:57:45.728+0200 DEBUG Extracted JDBC value [0] - [402]
2023-01-29T18:57:45.728+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(24907579756300)): 402
2023-01-29T18:57:45.729+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(24907579756300)#402] : Users{id=402, userName='null', password='null'}
2023-01-29T18:57:45.729+0200 DEBUG Extracted JDBC value [1] - [$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm]
2023-01-29T18:57:45.729+0200 DEBUG Extracted JDBC value [2] - [user105]
2023-01-29T18:57:45.729+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(24907579756300)#402
2023-01-29T18:57:45.729+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-01-29T18:57:45.729+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(24907579756300)#402] - using loading instance
2023-01-29T18:57:45.729+0200 DEBUG Extracted JDBC value [0] - [452]
2023-01-29T18:57:45.729+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(24907579756300)): 452
2023-01-29T18:57:45.729+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(24907579756300)#452] : Users{id=452, userName='null', password='null'}
2023-01-29T18:57:45.729+0200 DEBUG Extracted JDBC value [1] - [$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i]
2023-01-29T18:57:45.729+0200 DEBUG Extracted JDBC value [2] - [null]
2023-01-29T18:57:45.729+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(24907579756300)#452
2023-01-29T18:57:45.729+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-01-29T18:57:45.729+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(24907579756300)#452] - using loading instance
2023-01-29T18:57:45.732+0200 DEBUG committing
2023-01-29T18:57:45.733+0200 DEBUG Processing flush-time cascades
2023-01-29T18:57:45.734+0200 DEBUG Dirty checking collections
2023-01-29T18:57:45.741+0200 DEBUG Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2023-01-29T18:57:45.741+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-29T18:57:45.742+0200 DEBUG Listing entities:
2023-01-29T18:57:45.744+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i, id=452, userName=null}
2023-01-29T18:57:45.744+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm, id=402, userName=user105}
2023-01-29T18:57:45.744+0200 DEBUG edu.itstep.sql.Users{password=test, id=352, userName=user104}
2023-01-29T18:57:45.749+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-29T18:57:45.750+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-29T18:58:38.423+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-01-29T18:58:38.457+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-01-29T18:58:38.466+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-01-29T18:58:38.510+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-01-29T18:58:38.513+0200 DEBUG HHH000206: hibernate.properties not found
2023-01-29T18:58:38.516+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-01-29T18:58:38.914+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-01-29T18:58:38.928+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-01-29T18:58:39.338+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-01-29T18:58:39.347+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-01-29T18:58:39.348+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-01-29T18:58:39.349+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-29T18:58:39.349+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-01-29T18:58:39.350+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-01-29T18:58:39.351+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-01-29T18:58:39.352+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-01-29T18:58:39.354+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-29T18:58:39.355+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-01-29T18:58:39.357+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-01-29T18:58:39.357+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-01-29T18:58:39.358+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-01-29T18:58:39.374+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-01-29T18:58:39.377+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-01-29T18:58:39.607+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-29T18:58:39.607+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-29T18:58:39.608+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-01-29T18:58:39.608+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-29T18:58:39.608+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-01-29T18:58:39.608+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-29T18:58:39.609+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-01-29T18:58:39.609+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-29T18:58:39.609+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-01-29T18:58:39.609+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-29T18:58:39.610+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-29T18:58:39.610+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-01-29T18:58:39.610+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-29T18:58:39.610+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-29T18:58:39.610+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-01-29T18:58:39.611+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-29T18:58:39.611+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-29T18:58:39.611+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-29T18:58:39.611+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-01-29T18:58:39.611+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-01-29T18:58:39.612+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-29T18:58:39.612+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-01-29T18:58:39.612+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-01-29T18:58:39.612+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-01-29T18:58:39.612+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-29T18:58:39.613+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-29T18:58:39.613+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-01-29T18:58:39.613+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-29T18:58:39.613+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-29T18:58:39.613+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-01-29T18:58:39.614+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-29T18:58:39.614+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-29T18:58:39.614+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-01-29T18:58:39.615+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-29T18:58:39.615+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-29T18:58:39.615+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-01-29T18:58:39.616+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-29T18:58:39.616+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-29T18:58:39.617+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-01-29T18:58:39.617+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-29T18:58:39.617+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-01-29T18:58:39.618+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-29T18:58:39.618+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-01-29T18:58:39.618+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-29T18:58:39.618+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-29T18:58:39.618+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-01-29T18:58:39.618+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-01-29T18:58:39.619+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-29T18:58:39.619+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-01-29T18:58:39.619+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-01-29T18:58:39.619+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-29T18:58:39.620+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-29T18:58:39.621+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-01-29T18:58:39.622+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-29T18:58:39.622+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-29T18:58:39.622+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-01-29T18:58:39.622+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-01-29T18:58:39.623+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-01-29T18:58:39.623+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-29T18:58:39.624+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-01-29T18:58:39.625+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-29T18:58:39.625+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-01-29T18:58:39.625+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-01-29T18:58:39.625+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-01-29T18:58:39.625+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-01-29T18:58:39.625+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-01-29T18:58:39.626+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-01-29T18:58:39.626+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-01-29T18:58:39.626+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-29T18:58:39.626+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-01-29T18:58:39.626+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-29T18:58:39.626+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-01-29T18:58:39.626+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-29T18:58:39.627+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-01-29T18:58:39.627+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-29T18:58:39.627+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-01-29T18:58:39.627+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-29T18:58:39.628+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-01-29T18:58:39.628+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-01-29T18:58:39.628+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-01-29T18:58:39.628+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-29T18:58:39.628+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-01-29T18:58:39.628+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-29T18:58:39.629+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-01-29T18:58:39.629+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-01-29T18:58:39.629+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-01-29T18:58:39.629+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-29T18:58:39.630+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-01-29T18:58:39.630+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-29T18:58:39.630+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-01-29T18:58:39.631+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-29T18:58:39.632+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-29T18:58:39.633+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-01-29T18:58:39.633+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-29T18:58:39.634+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-29T18:58:39.634+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-01-29T18:58:39.634+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-01-29T18:58:39.635+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-01-29T18:58:39.635+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-29T18:58:39.636+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-01-29T18:58:39.636+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-29T18:58:39.636+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-29T18:58:39.637+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-01-29T18:58:39.637+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-01-29T18:58:39.637+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-01-29T18:58:39.638+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-29T18:58:39.638+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-01-29T18:58:39.638+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-29T18:58:39.638+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-29T18:58:39.638+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-01-29T18:58:39.639+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-29T18:58:39.639+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-01-29T18:58:39.639+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-29T18:58:39.639+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-01-29T18:58:39.639+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-29T18:58:39.639+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-01-29T18:58:39.639+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-29T18:58:39.640+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-01-29T18:58:39.640+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-29T18:58:39.640+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-01-29T18:58:39.640+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-01-29T18:58:39.648+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-29T18:58:39.649+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-01-29T18:58:39.651+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-01-29T18:58:39.651+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-01-29T18:58:39.652+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-01-29T18:58:39.652+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-01-29T18:58:39.652+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-01-29T18:58:39.652+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-01-29T18:58:39.652+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-01-29T18:58:39.652+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-01-29T18:58:39.653+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-01-29T18:58:39.714+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-01-29T18:58:39.723+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-01-29T18:58:39.724+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-01-29T18:58:39.724+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-01-29T18:58:39.724+0200 INFO HHH10001003: Autocommit mode: false
2023-01-29T18:58:39.729+0200 DEBUG Initializing Connection pool with 1 Connections
2023-01-29T18:58:39.730+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-01-29T18:58:40.431+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-01-29T18:58:40.432+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-01-29T18:58:40.432+0200 DEBUG JDBC version : 4.2
2023-01-29T18:58:40.518+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-01-29T18:58:40.530+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-01-29T18:58:40.530+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-01-29T18:58:40.553+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-01-29T18:58:40.554+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-01-29T18:58:40.554+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-01-29T18:58:40.554+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-01-29T18:58:40.554+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-01-29T18:58:40.554+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-01-29T18:58:40.554+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-01-29T18:58:40.554+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-01-29T18:58:40.555+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-01-29T18:58:40.556+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-01-29T18:58:40.557+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-01-29T18:58:40.557+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-01-29T18:58:40.559+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-29T18:58:40.560+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-01-29T18:58:40.563+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-01-29T18:58:40.564+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-01-29T18:58:40.572+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-29T18:58:40.572+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-29T18:58:40.572+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-01-29T18:58:40.572+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-29T18:58:40.572+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-29T18:58:40.572+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-01-29T18:58:40.574+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-01-29T18:58:40.615+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-01-29T18:58:40.657+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-01-29T18:58:40.683+0200 DEBUG Import with entity name Users
2023-01-29T18:58:40.699+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-01-29T18:58:40.716+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-01-29T18:58:40.746+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-01-29T18:58:40.750+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-29T18:58:40.750+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-29T18:58:40.754+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-01-29T18:58:40.764+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-01-29T18:58:40.779+0200 DEBUG building BasicValue for id
2023-01-29T18:58:40.785+0200 DEBUG Skipping column re-registration: users.id
2023-01-29T18:58:40.787+0200 DEBUG Building property id
2023-01-29T18:58:40.790+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-01-29T18:58:40.791+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-01-29T18:58:40.791+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-01-29T18:58:40.791+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-01-29T18:58:40.792+0200 DEBUG building BasicValue for password
2023-01-29T18:58:40.792+0200 DEBUG Skipping column re-registration: users.password
2023-01-29T18:58:40.792+0200 DEBUG Building property password
2023-01-29T18:58:40.793+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-01-29T18:58:40.793+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-01-29T18:58:40.793+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-01-29T18:58:40.793+0200 DEBUG building BasicValue for userName
2023-01-29T18:58:40.793+0200 DEBUG Skipping column re-registration: users.user_name
2023-01-29T18:58:40.793+0200 DEBUG Building property userName
2023-01-29T18:58:40.800+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-01-29T18:58:40.801+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-01-29T18:58:40.804+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-01-29T18:58:40.807+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-01-29T18:58:40.906+0200 DEBUG Building session factory
2023-01-29T18:58:41.012+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-29T18:58:41.021+0200 DEBUG Session factory constructed with filter configurations : {}
2023-01-29T18:58:41.021+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, hibernate.use_sql_comments=false, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=false, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, use_sql_comments=false, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-01-29T18:58:41.036+0200 DEBUG Instantiated session factory
2023-01-29T18:58:41.067+0200 DEBUG Starting QueryPlanCache(2048)
2023-01-29T18:58:41.219+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-01-29T18:58:41.220+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-01-29T18:58:41.221+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-01-29T18:58:41.222+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-01-29T18:58:41.224+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-01-29T18:58:41.226+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-01-29T18:58:41.226+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-01-29T18:58:41.227+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-01-29T18:58:41.227+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-01-29T18:58:41.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-01-29T18:58:41.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-01-29T18:58:41.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-01-29T18:58:41.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-01-29T18:58:41.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-01-29T18:58:41.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-01-29T18:58:41.228+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-01-29T18:58:41.229+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-01-29T18:58:41.229+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-01-29T18:58:41.229+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-01-29T18:58:41.229+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-01-29T18:58:41.230+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-01-29T18:58:41.230+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-01-29T18:58:41.230+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-01-29T18:58:41.230+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-01-29T18:58:41.232+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-01-29T18:58:41.235+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-01-29T18:58:41.235+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-01-29T18:58:41.235+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-01-29T18:58:41.235+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-01-29T18:58:41.237+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-01-29T18:58:41.237+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-01-29T18:58:41.237+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-01-29T18:58:41.238+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-01-29T18:58:41.238+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-01-29T18:58:41.241+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-01-29T18:58:41.241+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-01-29T18:58:41.245+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-01-29T18:58:41.247+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-01-29T18:58:41.248+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-01-29T18:58:41.250+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-01-29T18:58:41.250+0200 DEBUG Registering alternate key : length -> character_length
2023-01-29T18:58:41.253+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-01-29T18:58:41.254+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-01-29T18:58:41.255+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-01-29T18:58:41.257+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-01-29T18:58:41.257+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-01-29T18:58:41.258+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-01-29T18:58:41.258+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-01-29T18:58:41.258+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-01-29T18:58:41.259+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-01-29T18:58:41.259+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-01-29T18:58:41.259+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-01-29T18:58:41.260+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-01-29T18:58:41.261+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-01-29T18:58:41.264+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-01-29T18:58:41.265+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-01-29T18:58:41.266+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-01-29T18:58:41.266+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-01-29T18:58:41.266+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-01-29T18:58:41.267+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-01-29T18:58:41.267+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-01-29T18:58:41.267+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-01-29T18:58:41.267+0200 DEBUG Registering alternate key : current date -> current_date
2023-01-29T18:58:41.267+0200 DEBUG Registering alternate key : current time -> current_time
2023-01-29T18:58:41.267+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-01-29T18:58:41.267+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-01-29T18:58:41.267+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-01-29T18:58:41.268+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-01-29T18:58:41.268+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-01-29T18:58:41.268+0200 DEBUG Registering alternate key : local date -> local_date
2023-01-29T18:58:41.268+0200 DEBUG Registering alternate key : local time -> local_time
2023-01-29T18:58:41.268+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-01-29T18:58:41.268+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-01-29T18:58:41.268+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-01-29T18:58:41.268+0200 DEBUG Registering alternate key : current_instant -> instant
2023-01-29T18:58:41.269+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-01-29T18:58:41.269+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-01-29T18:58:41.269+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-01-29T18:58:41.269+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-01-29T18:58:41.269+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-01-29T18:58:41.269+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-01-29T18:58:41.269+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-01-29T18:58:41.270+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-01-29T18:58:41.270+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-01-29T18:58:41.270+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-01-29T18:58:41.270+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-01-29T18:58:41.270+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-01-29T18:58:41.270+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-01-29T18:58:41.270+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-01-29T18:58:41.271+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-01-29T18:58:41.271+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-01-29T18:58:41.272+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-01-29T18:58:41.272+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-01-29T18:58:41.272+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-01-29T18:58:41.272+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-01-29T18:58:41.272+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-01-29T18:58:41.272+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-01-29T18:58:41.272+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-01-29T18:58:41.272+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-01-29T18:58:41.273+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-01-29T18:58:41.273+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-01-29T18:58:41.273+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-01-29T18:58:41.273+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-01-29T18:58:41.273+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-01-29T18:58:41.273+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-01-29T18:58:41.273+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-01-29T18:58:41.273+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-01-29T18:58:41.273+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-01-29T18:58:41.273+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-01-29T18:58:41.274+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-01-29T18:58:41.274+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-01-29T18:58:41.274+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-01-29T18:58:41.274+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-01-29T18:58:41.274+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-01-29T18:58:41.274+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-01-29T18:58:41.275+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-01-29T18:58:41.275+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-01-29T18:58:41.275+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-01-29T18:58:41.275+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-01-29T18:58:41.276+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-01-29T18:58:41.276+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-01-29T18:58:41.276+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-01-29T18:58:41.276+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-01-29T18:58:41.276+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-01-29T18:58:41.276+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-01-29T18:58:41.276+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-01-29T18:58:41.276+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-01-29T18:58:41.276+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-01-29T18:58:41.276+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-01-29T18:58:41.276+0200 DEBUG Registering alternate key : truncate -> trunc
2023-01-29T18:58:41.277+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-01-29T18:58:41.277+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-01-29T18:58:41.277+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-01-29T18:58:41.277+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-01-29T18:58:41.277+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-01-29T18:58:41.277+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-01-29T18:58:41.277+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-01-29T18:58:41.277+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-01-29T18:58:41.277+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-01-29T18:58:41.277+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-01-29T18:58:41.277+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-01-29T18:58:41.277+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-01-29T18:58:41.278+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-01-29T18:58:41.279+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-01-29T18:58:41.279+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-01-29T18:58:41.279+0200 DEBUG Registering alternate key : char -> chr
2023-01-29T18:58:41.279+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-01-29T18:58:41.279+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-01-29T18:58:41.281+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-01-29T18:58:41.281+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-01-29T18:58:41.281+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-01-29T18:58:41.281+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-01-29T18:58:41.283+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-01-29T18:58:41.285+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-01-29T18:58:41.286+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-01-29T18:58:41.286+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-01-29T18:58:41.286+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-01-29T18:58:41.287+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-01-29T18:58:41.296+0200 DEBUG abs(NUMERIC arg)
2023-01-29T18:58:41.296+0200 DEBUG Double acos(NUMERIC arg)
2023-01-29T18:58:41.297+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-01-29T18:58:41.297+0200 DEBUG addtime(TIME datetime, TIME time)
2023-01-29T18:58:41.297+0200 DEBUG Boolean any(BOOLEAN arg)
2023-01-29T18:58:41.297+0200 DEBUG Integer ascii(STRING arg)
2023-01-29T18:58:41.297+0200 DEBUG Double asin(NUMERIC arg)
2023-01-29T18:58:41.297+0200 DEBUG Double atan(NUMERIC arg)
2023-01-29T18:58:41.300+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-01-29T18:58:41.300+0200 DEBUG Double avg(NUMERIC arg)
2023-01-29T18:58:41.300+0200 DEBUG bit_and(arg)
2023-01-29T18:58:41.300+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-01-29T18:58:41.300+0200 DEBUG bit_or(arg)
2023-01-29T18:58:41.301+0200 DEBUG bitand(arg0, arg1)
2023-01-29T18:58:41.301+0200 DEBUG bitnot(arg)
2023-01-29T18:58:41.301+0200 DEBUG bitor(arg0, arg1)
2023-01-29T18:58:41.301+0200 DEBUG bitxor(arg0, arg1)
2023-01-29T18:58:41.301+0200 DEBUG cast(arg as Type)
2023-01-29T18:58:41.301+0200 DEBUG ceiling(NUMERIC arg)
2023-01-29T18:58:41.301+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-01-29T18:58:41.301+0200 DEBUG Character chr(INTEGER arg)
2023-01-29T18:58:41.301+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-01-29T18:58:41.301+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-01-29T18:58:41.301+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-01-29T18:58:41.303+0200 DEBUG Double cos(NUMERIC arg)
2023-01-29T18:58:41.303+0200 DEBUG Double cosh(NUMERIC arg)
2023-01-29T18:58:41.303+0200 DEBUG Double cot(NUMERIC arg)
2023-01-29T18:58:41.304+0200 DEBUG Long count([distinct ]{arg|*})
2023-01-29T18:58:41.304+0200 DEBUG Integer crc32(arg)
2023-01-29T18:58:41.304+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-01-29T18:58:41.304+0200 DEBUG Date curdate()
2023-01-29T18:58:41.304+0200 DEBUG Date current_date
2023-01-29T18:58:41.304+0200 DEBUG Time current_time
2023-01-29T18:58:41.305+0200 DEBUG Timestamp current_timestamp
2023-01-29T18:58:41.305+0200 DEBUG Time curtime()
2023-01-29T18:58:41.305+0200 DEBUG Date date(arg)
2023-01-29T18:58:41.305+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-01-29T18:58:41.305+0200 DEBUG Integer day(DATE arg)
2023-01-29T18:58:41.305+0200 DEBUG String dayname(DATE arg)
2023-01-29T18:58:41.305+0200 DEBUG Integer dayofmonth(DATE arg)
2023-01-29T18:58:41.305+0200 DEBUG Integer dayofweek(DATE arg)
2023-01-29T18:58:41.305+0200 DEBUG Integer dayofyear(DATE arg)
2023-01-29T18:58:41.305+0200 DEBUG Double degrees(NUMERIC arg)
2023-01-29T18:58:41.305+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-01-29T18:58:41.305+0200 DEBUG Boolean every(BOOLEAN arg)
2023-01-29T18:58:41.306+0200 DEBUG Double exp(NUMERIC arg)
2023-01-29T18:58:41.306+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-01-29T18:58:41.306+0200 DEBUG first_valueANY value
2023-01-29T18:58:41.306+0200 DEBUG floor(NUMERIC arg)
2023-01-29T18:58:41.306+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-01-29T18:58:41.306+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-29T18:58:41.306+0200 DEBUG Integer hour(TIME arg)
2023-01-29T18:58:41.306+0200 DEBUG ifnull(arg0, arg1)
2023-01-29T18:58:41.306+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-01-29T18:58:41.306+0200 DEBUG Instant instant
2023-01-29T18:58:41.306+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-01-29T18:58:41.306+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-01-29T18:58:41.306+0200 DEBUG Date last_day(DATE arg)
2023-01-29T18:58:41.307+0200 DEBUG last_valueANY value
2023-01-29T18:58:41.307+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-01-29T18:58:41.307+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-01-29T18:58:41.307+0200 DEBUG String left(STRING string, INTEGER length)
2023-01-29T18:58:41.308+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-01-29T18:58:41.308+0200 DEBUG Double ln(NUMERIC arg)
2023-01-29T18:58:41.308+0200 DEBUG LocalDate local_date
2023-01-29T18:58:41.308+0200 DEBUG LocalDateTime local_datetime
2023-01-29T18:58:41.308+0200 DEBUG LocalTime local_time
2023-01-29T18:58:41.308+0200 DEBUG Timestamp localtime
2023-01-29T18:58:41.314+0200 DEBUG Timestamp localtimestamp
2023-01-29T18:58:41.314+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-01-29T18:58:41.314+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-01-29T18:58:41.315+0200 DEBUG Double log10(NUMERIC arg)
2023-01-29T18:58:41.315+0200 DEBUG Double log2(NUMERIC arg)
2023-01-29T18:58:41.315+0200 DEBUG String lower(STRING string)
2023-01-29T18:58:41.315+0200 DEBUG String lpad(string, length[, padding])
2023-01-29T18:58:41.315+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-01-29T18:58:41.316+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-01-29T18:58:41.316+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-01-29T18:58:41.316+0200 DEBUG max(COMPARABLE arg)
2023-01-29T18:58:41.316+0200 DEBUG String md5(arg)
2023-01-29T18:58:41.316+0200 DEBUG Integer microsecond(TIME arg)
2023-01-29T18:58:41.316+0200 DEBUG min(COMPARABLE arg)
2023-01-29T18:58:41.316+0200 DEBUG Integer minute(TIME arg)
2023-01-29T18:58:41.316+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-01-29T18:58:41.316+0200 DEBUG Integer month(DATE arg)
2023-01-29T18:58:41.316+0200 DEBUG String monthname(DATE arg)
2023-01-29T18:58:41.316+0200 DEBUG Timestamp now()
2023-01-29T18:58:41.317+0200 DEBUG nth_valueANY value, INTEGER nth
2023-01-29T18:58:41.317+0200 DEBUG nullif(arg0, arg1)
2023-01-29T18:58:41.317+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-01-29T18:58:41.317+0200 DEBUG OffsetDateTime offset_datetime
2023-01-29T18:58:41.317+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-01-29T18:58:41.317+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-01-29T18:58:41.317+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-01-29T18:58:41.317+0200 DEBUG Double pi
2023-01-29T18:58:41.317+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-01-29T18:58:41.317+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-01-29T18:58:41.317+0200 DEBUG Integer quarter(DATE arg)
2023-01-29T18:58:41.317+0200 DEBUG Double radians(NUMERIC arg)
2023-01-29T18:58:41.317+0200 DEBUG Double rand([INTEGER seed])
2023-01-29T18:58:41.317+0200 DEBUG Long rank([arg0[, ...]])
2023-01-29T18:58:41.317+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-01-29T18:58:41.318+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-01-29T18:58:41.318+0200 DEBUG String reverse(STRING arg)
2023-01-29T18:58:41.318+0200 DEBUG String right(STRING string, INTEGER length)
2023-01-29T18:58:41.318+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-01-29T18:58:41.318+0200 DEBUG Long row_number()
2023-01-29T18:58:41.318+0200 DEBUG String rpad(string, length[, padding])
2023-01-29T18:58:41.318+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-01-29T18:58:41.318+0200 DEBUG Integer second(TIME arg)
2023-01-29T18:58:41.318+0200 DEBUG String sha(arg)
2023-01-29T18:58:41.318+0200 DEBUG String sha1(arg)
2023-01-29T18:58:41.319+0200 DEBUG String sha2(arg0, arg1)
2023-01-29T18:58:41.319+0200 DEBUG Integer sign(NUMERIC arg)
2023-01-29T18:58:41.319+0200 DEBUG Double sin(NUMERIC arg)
2023-01-29T18:58:41.319+0200 DEBUG Double sinh(NUMERIC arg)
2023-01-29T18:58:41.319+0200 DEBUG String soundex(arg)
2023-01-29T18:58:41.319+0200 DEBUG String space(INTEGER arg)
2023-01-29T18:58:41.320+0200 DEBUG Object sql
2023-01-29T18:58:41.320+0200 DEBUG Double sqrt(NUMERIC arg)
2023-01-29T18:58:41.320+0200 DEBUG Double stddev(NUMERIC arg)
2023-01-29T18:58:41.320+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-01-29T18:58:41.320+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-01-29T18:58:41.320+0200 DEBUG String str(arg)
2023-01-29T18:58:41.320+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-01-29T18:58:41.320+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-01-29T18:58:41.320+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-01-29T18:58:41.321+0200 DEBUG subtime(TIME datetime, TIME time)
2023-01-29T18:58:41.321+0200 DEBUG sum(arg)
2023-01-29T18:58:41.321+0200 DEBUG Timestamp sysdate()
2023-01-29T18:58:41.321+0200 DEBUG Double tan(NUMERIC arg)
2023-01-29T18:58:41.321+0200 DEBUG Double tanh(NUMERIC arg)
2023-01-29T18:58:41.321+0200 DEBUG String time(arg)
2023-01-29T18:58:41.321+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-01-29T18:58:41.322+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-29T18:58:41.324+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-01-29T18:58:41.324+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-01-29T18:58:41.324+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-01-29T18:58:41.324+0200 DEBUG String upper(STRING string)
2023-01-29T18:58:41.324+0200 DEBUG Date utc_date
2023-01-29T18:58:41.324+0200 DEBUG Time utc_time
2023-01-29T18:58:41.324+0200 DEBUG Timestamp utc_timestamp
2023-01-29T18:58:41.324+0200 DEBUG Double var_pop(NUMERIC arg)
2023-01-29T18:58:41.324+0200 DEBUG Double var_samp(NUMERIC arg)
2023-01-29T18:58:41.325+0200 DEBUG Double variance(NUMERIC arg)
2023-01-29T18:58:41.325+0200 DEBUG Integer week(DATE arg)
2023-01-29T18:58:41.325+0200 DEBUG Integer year(DATE arg)
2023-01-29T18:58:41.326+0200 DEBUG Character char(INTEGER arg)
2023-01-29T18:58:41.326+0200 DEBUG Date current date
2023-01-29T18:58:41.326+0200 DEBUG Time current time
2023-01-29T18:58:41.326+0200 DEBUG Timestamp current timestamp
2023-01-29T18:58:41.326+0200 DEBUG Instant current_instant
2023-01-29T18:58:41.326+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-01-29T18:58:41.326+0200 DEBUG Integer day(DATE arg)
2023-01-29T18:58:41.326+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-01-29T18:58:41.326+0200 DEBUG LocalDate local date
2023-01-29T18:58:41.326+0200 DEBUG LocalDateTime local datetime
2023-01-29T18:58:41.326+0200 DEBUG LocalTime local time
2023-01-29T18:58:41.327+0200 DEBUG OffsetDateTime offset datetime
2023-01-29T18:58:41.327+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-01-29T18:58:41.328+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-01-29T18:58:41.473+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-01-29T18:58:41.474+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-01-29T18:58:41.898+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:25)
2023-01-29T18:58:41.962+0200 DEBUG Starting post-init callbacks
2023-01-29T18:58:41.962+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-01-29T18:58:41.963+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-01-29T18:58:42.057+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-01-29T18:58:42.057+0200 DEBUG  Version select: select id from users where id =?
2023-01-29T18:58:42.058+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-01-29T18:58:42.058+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-01-29T18:58:42.058+0200 DEBUG  Delete (0): delete from users where id=?
2023-01-29T18:58:42.072+0200 DEBUG Created new SQL alias : u1_0
2023-01-29T18:58:42.075+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-29T18:58:42.094+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-01-29T18:58:42.098+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-29T18:58:42.161+0200 DEBUG Checking 0 named HQL queries
2023-01-29T18:58:42.161+0200 DEBUG Checking 0 named SQL queries
2023-01-29T18:58:42.252+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-01-29T18:58:42.304+0200 DEBUG No alter strings for table : users
2023-01-29T18:58:42.304+0200 DEBUG No alter strings for table : users_SEQ
2023-01-29T18:58:42.321+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-01-29T18:58:42.321+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-01-29T18:58:42.337+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-01-29T18:58:42.339+0200 DEBUG Registering SessionFactory: 7d3b3389-348f-416a-8a49-f9c675bf69cd (<unnamed>)
2023-01-29T18:58:42.339+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-01-29T18:58:42.430+0200 DEBUG Statistics initialized [enabled=false]
2023-01-29T18:58:42.440+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-01-29T18:58:42.440+0200 DEBUG begin
2023-01-29T18:58:42.473+0200 DEBUG HQL : from Users
2023-01-29T18:58:42.646+0200 DEBUG Handling root path - Users
2023-01-29T18:58:42.658+0200 DEBUG Encountered implicit select clause : fromUsers
2023-01-29T18:58:42.668+0200 DEBUG SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `edu.itstep.sql.Users(24964605465100)`
            <- [root] - `edu.itstep.sql.Users(24964605465100)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `edu.itstep.sql.Users(24964605465100)`
          <- [root] - `edu.itstep.sql.Users(24964605465100)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-01-29T18:58:42.701+0200 DEBUG Created new SQL alias : u1_0
2023-01-29T18:58:42.701+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users(24964605465100))] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-01-29T18:58:42.710+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users(24964605465100)]
 |  +-BasicFetch [edu.itstep.sql.Users(24964605465100).password]
 |  \-BasicFetch [edu.itstep.sql.Users(24964605465100).userName]

2023-01-29T18:58:42.711+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users(24964605465100)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-01-29T18:58:42.724+0200 DEBUG Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-01-29T18:58:42.733+0200 DEBUG Initializer list
2023-01-29T18:58:42.734+0200 DEBUG     edu.itstep.sql.Users(24964605465100) -> EntityResultInitializer(edu.itstep.sql.Users(24964605465100))@1659537713 (SingleTableEntityPersister(edu.itstep.sql.Users))
2023-01-29T18:58:42.736+0200 DEBUG select u1_0.id,u1_0.password,u1_0.user_name from users u1_0
2023-01-29T18:58:42.742+0200 DEBUG Extracted JDBC value [0] - [352]
2023-01-29T18:58:42.742+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(24964605465100)): 352
2023-01-29T18:58:42.749+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(24964605465100)#352] : Users{id=352, userName='null', password='null'}
2023-01-29T18:58:42.750+0200 DEBUG Extracted JDBC value [1] - [test]
2023-01-29T18:58:42.750+0200 DEBUG Extracted JDBC value [2] - [user104]
2023-01-29T18:58:42.756+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(24964605465100)#352
2023-01-29T18:58:42.757+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-01-29T18:58:42.757+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(24964605465100)#352] - using loading instance
2023-01-29T18:58:42.757+0200 DEBUG Extracted JDBC value [0] - [402]
2023-01-29T18:58:42.757+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(24964605465100)): 402
2023-01-29T18:58:42.758+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(24964605465100)#402] : Users{id=402, userName='null', password='null'}
2023-01-29T18:58:42.758+0200 DEBUG Extracted JDBC value [1] - [$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm]
2023-01-29T18:58:42.758+0200 DEBUG Extracted JDBC value [2] - [user105]
2023-01-29T18:58:42.758+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(24964605465100)#402
2023-01-29T18:58:42.758+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-01-29T18:58:42.758+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(24964605465100)#402] - using loading instance
2023-01-29T18:58:42.758+0200 DEBUG Extracted JDBC value [0] - [452]
2023-01-29T18:58:42.758+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(24964605465100)): 452
2023-01-29T18:58:42.758+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(24964605465100)#452] : Users{id=452, userName='null', password='null'}
2023-01-29T18:58:42.758+0200 DEBUG Extracted JDBC value [1] - [$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i]
2023-01-29T18:58:42.758+0200 DEBUG Extracted JDBC value [2] - [null]
2023-01-29T18:58:42.758+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(24964605465100)#452
2023-01-29T18:58:42.758+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-01-29T18:58:42.759+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(24964605465100)#452] - using loading instance
2023-01-29T18:58:42.761+0200 DEBUG committing
2023-01-29T18:58:42.761+0200 DEBUG Processing flush-time cascades
2023-01-29T18:58:42.765+0200 DEBUG Dirty checking collections
2023-01-29T18:58:42.770+0200 DEBUG Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2023-01-29T18:58:42.770+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-01-29T18:58:42.771+0200 DEBUG Listing entities:
2023-01-29T18:58:42.772+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i, id=452, userName=null}
2023-01-29T18:58:42.772+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm, id=402, userName=user105}
2023-01-29T18:58:42.772+0200 DEBUG edu.itstep.sql.Users{password=test, id=352, userName=user104}
2023-01-29T18:58:42.776+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-29T18:58:42.779+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-01-29T18:59:11.401+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-02-03T19:10:57.430+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-02-03T19:10:59.201+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-02-03T19:11:29.313+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-02-03T19:11:30.578+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-02-03T19:11:31.279+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-02-03T19:11:47.760+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-02-03T19:11:47.790+0200 DEBUG Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
2023-02-03T19:11:47.801+0200 DEBUG Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2023-02-03T19:11:47.844+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-02-03T19:11:47.848+0200 DEBUG HHH000206: hibernate.properties not found
2023-02-03T19:11:47.850+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-02-03T19:11:48.224+0200 DEBUG Checking public/system identifiers `-//Hibernate/Hibernate Configuration DTD 3.0//EN`/`http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd` as DTD references
2023-02-03T19:11:48.238+0200 DEBUG cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2023-02-03T19:11:48.738+0200 DEBUG Resolving IdentifierGenerator instances will not use CDI as it was not configured
2023-02-03T19:11:48.745+0200 DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2023-02-03T19:11:48.746+0200 DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2023-02-03T19:11:48.748+0200 DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2023-02-03T19:11:48.748+0200 DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2023-02-03T19:11:48.749+0200 DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2023-02-03T19:11:48.751+0200 DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2023-02-03T19:11:48.751+0200 DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2023-02-03T19:11:48.753+0200 DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-02-03T19:11:48.754+0200 DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2023-02-03T19:11:48.756+0200 DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2023-02-03T19:11:48.756+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2023-02-03T19:11:48.757+0200 DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2023-02-03T19:11:48.772+0200 DEBUG Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2023-02-03T19:11:48.774+0200 DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2023-02-03T19:11:49.058+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-02-03T19:11:49.059+0200 DEBUG Adding type registration boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-02-03T19:11:49.060+0200 DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@e98770d
2023-02-03T19:11:49.060+0200 DEBUG Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-02-03T19:11:49.060+0200 DEBUG Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@1ae67cad
2023-02-03T19:11:49.060+0200 DEBUG Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-02-03T19:11:49.061+0200 DEBUG Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2f6e28bc
2023-02-03T19:11:49.062+0200 DEBUG Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-02-03T19:11:49.062+0200 DEBUG Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@7c098bb3
2023-02-03T19:11:49.063+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-02-03T19:11:49.063+0200 DEBUG Adding type registration byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-02-03T19:11:49.063+0200 DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@31e4bb20
2023-02-03T19:11:49.063+0200 DEBUG Adding type registration binary -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-02-03T19:11:49.064+0200 DEBUG Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-02-03T19:11:49.064+0200 DEBUG Adding type registration [B -> org.hibernate.type.BasicTypeReference@18cebaa5
2023-02-03T19:11:49.064+0200 DEBUG Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-02-03T19:11:49.064+0200 DEBUG Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-02-03T19:11:49.065+0200 DEBUG Adding type registration Byte[] -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-02-03T19:11:49.066+0200 DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.BasicTypeReference@463b4ac8
2023-02-03T19:11:49.067+0200 DEBUG Adding type registration image -> org.hibernate.type.BasicTypeReference@765f05af
2023-02-03T19:11:49.067+0200 DEBUG Adding type registration blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-02-03T19:11:49.067+0200 DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@62f68dff
2023-02-03T19:11:49.067+0200 DEBUG Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@f001896
2023-02-03T19:11:49.068+0200 DEBUG Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@13f17eb4
2023-02-03T19:11:49.068+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-02-03T19:11:49.068+0200 DEBUG Adding type registration short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-02-03T19:11:49.068+0200 DEBUG Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@1d0d6318
2023-02-03T19:11:49.068+0200 DEBUG Adding type registration integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-02-03T19:11:49.069+0200 DEBUG Adding type registration int -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-02-03T19:11:49.069+0200 DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@4bc28c33
2023-02-03T19:11:49.070+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-02-03T19:11:49.071+0200 DEBUG Adding type registration long -> org.hibernate.type.BasicTypeReference@4409e975
2023-02-03T19:11:49.072+0200 DEBUG Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@4409e975
2023-02-03T19:11:49.073+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-02-03T19:11:49.074+0200 DEBUG Adding type registration float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-02-03T19:11:49.074+0200 DEBUG Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@5c153b9e
2023-02-03T19:11:49.074+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-02-03T19:11:49.074+0200 DEBUG Adding type registration double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-02-03T19:11:49.075+0200 DEBUG Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@2a7686a7
2023-02-03T19:11:49.075+0200 DEBUG Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@758a34ce
2023-02-03T19:11:49.075+0200 DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@758a34ce
2023-02-03T19:11:49.076+0200 DEBUG Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-02-03T19:11:49.076+0200 DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@7ec3394b
2023-02-03T19:11:49.076+0200 DEBUG Adding type registration character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-02-03T19:11:49.076+0200 DEBUG Adding type registration char -> org.hibernate.type.BasicTypeReference@bff34c6
2023-02-03T19:11:49.077+0200 DEBUG Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@bff34c6
2023-02-03T19:11:49.077+0200 DEBUG Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@1522d8a0
2023-02-03T19:11:49.078+0200 DEBUG Adding type registration string -> org.hibernate.type.BasicTypeReference@312ab28e
2023-02-03T19:11:49.079+0200 DEBUG Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@312ab28e
2023-02-03T19:11:49.079+0200 DEBUG Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5644dc81
2023-02-03T19:11:49.079+0200 DEBUG Adding type registration characters -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-02-03T19:11:49.080+0200 DEBUG Adding type registration char[] -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-02-03T19:11:49.080+0200 DEBUG Adding type registration [C -> org.hibernate.type.BasicTypeReference@246f8b8b
2023-02-03T19:11:49.080+0200 DEBUG Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@278bb07e
2023-02-03T19:11:49.080+0200 DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.BasicTypeReference@278bb07e
2023-02-03T19:11:49.081+0200 DEBUG Adding type registration Character[] -> org.hibernate.type.BasicTypeReference@278bb07e
2023-02-03T19:11:49.081+0200 DEBUG Adding type registration text -> org.hibernate.type.BasicTypeReference@4351c8c3
2023-02-03T19:11:49.081+0200 DEBUG Adding type registration ntext -> org.hibernate.type.BasicTypeReference@3381b4fc
2023-02-03T19:11:49.081+0200 DEBUG Adding type registration clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-02-03T19:11:49.082+0200 DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@6bea52d4
2023-02-03T19:11:49.082+0200 DEBUG Adding type registration nclob -> org.hibernate.type.BasicTypeReference@11981797
2023-02-03T19:11:49.082+0200 DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@11981797
2023-02-03T19:11:49.082+0200 DEBUG Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@5c42d2b7
2023-02-03T19:11:49.082+0200 DEBUG Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@625abb97
2023-02-03T19:11:49.083+0200 DEBUG Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@5b1f29fa
2023-02-03T19:11:49.084+0200 DEBUG Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@aeab9a1
2023-02-03T19:11:49.084+0200 DEBUG Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@40f70521
2023-02-03T19:11:49.084+0200 DEBUG Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@774698ab
2023-02-03T19:11:49.089+0200 DEBUG Adding type registration Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-02-03T19:11:49.089+0200 DEBUG Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@55342f40
2023-02-03T19:11:49.089+0200 DEBUG Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-02-03T19:11:49.089+0200 DEBUG Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@a4ca3f6
2023-02-03T19:11:49.089+0200 DEBUG Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-02-03T19:11:49.090+0200 DEBUG Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@72ea6193
2023-02-03T19:11:49.090+0200 DEBUG Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-02-03T19:11:49.090+0200 DEBUG Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@31aa3ca5
2023-02-03T19:11:49.090+0200 DEBUG Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-02-03T19:11:49.090+0200 DEBUG Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@45905bff
2023-02-03T19:11:49.090+0200 DEBUG Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a2c13a8
2023-02-03T19:11:49.091+0200 DEBUG Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@b6b1987
2023-02-03T19:11:49.091+0200 DEBUG Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-02-03T19:11:49.091+0200 DEBUG Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@6b44435b
2023-02-03T19:11:49.091+0200 DEBUG Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-02-03T19:11:49.092+0200 DEBUG Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@2ccca26f
2023-02-03T19:11:49.092+0200 DEBUG Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@66b7550d
2023-02-03T19:11:49.092+0200 DEBUG Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3543df7d
2023-02-03T19:11:49.092+0200 DEBUG Adding type registration date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-02-03T19:11:49.092+0200 DEBUG Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7c541c15
2023-02-03T19:11:49.094+0200 DEBUG Adding type registration time -> org.hibernate.type.BasicTypeReference@3542162a
2023-02-03T19:11:49.094+0200 DEBUG Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@3542162a
2023-02-03T19:11:49.095+0200 DEBUG Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-02-03T19:11:49.095+0200 DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@698122b2
2023-02-03T19:11:49.095+0200 DEBUG Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@698122b2
2023-02-03T19:11:49.096+0200 DEBUG Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-02-03T19:11:49.096+0200 DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-02-03T19:11:49.096+0200 DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4212a0c8
2023-02-03T19:11:49.096+0200 DEBUG Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@1e7aa82b
2023-02-03T19:11:49.096+0200 DEBUG Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@3b2c0e88
2023-02-03T19:11:49.097+0200 DEBUG Adding type registration instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-02-03T19:11:49.097+0200 DEBUG Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5bd82fed
2023-02-03T19:11:49.097+0200 DEBUG Adding type registration uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-02-03T19:11:49.097+0200 DEBUG Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-02-03T19:11:49.098+0200 DEBUG Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@c1bd0be
2023-02-03T19:11:49.098+0200 DEBUG Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@476b0ae6
2023-02-03T19:11:49.098+0200 DEBUG Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@1c6804cd
2023-02-03T19:11:49.098+0200 DEBUG Adding type registration class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-02-03T19:11:49.098+0200 DEBUG Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@655f7ea
2023-02-03T19:11:49.098+0200 DEBUG Adding type registration currency -> org.hibernate.type.BasicTypeReference@549949be
2023-02-03T19:11:49.099+0200 DEBUG Adding type registration Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-02-03T19:11:49.099+0200 DEBUG Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@549949be
2023-02-03T19:11:49.099+0200 DEBUG Adding type registration locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-02-03T19:11:49.099+0200 DEBUG Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@4b3a45f1
2023-02-03T19:11:49.099+0200 DEBUG Adding type registration serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-02-03T19:11:49.099+0200 DEBUG Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@17a87e37
2023-02-03T19:11:49.099+0200 DEBUG Adding type registration timezone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-02-03T19:11:49.100+0200 DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@3eeb318f
2023-02-03T19:11:49.100+0200 DEBUG Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-02-03T19:11:49.100+0200 DEBUG Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@20a14b55
2023-02-03T19:11:49.100+0200 DEBUG Adding type registration url -> org.hibernate.type.BasicTypeReference@39ad977d
2023-02-03T19:11:49.100+0200 DEBUG Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@39ad977d
2023-02-03T19:11:49.100+0200 DEBUG Adding type registration row_version -> org.hibernate.type.BasicTypeReference@6da00fb9
2023-02-03T19:11:49.108+0200 DEBUG Adding type registration object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-02-03T19:11:49.109+0200 DEBUG Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7fc6de5b
2023-02-03T19:11:49.112+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@4a891c97
2023-02-03T19:11:49.112+0200 DEBUG Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@a5bd950
2023-02-03T19:11:49.113+0200 DEBUG Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4d18aa28
2023-02-03T19:11:49.113+0200 DEBUG Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@75390459
2023-02-03T19:11:49.113+0200 DEBUG Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7756c3cd
2023-02-03T19:11:49.113+0200 DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2313052e
2023-02-03T19:11:49.113+0200 DEBUG Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2bd2b28e
2023-02-03T19:11:49.113+0200 DEBUG Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@16746061
2023-02-03T19:11:49.114+0200 DEBUG Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@57fd91c9
2023-02-03T19:11:49.180+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-02-03T19:11:49.193+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-02-03T19:11:49.193+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-02-03T19:11:49.193+0200 INFO HHH10001001: Connection properties: {password=cisco, user=root}
2023-02-03T19:11:49.194+0200 INFO HHH10001003: Autocommit mode: false
2023-02-03T19:11:49.197+0200 DEBUG Initializing Connection pool with 1 Connections
2023-02-03T19:11:49.198+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-02-03T19:11:49.948+0200 DEBUG Database ->
       name : MySQL
    version : 8.0.31
      major : 8
      minor : 0
2023-02-03T19:11:49.948+0200 DEBUG Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.30 (Revision: 1de2fe873fe26189564c030a343885011412976a)
      major : 8
      minor : 0
2023-02-03T19:11:49.948+0200 DEBUG JDBC version : 4.2
2023-02-03T19:11:50.020+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-02-03T19:11:50.028+0200 DEBUG JDBC driver metadata reported database stores quoted identifiers in more than one case
2023-02-03T19:11:50.029+0200 DEBUG IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2023-02-03T19:11:50.054+0200 DEBUG addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2032e725) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@4d23015c)
2023-02-03T19:11:50.055+0200 DEBUG addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@383f1975) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@441cc260)
2023-02-03T19:11:50.055+0200 DEBUG addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@73a00e09) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@26dcd8c0)
2023-02-03T19:11:50.055+0200 DEBUG addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@66e889df) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@444548a0)
2023-02-03T19:11:50.055+0200 DEBUG addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3766c667) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@773c0293)
2023-02-03T19:11:50.055+0200 DEBUG addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@55b8dbda) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3b569985)
2023-02-03T19:11:50.056+0200 DEBUG addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3a022576) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@2dbd803f)
2023-02-03T19:11:50.056+0200 DEBUG addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@3e48e859) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@31ddd4a4)
2023-02-03T19:11:50.056+0200 DEBUG addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1a5f7e7c) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5b22b970)
2023-02-03T19:11:50.058+0200 DEBUG addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2023-02-03T19:11:50.059+0200 DEBUG addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2023-02-03T19:11:50.059+0200 DEBUG addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2023-02-03T19:11:50.069+0200 DEBUG addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-02-03T19:11:50.070+0200 DEBUG addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2023-02-03T19:11:50.074+0200 DEBUG Adding type registration null -> org.hibernate.type.NullType@70abf9b0
2023-02-03T19:11:50.074+0200 DEBUG Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4a891c97`
2023-02-03T19:11:50.088+0200 DEBUG Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@1(java.time.OffsetDateTime,3003)
2023-02-03T19:11:50.089+0200 DEBUG Adding type registration OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-02-03T19:11:50.089+0200 DEBUG Adding type registration java.time.OffsetDateTime -> basicType@1(java.time.OffsetDateTime,3003)
2023-02-03T19:11:50.089+0200 DEBUG Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@2(java.time.ZonedDateTime,3003)
2023-02-03T19:11:50.089+0200 DEBUG Adding type registration ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-02-03T19:11:50.089+0200 DEBUG Adding type registration java.time.ZonedDateTime -> basicType@2(java.time.ZonedDateTime,3003)
2023-02-03T19:11:50.092+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71870da7]
2023-02-03T19:11:50.144+0200 DEBUG Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2023-02-03T19:11:50.199+0200 DEBUG Binding entity from annotated class: edu.itstep.sql.Users
2023-02-03T19:11:50.232+0200 DEBUG Import with entity name Users
2023-02-03T19:11:50.265+0200 DEBUG Bind entity edu.itstep.sql.Users on table users
2023-02-03T19:11:50.291+0200 DEBUG Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
2023-02-03T19:11:50.320+0200 DEBUG Binding column: AnnotatedColumn(column='id')
2023-02-03T19:11:50.324+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-02-03T19:11:50.324+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-02-03T19:11:50.328+0200 DEBUG MetadataSourceProcessor property id with lazy=false
2023-02-03T19:11:50.336+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:id]
2023-02-03T19:11:50.348+0200 DEBUG building BasicValue for id
2023-02-03T19:11:50.354+0200 DEBUG Skipping column re-registration: users.id
2023-02-03T19:11:50.355+0200 DEBUG Building property id
2023-02-03T19:11:50.359+0200 DEBUG #makeIdGenerator(BasicValue([Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2023-02-03T19:11:50.360+0200 DEBUG Binding column: AnnotatedColumn(column='password')
2023-02-03T19:11:50.361+0200 DEBUG MetadataSourceProcessor property password with lazy=false
2023-02-03T19:11:50.361+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:password]
2023-02-03T19:11:50.361+0200 DEBUG building BasicValue for password
2023-02-03T19:11:50.361+0200 DEBUG Skipping column re-registration: users.password
2023-02-03T19:11:50.361+0200 DEBUG Building property password
2023-02-03T19:11:50.362+0200 DEBUG Binding column: AnnotatedColumn(column='user_name')
2023-02-03T19:11:50.362+0200 DEBUG MetadataSourceProcessor property userName with lazy=false
2023-02-03T19:11:50.362+0200 DEBUG Attempting to locate auto-apply AttributeConverter for property [edu.itstep.sql.Users:userName]
2023-02-03T19:11:50.362+0200 DEBUG building BasicValue for userName
2023-02-03T19:11:50.362+0200 DEBUG Skipping column re-registration: users.user_name
2023-02-03T19:11:50.363+0200 DEBUG Building property userName
2023-02-03T19:11:50.374+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for id
2023-02-03T19:11:50.374+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for password
2023-02-03T19:11:50.377+0200 DEBUG Starting `BasicValueBinder#fillSimpleValue` for userName
2023-02-03T19:11:50.380+0200 DEBUG Forcing column [id] to be non-null as it is part of the primary key for table [users]
2023-02-03T19:11:50.572+0200 DEBUG Building session factory
2023-02-03T19:11:50.654+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-02-03T19:11:50.663+0200 DEBUG Session factory constructed with filter configurations : {}
2023-02-03T19:11:50.667+0200 DEBUG Instantiating session factory with properties: {hibernate.format_sql=false, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.class.path=C:\Users\User\IdeaProjects\javacourse2022-maven\sql-module\target\classes;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.30\mysql-connector-java-8.0.30.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.19.4\protobuf-java-3.19.4.jar;C:\Users\User\.m2\repository\org\xerial\sqlite-jdbc\3.39.3.0\sqlite-jdbc-3.39.3.0.jar;C:\Users\User\.m2\repository\mysql\mysql-connector-java\8.0.21\mysql-connector-java-8.0.21.jar;C:\Users\User\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\User\.m2\repository\org\hibernate\orm\hibernate-core\6.2.0.CR1\hibernate-core-6.2.0.CR1.jar;C:\Users\User\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\User\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.0\jakarta.transaction-api-2.0.0.jar;C:\Users\User\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\User\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.5.Final\hibernate-commons-annotations-6.0.5.Final.jar;C:\Users\User\.m2\repository\io\smallrye\jandex\3.0.3\jandex-3.0.3.jar;C:\Users\User\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\User\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\User\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\3.0.1\jakarta.xml.bind-api-3.0.1.jar;C:\Users\User\.m2\repository\com\sun\activation\jakarta.activation\2.0.1\jakarta.activation-2.0.1.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-runtime\3.0.2\jaxb-runtime-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\jaxb-core\3.0.2\jaxb-core-3.0.2.jar;C:\Users\User\.m2\repository\org\glassfish\jaxb\txw2\3.0.2\txw2-3.0.2.jar;C:\Users\User\.m2\repository\com\sun\istack\istack-commons-runtime\4.0.1\istack-commons-runtime-4.0.1.jar;C:\Users\User\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.0\jakarta.inject-api-2.0.0.jar;C:\Users\User\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\User\.m2\repository\org\mindrot\jbcrypt\0.4\jbcrypt-0.4.jar;C:\Users\User\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\User\.m2\repository\com\github\spotbugs\spotbugs-annotations\4.7.3\spotbugs-annotations-4.7.3.jar;C:\Users\User\.m2\repository\com\google\code\findbugs\jsr305\3.0.2\jsr305-3.0.2.jar;C:\Users\User\.m2\repository\org\jetbrains\annotations\20.1.0\annotations-20.1.0.jar, java.vm.vendor=Amazon.com Inc., sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=https://aws.amazon.com/corretto/, user.timezone=Europe/Kiev, java.vm.specification.version=17, os.name=Windows 10, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin, sun.java.command=edu.itstep.sql.HibernateOps, hibernate.use_sql_comments=false, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\User, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-01-17, java.home=C:\Users\User\.jdks\corretto-17.0.6, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, connection.password=cisco, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.6+10-LTS, user.name=User, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://127.0.0.1:3306/albums, connection.pool_size=3, file.encoding=UTF-8, format_sql=false, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, java.vendor.version=Corretto-17.0.6.10.1, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://github.com/corretto/corretto-17/issues/, java.io.tmpdir=C:\Users\User\AppData\Local\Temp\, java.version=17.0.6, user.dir=C:\Users\User\IdeaProjects\javacourse2022-maven, os.arch=amd64, connection.username=root, use_sql_comments=false, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45e1aa48, native.encoding=UTF-8, java.library.path=C:\Users\User\.jdks\corretto-17.0.6\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Python310\Scripts\;C:\Python310\;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Common Files\Oracle\Java\javapath;D:\app\User\virtual\product\12.2.0\dbhome_1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;;C:\Program Files\Docker\Docker\resources\bin;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Roaming\npm;., java.vendor=Amazon.com Inc., java.vm.info=mixed mode, sharing, java.vm.version=17.0.6+10-LTS, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=3, connection.url=jdbc:mysql://127.0.0.1:3306/albums, java.class.version=61.0}
2023-02-03T19:11:50.688+0200 DEBUG Instantiated session factory
2023-02-03T19:11:50.706+0200 DEBUG Starting QueryPlanCache(2048)
2023-02-03T19:11:50.858+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
2023-02-03T19:11:50.858+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
2023-02-03T19:11:50.860+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
2023-02-03T19:11:50.861+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
2023-02-03T19:11:50.862+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@252dc8c4] under count; prior registration was null
2023-02-03T19:11:50.863+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3968bc60] under every; prior registration was null
2023-02-03T19:11:50.864+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@26f46fa6] under any; prior registration was null
2023-02-03T19:11:50.864+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
2023-02-03T19:11:50.865+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
2023-02-03T19:11:50.866+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
2023-02-03T19:11:50.867+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
2023-02-03T19:11:50.867+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
2023-02-03T19:11:50.867+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
2023-02-03T19:11:50.867+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
2023-02-03T19:11:50.867+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
2023-02-03T19:11:50.867+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
2023-02-03T19:11:50.868+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
2023-02-03T19:11:50.868+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
2023-02-03T19:11:50.869+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
2023-02-03T19:11:50.869+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
2023-02-03T19:11:50.869+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
2023-02-03T19:11:50.869+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
2023-02-03T19:11:50.870+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
2023-02-03T19:11:50.871+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
2023-02-03T19:11:50.873+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@43e9089] under sinh; prior registration was null
2023-02-03T19:11:50.873+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c5dbdf8] under cosh; prior registration was null
2023-02-03T19:11:50.873+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@352c44a8] under tanh; prior registration was null
2023-02-03T19:11:50.874+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884] under pi; prior registration was null
2023-02-03T19:11:50.874+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580] under log; prior registration was null
2023-02-03T19:11:50.874+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
2023-02-03T19:11:50.875+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
2023-02-03T19:11:50.875+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
2023-02-03T19:11:50.875+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
2023-02-03T19:11:50.875+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
2023-02-03T19:11:50.876+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
2023-02-03T19:11:50.876+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
2023-02-03T19:11:50.876+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
2023-02-03T19:11:50.876+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
2023-02-03T19:11:50.876+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
2023-02-03T19:11:50.876+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
2023-02-03T19:11:50.876+0200 DEBUG Registering alternate key : length -> character_length
2023-02-03T19:11:50.878+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb] under position; prior registration was null
2023-02-03T19:11:50.879+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2eae4349] under overlay; prior registration was null
2023-02-03T19:11:50.880+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3804a9a8] under trim; prior registration was null
2023-02-03T19:11:50.881+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@22a6e998] under cast; prior registration was null
2023-02-03T19:11:50.882+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55e42449] under collate; prior registration was null
2023-02-03T19:11:50.883+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@cb7fa71] under extract; prior registration was null
2023-02-03T19:11:50.883+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
2023-02-03T19:11:50.883+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
2023-02-03T19:11:50.884+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@654c7d2d] under ifnull; prior registration was null
2023-02-03T19:11:50.884+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
2023-02-03T19:11:50.884+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
2023-02-03T19:11:50.885+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1e7ab390] under pad; prior registration was null
2023-02-03T19:11:50.886+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@6cd64ee8] under str; prior registration was null
2023-02-03T19:11:50.888+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4b200971] under format; prior registration was null
2023-02-03T19:11:50.889+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@12fcc71f] under timestampadd; prior registration was null
2023-02-03T19:11:50.889+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@79b84841] under timestampdiff; prior registration was null
2023-02-03T19:11:50.890+0200 DEBUG Registering alternate key : dateadd -> timestampadd
2023-02-03T19:11:50.890+0200 DEBUG Registering alternate key : datediff -> timestampdiff
2023-02-03T19:11:50.890+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3c3a0032] under current_date; prior registration was null
2023-02-03T19:11:50.890+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ceb4478] under current_time; prior registration was null
2023-02-03T19:11:50.890+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fdab70c] under current_timestamp; prior registration was null
2023-02-03T19:11:50.890+0200 DEBUG Registering alternate key : current date -> current_date
2023-02-03T19:11:50.891+0200 DEBUG Registering alternate key : current time -> current_time
2023-02-03T19:11:50.891+0200 DEBUG Registering alternate key : current timestamp -> current_timestamp
2023-02-03T19:11:50.891+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@25ad4f71] under local_date; prior registration was null
2023-02-03T19:11:50.891+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@49faf066] under local_time; prior registration was null
2023-02-03T19:11:50.891+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6f94a5a5] under local_datetime; prior registration was null
2023-02-03T19:11:50.891+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@455c1d8c] under offset_datetime; prior registration was null
2023-02-03T19:11:50.892+0200 DEBUG Registering alternate key : local date -> local_date
2023-02-03T19:11:50.892+0200 DEBUG Registering alternate key : local time -> local_time
2023-02-03T19:11:50.892+0200 DEBUG Registering alternate key : local datetime -> local_datetime
2023-02-03T19:11:50.892+0200 DEBUG Registering alternate key : offset datetime -> offset_datetime
2023-02-03T19:11:50.892+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a451491] under instant; prior registration was null
2023-02-03T19:11:50.892+0200 DEBUG Registering alternate key : current_instant -> instant
2023-02-03T19:11:50.893+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@59072e9d] under sql; prior registration was null
2023-02-03T19:11:50.893+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
2023-02-03T19:11:50.893+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
2023-02-03T19:11:50.894+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
2023-02-03T19:11:50.894+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
2023-02-03T19:11:50.894+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log)] under log; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a66e580
2023-02-03T19:11:50.894+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log2)] under log2; prior registration was null
2023-02-03T19:11:50.894+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
2023-02-03T19:11:50.894+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
2023-02-03T19:11:50.895+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
2023-02-03T19:11:50.895+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
2023-02-03T19:11:50.895+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(reverse)] under reverse; prior registration was null
2023-02-03T19:11:50.895+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
2023-02-03T19:11:50.895+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
2023-02-03T19:11:50.896+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@337bbfdf] under lpad; prior registration was NamedSqmFunctionTemplate(lpad)
2023-02-03T19:11:50.897+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@52d97ab6] under rpad; prior registration was NamedSqmFunctionTemplate(rpad)
2023-02-03T19:11:50.897+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(md5)] under md5; prior registration was null
2023-02-03T19:11:50.897+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
2023-02-03T19:11:50.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
2023-02-03T19:11:50.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
2023-02-03T19:11:50.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
2023-02-03T19:11:50.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
2023-02-03T19:11:50.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
2023-02-03T19:11:50.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
2023-02-03T19:11:50.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofweek)] under dayofweek; prior registration was null
2023-02-03T19:11:50.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofmonth)] under dayofmonth; prior registration was null
2023-02-03T19:11:50.898+0200 DEBUG Registering alternate key : day -> dayofmonth
2023-02-03T19:11:50.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayofyear)] under dayofyear; prior registration was null
2023-02-03T19:11:50.898+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
2023-02-03T19:11:50.899+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
2023-02-03T19:11:50.899+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
2023-02-03T19:11:50.899+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
2023-02-03T19:11:50.899+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_day)] under last_day; prior registration was null
2023-02-03T19:11:50.899+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(date)] under date; prior registration was null
2023-02-03T19:11:50.899+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(timestamp)] under timestamp; prior registration was null
2023-02-03T19:11:50.899+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(time)] under time; prior registration was null
2023-02-03T19:11:50.899+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_date)] under utc_date; prior registration was null
2023-02-03T19:11:50.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_time)] under utc_time; prior registration was null
2023-02-03T19:11:50.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(utc_timestamp)] under utc_timestamp; prior registration was null
2023-02-03T19:11:50.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
2023-02-03T19:11:50.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(crc32)] under crc32; prior registration was null
2023-02-03T19:11:50.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha1)] under sha1; prior registration was null
2023-02-03T19:11:50.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha2)] under sha2; prior registration was null
2023-02-03T19:11:50.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sha)] under sha; prior registration was null
2023-02-03T19:11:50.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
2023-02-03T19:11:50.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
2023-02-03T19:11:50.900+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
2023-02-03T19:11:50.901+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
2023-02-03T19:11:50.901+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
2023-02-03T19:11:50.901+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4da6d664] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@4c6007fb
2023-02-03T19:11:50.901+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
2023-02-03T19:11:50.901+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
2023-02-03T19:11:50.901+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
2023-02-03T19:11:50.901+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.MultipatternSqmFunctionDescriptor@5e5af8e1] under trunc; prior registration was null
2023-02-03T19:11:50.901+0200 DEBUG Registering alternate key : truncate -> trunc
2023-02-03T19:11:50.901+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
2023-02-03T19:11:50.902+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30b131b2] under bitand; prior registration was null
2023-02-03T19:11:50.902+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2924f1d8] under bitor; prior registration was null
2023-02-03T19:11:50.902+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@524a076e] under bitxor; prior registration was null
2023-02-03T19:11:50.902+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b5e7036] under bitnot; prior registration was null
2023-02-03T19:11:50.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
2023-02-03T19:11:50.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
2023-02-03T19:11:50.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev)] under stddev; prior registration was null
2023-02-03T19:11:50.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
2023-02-03T19:11:50.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
2023-02-03T19:11:50.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(variance)] under variance; prior registration was null
2023-02-03T19:11:50.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
2023-02-03T19:11:50.902+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
2023-02-03T19:11:50.903+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(datediff)] under datediff; prior registration was null
2023-02-03T19:11:50.903+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(adddate)] under adddate; prior registration was null
2023-02-03T19:11:50.903+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subdate)] under subdate; prior registration was null
2023-02-03T19:11:50.903+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(addtime)] under addtime; prior registration was null
2023-02-03T19:11:50.903+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(subtime)] under subtime; prior registration was null
2023-02-03T19:11:50.903+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@62dbe64e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4b200971
2023-02-03T19:11:50.903+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(makedate)] under makedate; prior registration was null
2023-02-03T19:11:50.903+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(maketime)] under maketime; prior registration was null
2023-02-03T19:11:50.903+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
2023-02-03T19:11:50.903+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
2023-02-03T19:11:50.903+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@49faf066
2023-02-03T19:11:50.903+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6f94a5a5
2023-02-03T19:11:50.903+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was NamedSqmFunctionTemplate(localtime)
2023-02-03T19:11:50.904+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cff61fc] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aac8884
2023-02-03T19:11:50.904+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6e0c6a7a] under chr; prior registration was null
2023-02-03T19:11:50.904+0200 DEBUG Registering alternate key : char -> chr
2023-02-03T19:11:50.905+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@467b684d] under sysdate; prior registration was null
2023-02-03T19:11:50.906+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
2023-02-03T19:11:50.907+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
2023-02-03T19:11:50.907+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
2023-02-03T19:11:50.907+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
2023-02-03T19:11:50.907+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
2023-02-03T19:11:50.908+0200 DEBUG Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
2023-02-03T19:11:50.909+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@1aad0b1] under rank; prior registration was null
2023-02-03T19:11:50.909+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@c3edf4c] under dense_rank; prior registration was null
2023-02-03T19:11:50.910+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@5af8bb51] under percent_rank; prior registration was null
2023-02-03T19:11:50.910+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetWindowEmulation@799ed4e8] under cume_dist; prior registration was null
2023-02-03T19:11:50.910+0200 DEBUG Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggGroupConcatEmulation@44536de4] under listagg; prior registration was null
2023-02-03T19:11:50.934+0200 DEBUG abs(NUMERIC arg)
2023-02-03T19:11:50.934+0200 DEBUG Double acos(NUMERIC arg)
2023-02-03T19:11:50.934+0200 DEBUG adddate(DATE datetime, INTEGER days)
2023-02-03T19:11:50.934+0200 DEBUG addtime(TIME datetime, TIME time)
2023-02-03T19:11:50.934+0200 DEBUG Boolean any(BOOLEAN arg)
2023-02-03T19:11:50.934+0200 DEBUG Integer ascii(STRING arg)
2023-02-03T19:11:50.934+0200 DEBUG Double asin(NUMERIC arg)
2023-02-03T19:11:50.935+0200 DEBUG Double atan(NUMERIC arg)
2023-02-03T19:11:50.937+0200 DEBUG Double atan2(NUMERIC arg0, NUMERIC arg1)
2023-02-03T19:11:50.938+0200 DEBUG Double avg(NUMERIC arg)
2023-02-03T19:11:50.938+0200 DEBUG bit_and(arg)
2023-02-03T19:11:50.938+0200 DEBUG Integer bit_length(STRING_OR_CLOB arg)
2023-02-03T19:11:50.938+0200 DEBUG bit_or(arg)
2023-02-03T19:11:50.938+0200 DEBUG bitand(arg0, arg1)
2023-02-03T19:11:50.938+0200 DEBUG bitnot(arg)
2023-02-03T19:11:50.938+0200 DEBUG bitor(arg0, arg1)
2023-02-03T19:11:50.938+0200 DEBUG bitxor(arg0, arg1)
2023-02-03T19:11:50.938+0200 DEBUG cast(arg as Type)
2023-02-03T19:11:50.938+0200 DEBUG ceiling(NUMERIC arg)
2023-02-03T19:11:50.938+0200 DEBUG Integer character_length(STRING_OR_CLOB arg)
2023-02-03T19:11:50.938+0200 DEBUG Character chr(INTEGER arg)
2023-02-03T19:11:50.938+0200 DEBUG coalesce(arg0[, arg1[, ...]])
2023-02-03T19:11:50.938+0200 DEBUG String collate(STRING string as COLLATION collation)
2023-02-03T19:11:50.938+0200 DEBUG String concat(STRING string0[, STRING string1[, ...]])
2023-02-03T19:11:50.938+0200 DEBUG Double cos(NUMERIC arg)
2023-02-03T19:11:50.938+0200 DEBUG Double cosh(NUMERIC arg)
2023-02-03T19:11:50.938+0200 DEBUG Double cot(NUMERIC arg)
2023-02-03T19:11:50.939+0200 DEBUG Long count([distinct ]{arg|*})
2023-02-03T19:11:50.939+0200 DEBUG Integer crc32(arg)
2023-02-03T19:11:50.939+0200 DEBUG Double cume_dist([arg0[, ...]])
2023-02-03T19:11:50.939+0200 DEBUG Date curdate()
2023-02-03T19:11:50.939+0200 DEBUG Date current_date
2023-02-03T19:11:50.939+0200 DEBUG Time current_time
2023-02-03T19:11:50.939+0200 DEBUG Timestamp current_timestamp
2023-02-03T19:11:50.939+0200 DEBUG Time curtime()
2023-02-03T19:11:50.939+0200 DEBUG Date date(arg)
2023-02-03T19:11:50.939+0200 DEBUG Integer datediff(DATE end, DATE start)
2023-02-03T19:11:50.939+0200 DEBUG Integer day(DATE arg)
2023-02-03T19:11:50.939+0200 DEBUG String dayname(DATE arg)
2023-02-03T19:11:50.939+0200 DEBUG Integer dayofmonth(DATE arg)
2023-02-03T19:11:50.940+0200 DEBUG Integer dayofweek(DATE arg)
2023-02-03T19:11:50.940+0200 DEBUG Integer dayofyear(DATE arg)
2023-02-03T19:11:50.940+0200 DEBUG Double degrees(NUMERIC arg)
2023-02-03T19:11:50.940+0200 DEBUG Long dense_rank([arg0[, ...]])
2023-02-03T19:11:50.940+0200 DEBUG Boolean every(BOOLEAN arg)
2023-02-03T19:11:50.940+0200 DEBUG Double exp(NUMERIC arg)
2023-02-03T19:11:50.940+0200 DEBUG extract(TEMPORAL_UNIT field from TEMPORAL arg)
2023-02-03T19:11:50.940+0200 DEBUG first_valueANY value
2023-02-03T19:11:50.940+0200 DEBUG floor(NUMERIC arg)
2023-02-03T19:11:50.940+0200 DEBUG String format(TEMPORAL datetime as STRING pattern)
2023-02-03T19:11:50.940+0200 DEBUG greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-02-03T19:11:50.940+0200 DEBUG Integer hour(TIME arg)
2023-02-03T19:11:50.941+0200 DEBUG ifnull(arg0, arg1)
2023-02-03T19:11:50.941+0200 DEBUG String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
2023-02-03T19:11:50.941+0200 DEBUG Instant instant
2023-02-03T19:11:50.941+0200 DEBUG Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
2023-02-03T19:11:50.941+0200 DEBUG lagANY value[, INTEGER offset[, ANY default]]
2023-02-03T19:11:50.941+0200 DEBUG Date last_day(DATE arg)
2023-02-03T19:11:50.941+0200 DEBUG last_valueANY value
2023-02-03T19:11:50.941+0200 DEBUG leadANY value[, INTEGER offset[, ANY default]]
2023-02-03T19:11:50.941+0200 DEBUG least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
2023-02-03T19:11:50.941+0200 DEBUG String left(STRING string, INTEGER length)
2023-02-03T19:11:50.941+0200 DEBUG String listagg(STRING arg0, STRING arg1)
2023-02-03T19:11:50.941+0200 DEBUG Double ln(NUMERIC arg)
2023-02-03T19:11:50.941+0200 DEBUG LocalDate local_date
2023-02-03T19:11:50.942+0200 DEBUG LocalDateTime local_datetime
2023-02-03T19:11:50.942+0200 DEBUG LocalTime local_time
2023-02-03T19:11:50.942+0200 DEBUG Timestamp localtime
2023-02-03T19:11:50.942+0200 DEBUG Timestamp localtimestamp
2023-02-03T19:11:50.942+0200 DEBUG Integer locate(STRING pattern, STRING string[, INTEGER start])
2023-02-03T19:11:50.942+0200 DEBUG Double log(NUMERIC arg0[, NUMERIC arg1])
2023-02-03T19:11:50.942+0200 DEBUG Double log10(NUMERIC arg)
2023-02-03T19:11:50.942+0200 DEBUG Double log2(NUMERIC arg)
2023-02-03T19:11:50.942+0200 DEBUG String lower(STRING string)
2023-02-03T19:11:50.942+0200 DEBUG String lpad(string, length[, padding])
2023-02-03T19:11:50.942+0200 DEBUG String ltrim(STRING string[, STRING characters])
2023-02-03T19:11:50.942+0200 DEBUG Date makedate(INTEGER year, INTEGER dayofyear)
2023-02-03T19:11:50.942+0200 DEBUG Time maketime(INTEGER hour, INTEGER min, INTEGER sec)
2023-02-03T19:11:50.943+0200 DEBUG max(COMPARABLE arg)
2023-02-03T19:11:50.943+0200 DEBUG String md5(arg)
2023-02-03T19:11:50.943+0200 DEBUG Integer microsecond(TIME arg)
2023-02-03T19:11:50.943+0200 DEBUG min(COMPARABLE arg)
2023-02-03T19:11:50.943+0200 DEBUG Integer minute(TIME arg)
2023-02-03T19:11:50.943+0200 DEBUG Integer mod(INTEGER arg0, INTEGER arg1)
2023-02-03T19:11:50.943+0200 DEBUG Integer month(DATE arg)
2023-02-03T19:11:50.943+0200 DEBUG String monthname(DATE arg)
2023-02-03T19:11:50.943+0200 DEBUG Timestamp now()
2023-02-03T19:11:50.943+0200 DEBUG nth_valueANY value, INTEGER nth
2023-02-03T19:11:50.943+0200 DEBUG nullif(arg0, arg1)
2023-02-03T19:11:50.943+0200 DEBUG Integer octet_length(STRING_OR_CLOB arg)
2023-02-03T19:11:50.943+0200 DEBUG OffsetDateTime offset_datetime
2023-02-03T19:11:50.944+0200 DEBUG String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
2023-02-03T19:11:50.944+0200 DEBUG String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
2023-02-03T19:11:50.944+0200 DEBUG Double percent_rank([arg0[, ...]])
2023-02-03T19:11:50.944+0200 DEBUG Double pi
2023-02-03T19:11:50.944+0200 DEBUG Integer position(STRING pattern in STRING string)
2023-02-03T19:11:50.944+0200 DEBUG Double power(NUMERIC arg0, NUMERIC arg1)
2023-02-03T19:11:50.944+0200 DEBUG Integer quarter(DATE arg)
2023-02-03T19:11:50.944+0200 DEBUG Double radians(NUMERIC arg)
2023-02-03T19:11:50.944+0200 DEBUG Double rand([INTEGER seed])
2023-02-03T19:11:50.944+0200 DEBUG Long rank([arg0[, ...]])
2023-02-03T19:11:50.944+0200 DEBUG String repeat(STRING string, INTEGER times)
2023-02-03T19:11:50.944+0200 DEBUG String replace(STRING string, STRING pattern, STRING replacement)
2023-02-03T19:11:50.944+0200 DEBUG String reverse(STRING arg)
2023-02-03T19:11:50.944+0200 DEBUG String right(STRING string, INTEGER length)
2023-02-03T19:11:50.944+0200 DEBUG round(NUMERIC number[, INTEGER places])
2023-02-03T19:11:50.945+0200 DEBUG Long row_number()
2023-02-03T19:11:50.945+0200 DEBUG String rpad(string, length[, padding])
2023-02-03T19:11:50.945+0200 DEBUG String rtrim(STRING string[, STRING characters])
2023-02-03T19:11:50.945+0200 DEBUG Integer second(TIME arg)
2023-02-03T19:11:50.945+0200 DEBUG String sha(arg)
2023-02-03T19:11:50.945+0200 DEBUG String sha1(arg)
2023-02-03T19:11:50.945+0200 DEBUG String sha2(arg0, arg1)
2023-02-03T19:11:50.946+0200 DEBUG Integer sign(NUMERIC arg)
2023-02-03T19:11:50.947+0200 DEBUG Double sin(NUMERIC arg)
2023-02-03T19:11:50.947+0200 DEBUG Double sinh(NUMERIC arg)
2023-02-03T19:11:50.947+0200 DEBUG String soundex(arg)
2023-02-03T19:11:50.947+0200 DEBUG String space(INTEGER arg)
2023-02-03T19:11:50.947+0200 DEBUG Object sql
2023-02-03T19:11:50.947+0200 DEBUG Double sqrt(NUMERIC arg)
2023-02-03T19:11:50.948+0200 DEBUG Double stddev(NUMERIC arg)
2023-02-03T19:11:50.948+0200 DEBUG Double stddev_pop(NUMERIC arg)
2023-02-03T19:11:50.948+0200 DEBUG Double stddev_samp(NUMERIC arg)
2023-02-03T19:11:50.948+0200 DEBUG String str(arg)
2023-02-03T19:11:50.948+0200 DEBUG subdate(DATE datetime, INTEGER days)
2023-02-03T19:11:50.948+0200 DEBUG String substr(STRING string, INTEGER start[, INTEGER length])
2023-02-03T19:11:50.948+0200 DEBUG String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
2023-02-03T19:11:50.948+0200 DEBUG subtime(TIME datetime, TIME time)
2023-02-03T19:11:50.948+0200 DEBUG sum(arg)
2023-02-03T19:11:50.948+0200 DEBUG Timestamp sysdate()
2023-02-03T19:11:50.948+0200 DEBUG Double tan(NUMERIC arg)
2023-02-03T19:11:50.948+0200 DEBUG Double tanh(NUMERIC arg)
2023-02-03T19:11:50.948+0200 DEBUG String time(arg)
2023-02-03T19:11:50.948+0200 DEBUG Timestamp timestamp(arg0[, arg1])
2023-02-03T19:11:50.948+0200 DEBUG timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-02-03T19:11:50.949+0200 DEBUG basicType@5(java.lang.Long,-5)|basicType@15(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
2023-02-03T19:11:50.949+0200 DEBUG String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
2023-02-03T19:11:50.949+0200 DEBUG trunc(NUMERIC number[, INTEGER places])
2023-02-03T19:11:50.949+0200 DEBUG String upper(STRING string)
2023-02-03T19:11:50.949+0200 DEBUG Date utc_date
2023-02-03T19:11:50.949+0200 DEBUG Time utc_time
2023-02-03T19:11:50.949+0200 DEBUG Timestamp utc_timestamp
2023-02-03T19:11:50.949+0200 DEBUG Double var_pop(NUMERIC arg)
2023-02-03T19:11:50.949+0200 DEBUG Double var_samp(NUMERIC arg)
2023-02-03T19:11:50.949+0200 DEBUG Double variance(NUMERIC arg)
2023-02-03T19:11:50.950+0200 DEBUG Integer week(DATE arg)
2023-02-03T19:11:50.950+0200 DEBUG Integer year(DATE arg)
2023-02-03T19:11:50.951+0200 DEBUG Character char(INTEGER arg)
2023-02-03T19:11:50.951+0200 DEBUG Date current date
2023-02-03T19:11:50.951+0200 DEBUG Time current time
2023-02-03T19:11:50.951+0200 DEBUG Timestamp current timestamp
2023-02-03T19:11:50.951+0200 DEBUG Instant current_instant
2023-02-03T19:11:50.951+0200 DEBUG dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
2023-02-03T19:11:50.951+0200 DEBUG Integer day(DATE arg)
2023-02-03T19:11:50.951+0200 DEBUG Integer length(STRING_OR_CLOB arg)
2023-02-03T19:11:50.951+0200 DEBUG LocalDate local date
2023-02-03T19:11:50.951+0200 DEBUG LocalDateTime local datetime
2023-02-03T19:11:50.951+0200 DEBUG LocalTime local time
2023-02-03T19:11:50.951+0200 DEBUG OffsetDateTime offset datetime
2023-02-03T19:11:50.951+0200 DEBUG truncate(NUMERIC number[, INTEGER places])
2023-02-03T19:11:50.952+0200 DEBUG Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@10876a6] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7ecec90d]
2023-02-03T19:11:51.255+0200 DEBUG Not known whether passed class name [edu.itstep.sql.Users] is safe
2023-02-03T19:11:51.256+0200 DEBUG No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : edu.itstep.sql.Users
2023-02-03T19:11:51.584+0200 DEBUG HHH000513: Unable to create the ReflectionOptimizer for [edu.itstep.sql.Users]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [password]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1250)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:231)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:299)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:165)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:61)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:494)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:167)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:280)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:213)
	at org.hibernate.metamodel.internal.RuntimeMetamodelsImpl.finishInitialization(RuntimeMetamodelsImpl.java:59)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:314)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:415)
	at edu.itstep.sql.HibernateOps.main(HibernateOps.java:25)
2023-02-03T19:11:51.662+0200 DEBUG Starting post-init callbacks
2023-02-03T19:11:51.662+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `staticFetchableList` generator
2023-02-03T19:11:51.663+0200 DEBUG Starting PostInitCallbackEntry : Entity(edu.itstep.sql.Users) `sqmMultiTableInsertStrategy` interpretation
2023-02-03T19:11:51.757+0200 DEBUG Static SQL for entity: edu.itstep.sql.Users
2023-02-03T19:11:51.757+0200 DEBUG  Version select: select id from users where id =?
2023-02-03T19:11:51.757+0200 DEBUG  Insert (0): insert into users (password,user_name,id) values (?,?,?)
2023-02-03T19:11:51.757+0200 DEBUG  Update (0): update users set password=?,user_name=? where id=?
2023-02-03T19:11:51.757+0200 DEBUG  Delete (0): delete from users where id=?
2023-02-03T19:11:51.779+0200 DEBUG Created new SQL alias : u1_0
2023-02-03T19:11:51.782+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users)] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-02-03T19:11:51.802+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users]
 |  +-BasicFetch [edu.itstep.sql.Users.password]
 |  \-BasicFetch [edu.itstep.sql.Users.userName]

2023-02-03T19:11:51.813+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-02-03T19:11:51.962+0200 DEBUG Checking 0 named HQL queries
2023-02-03T19:11:51.962+0200 DEBUG Checking 0 named SQL queries
2023-02-03T19:11:52.054+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7e7743ec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-02-03T19:11:52.149+0200 DEBUG No alter strings for table : users
2023-02-03T19:11:52.150+0200 DEBUG No alter strings for table : users_SEQ
2023-02-03T19:11:52.173+0200 DEBUG EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2023-02-03T19:11:52.174+0200 DEBUG Configured EntityCopyObserver strategy: disallow
2023-02-03T19:11:52.188+0200 DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@69a024a0
2023-02-03T19:11:52.190+0200 DEBUG Registering SessionFactory: 3925c017-e397-4a5d-a5db-c26e5512d9ba (<unnamed>)
2023-02-03T19:11:52.190+0200 DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2023-02-03T19:11:52.344+0200 DEBUG Statistics initialized [enabled=false]
2023-02-03T19:11:52.354+0200 DEBUG On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2023-02-03T19:11:52.354+0200 DEBUG begin
2023-02-03T19:11:52.390+0200 DEBUG HQL : from Users
2023-02-03T19:11:52.659+0200 DEBUG Handling root path - Users
2023-02-03T19:11:52.678+0200 DEBUG Encountered implicit select clause : fromUsers
2023-02-03T19:11:52.693+0200 DEBUG SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `edu.itstep.sql.Users(87679665859400)`
            <- [root] - `edu.itstep.sql.Users(87679665859400)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `edu.itstep.sql.Users(87679665859400)`
          <- [root] - `edu.itstep.sql.Users(87679665859400)`
        <- [from]
      <- [query-spec]
    <- [select]

2023-02-03T19:11:52.732+0200 DEBUG Created new SQL alias : u1_0
2023-02-03T19:11:52.733+0200 DEBUG Registration of TableGroup [StandardTableGroup(edu.itstep.sql.Users(87679665859400))] with identifierForTableGroup [edu.itstep.sql.Users] for NavigablePath [edu.itstep.sql.Users] 
2023-02-03T19:11:52.743+0200 DEBUG DomainResult Graph:
 \-EntityResultImpl [edu.itstep.sql.Users(87679665859400)]
 |  +-BasicFetch [edu.itstep.sql.Users(87679665859400).password]
 |  \-BasicFetch [edu.itstep.sql.Users(87679665859400).userName]

2023-02-03T19:11:52.743+0200 DEBUG SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (u1 : edu.itstep.sql.Users(87679665859400)) {
          primaryTableReference : users as u1_0
        }
      }
    }

2023-02-03T19:11:52.761+0200 DEBUG Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
2023-02-03T19:11:52.773+0200 DEBUG Initializer list
2023-02-03T19:11:52.774+0200 DEBUG     edu.itstep.sql.Users(87679665859400) -> EntityResultInitializer(edu.itstep.sql.Users(87679665859400))@1659537713 (SingleTableEntityPersister(edu.itstep.sql.Users))
2023-02-03T19:11:52.778+0200 DEBUG select u1_0.id,u1_0.password,u1_0.user_name from users u1_0
2023-02-03T19:11:52.785+0200 DEBUG Extracted JDBC value [0] - [352]
2023-02-03T19:11:52.785+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(87679665859400)): 352
2023-02-03T19:11:52.795+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(87679665859400)#352] : Users{id=352, userName='null', password='null'}
2023-02-03T19:11:52.796+0200 DEBUG Extracted JDBC value [1] - [test]
2023-02-03T19:11:52.796+0200 DEBUG Extracted JDBC value [2] - [user104]
2023-02-03T19:11:52.803+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(87679665859400)#352
2023-02-03T19:11:52.803+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-02-03T19:11:52.804+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(87679665859400)#352] - using loading instance
2023-02-03T19:11:52.804+0200 DEBUG Extracted JDBC value [0] - [402]
2023-02-03T19:11:52.804+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(87679665859400)): 402
2023-02-03T19:11:52.805+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(87679665859400)#402] : Users{id=402, userName='null', password='null'}
2023-02-03T19:11:52.806+0200 DEBUG Extracted JDBC value [1] - [$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm]
2023-02-03T19:11:52.806+0200 DEBUG Extracted JDBC value [2] - [user105]
2023-02-03T19:11:52.806+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(87679665859400)#402
2023-02-03T19:11:52.806+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-02-03T19:11:52.807+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(87679665859400)#402] - using loading instance
2023-02-03T19:11:52.807+0200 DEBUG Extracted JDBC value [0] - [452]
2023-02-03T19:11:52.807+0200 DEBUG (EntityResultInitializer) Hydrated EntityKey (edu.itstep.sql.Users(87679665859400)): 452
2023-02-03T19:11:52.807+0200 DEBUG (EntityResultInitializer) Created new entity instance [edu.itstep.sql.Users(87679665859400)#452] : Users{id=452, userName='null', password='null'}
2023-02-03T19:11:52.807+0200 DEBUG Extracted JDBC value [1] - [$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i]
2023-02-03T19:11:52.807+0200 DEBUG Extracted JDBC value [2] - [null]
2023-02-03T19:11:52.807+0200 DEBUG (EntityResultInitializer) Done materializing entityInstance : edu.itstep.sql.Users(87679665859400)#452
2023-02-03T19:11:52.807+0200 DEBUG Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@96abc76
2023-02-03T19:11:52.808+0200 DEBUG (EntityResultInitializer) Found existing loading entry [edu.itstep.sql.Users(87679665859400)#452] - using loading instance
2023-02-03T19:11:52.811+0200 DEBUG committing
2023-02-03T19:11:52.811+0200 DEBUG Processing flush-time cascades
2023-02-03T19:11:52.814+0200 DEBUG Dirty checking collections
2023-02-03T19:11:52.821+0200 DEBUG Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2023-02-03T19:11:52.821+0200 DEBUG Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2023-02-03T19:11:52.823+0200 DEBUG Listing entities:
2023-02-03T19:11:52.824+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$1pkbPkwGNshnaOkpyYA3LeTktd.XOEi/rXwFbVxtS3vWsL.6tj09i, id=452, userName=null}
2023-02-03T19:11:52.824+0200 DEBUG edu.itstep.sql.Users{password=$2a$10$ZdG9IIJQhqrdpI16uYqt6e/DEVM1hDNZeIW2p2q9pYnh/.uLTu0hm, id=402, userName=user105}
2023-02-03T19:11:52.824+0200 DEBUG edu.itstep.sql.Users{password=test, id=352, userName=user104}
2023-02-03T19:11:52.832+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-02-03T19:11:52.834+0200 DEBUG Initiating JDBC connection release from afterTransaction
2023-02-03T19:12:09.755+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-02-03T19:12:09.872+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-02-03T19:12:09.877+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-02-03T19:12:11.173+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-02-03T19:12:11.187+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-02-03T19:12:11.187+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-02-03T19:12:11.188+0200 INFO HHH10001001: Connection properties: {password=****, user=root}
2023-02-03T19:12:11.188+0200 INFO HHH10001003: Autocommit mode: false
2023-02-03T19:12:11.193+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-02-03T19:12:11.941+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-02-03T19:12:13.430+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f171912] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2023-02-10T20:35:41.811+0200 DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2023-02-10T20:35:41.907+0200 INFO HHH000412: Hibernate ORM core version 6.2.0.CR1
2023-02-10T20:35:41.912+0200 INFO HHH000406: Using bytecode reflection optimizer
2023-02-10T20:35:43.179+0200 WARN HHH10001002: Using built-in connection pool (not intended for production use)
2023-02-10T20:35:43.212+0200 INFO HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
2023-02-10T20:35:43.212+0200 INFO HHH10001012: Connecting with JDBC URL [jdbc:mysql://127.0.0.1:3306/albums]
2023-02-10T20:35:43.213+0200 INFO HHH10001001: Connection properties: {password=****, user=root}
2023-02-10T20:35:43.213+0200 INFO HHH10001003: Autocommit mode: false
2023-02-10T20:35:43.218+0200 INFO HHH10001115: Connection pool size: 3 (min=1)
2023-02-10T20:35:44.162+0200 INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2023-02-10T20:35:45.918+0200 INFO HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@373052b5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
